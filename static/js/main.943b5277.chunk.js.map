{"version":3,"sources":["components/Header/followers/UpdateNoteRaw.md","components/Header/followers/UpdateNote.js","DataStorage.js","components/Header/followers/Tools.js","components/Header/Header.js","components/atoms/ContentsTable.js","components/Maps/followers/MapsModalInfo.js","components/atoms/Comment.js","components/Maps/followers/MapsModalComment.js","components/atoms/Loading.js","components/Maps/leaders/MapsModal.js","components/Maps/followers/NyamEditor.js","components/supporters/naverMapsInit.js","components/supporters/naverMapsSetNyams.js","components/Maps/Maps.js","components/Footer/Footer.js","App.js","index.js"],"names":["UpdateNote","updateNoteModalVisible","setUpdateNoteModalVisible","useState","markdown","setMarkdown","useEffect","a","fetch","mdSource","then","res","text","str","init","UpdateNoteWrap","className","title","visible","onCancel","footer","style","minWidth","children","styled","div","DataStorage","key","NYAM_TYPES","korea","china","japan","fastfood","cvs","cafe","NYAM_TYPES_KEY","NYAM_LIST_SOURCE","Tools","setFilters","setIsPickmode","setNyamEditorTaskType","arr","obj","forEach","el","initChecked","checked","setChecked","ToolsWrap","placement","content","filterContent","e","target","nyamType","trigger","MenuButton","shape","icon","FilterOutlined","createNyamContent","PlusOutlined","marginLeft","onClick","BookOutlined","onChange","styld","display","flexDirection","map","type","index","margin","Button","Header","HeaderWrap","Logo","h1","ContentsTable","desc","dataOrder","data","ContentsTableWrap","Table","Row","borderWidth","Th","rowItem","colItem","Td","CELL_PADDING","BORDER_COLOR","table","tr","th","td","MapsModalInfo","nyamListSource","selectedNyam","refreshMaps","setIsLoading","setMapsModalVisible","setNyamEditorModalVisible","open","close","description","menu","parsedMenu","JSON","parse","url","stringify","axios","post","message","success","MapsModalInfoWrap","href","removeSpace","name","rel","QuestionCircleOutlined","size","marginRight","SPACE","FormOutlined","DeleteOutlined","handleDelete","Summary","Title","p","string","split","join","Comment","onDelete","CommentWrap","Content","MapsModalComment","newComment","setNewComment","commentsData","comment","id","useCallback","slice","MapsModalCommentWrap","Form","placeholder","value","borderRadius","suffix","onEmojiClick","emoji","SmileOutlined","EditOutlined","Comments","item","Loading","isLoading","LoadingWrap","Backdrop","spinning","indicator","LoadingOutlined","fontSize","spin","MapsModal","mapsModalVisible","MapsModalWrap","StyledModal","ModalContentsWrap","Modal","SUMMARY_INIT_VALUE","lat","lng","MENUITEM_INIT_VALUE","price","NyamEditor","taskType","pickCoord","defaultNyamValue","nyamEditorModalVisible","resetLock","setResetLock","summary","setSummary","menuItems","setMenuItems","initFormData","tempSummary","tempMenuItems","y","x","onChangeSummary","onChangeMenuItems","addNewMenuItem","removeMenuItem","Object","assign","keys","property","warning","strData","console","error","NyamEditorWrap","SummaryWrap","Coord","textAlign","info","StyledInput","TimePickersWrap","format","moment","time","timeString","flexGrow","minuteStep","Option","MenusWrap","MenuItemWrap","StyledButton","MinusOutlined","MenuItem","length","ButtonsWrap","summaryReplace","Input","naverMapsinit","mapValues","center","zoom","mapOptions","window","naver","maps","LatLng","Map","naverMapsSetNyams","setMarkers","setNyams","setSelectedNyam","tempNyams","initWithNyamtype","nyamTypes","tempMarkers","readNyamList","nyamList","org","shift","org_marker","Marker","position","Size","origin","Point","cnt","marker","scaledSize","anchor","addListener","targetid","overlay","types","i","chk","j","push","setZIndex","err","src","get","category","mapSource","Maps","filters","isPickmode","nyamEditorTaskType","nyams","markers","setPickCoord","values","setMap","setMarkersVisible","setCursor","listener","Event","coord","removeListener","findIndex","nyam","MapsWrap","onLoad","dest","getVisible","setVisible","Footer","FooterWrap","Group","Item","App","notification","duration","AppWrap","cursor","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.943b5277.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/UpdateNoteRaw.133416b1.md\";","// imported Modules =============================================\nimport React, { useEffect, useState } from 'react';\nimport { Modal } from \"antd\";\nimport styled from 'styled-components';\nimport ReactMarkdown from 'react-markdown';\n\n// imported components ==========================================\n// *\n\n// Main Component ===============================================\nimport mdSource from \"./UpdateNoteRaw.md\";\n\nexport default function UpdateNote({ updateNoteModalVisible, setUpdateNoteModalVisible}) {\n    const [markdown, setMarkdown] = useState('');\n\n    useEffect( () => {\n        async function init() {\n            const str = await fetch(mdSource)\n            .then( res => res.text() );\n\n            setMarkdown(str);\n        }\n        init();\n    }, [markdown]);\n\n    return (\n        <UpdateNoteWrap className=\"UpdateNote\">\n            <Modal\n                title={\"업데이트 노트\"}\n                visible={updateNoteModalVisible}\n                onCancel={() => { setUpdateNoteModalVisible(false) }}\n                footer={null}\n                style={{minWidth:\"50%\"}}\n            >\n                <ReactMarkdown children={markdown} />\n            </Modal>\n        </UpdateNoteWrap>\n    );\n}\n\n// style ========================================================\nconst UpdateNoteWrap = styled.div`\n\n    `;\n\n// function =====================================================\n// *","// [경고] 임시적인 사용자설정 보관소 - 나중에 다른 방법으로 대체필요\nexport default function DataStorage (key) {\n    const data = {\n        NYAM_TYPES : {\n            korea : \"한식\",\n            china : \"중식\",\n            japan : \"일식\",\n            fastfood : \"패스트푸드\",\n            cvs : \"편의점\",\n            cafe : \"카페\",\n        }, \n        NYAM_TYPES_KEY : [\"korea\", \"china\", \"japan\", \"fastfood\", \"cvs\", \"cafe\"],\n        NYAM_LIST_SOURCE : \"https://script.google.com/macros/s/AKfycbx8v0CH5a_ne_pf90Y1D28O6zA-YOaJgY9G6O_lb-iXqmL0HDF1p6kPDfkuxaz3xLxo/exec\",\n    }\n\n    return data[key];\n}","// imported Modules =============================================\nimport { React, useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Checkbox, Popover, Button, Tooltip } from \"antd\";\nimport { FilterOutlined, PlusOutlined, BookOutlined } from \"@ant-design/icons\"\nimport 'antd/dist/antd.css';\n\n// imported Components ==========================================\nimport UpdateNote from \"./UpdateNote\";\n\n/* ******************************************* */\n// [경고] 임시적인 사용자설정 보관소 - 나중에 다른 방법으로 대체필요\nimport DataStorage from \"../../../DataStorage\"; \nconst NYAM_TYPES = DataStorage(\"NYAM_TYPES\");\nconst NYAM_TYPES_KEY = DataStorage(\"NYAM_TYPES_KEY\");\n// [경고] 임시적인 사용자설정 보관소 - 나중에 다른 방법으로 대체필요\n/* ******************************************* */\n\n// Main Component ===============================================\nexport default function Tools ({ setFilters, setIsPickmode, setNyamEditorTaskType }) {\n    const [checked, setChecked] = useState( initChecked(NYAM_TYPES_KEY) );\n    const [updateNoteModalVisible, setUpdateNoteModalVisible] = useState(false);\n\n    useEffect ( () => { \n        setFilters(checked); \n    }, [checked, setFilters]);\n\n    function onChange(e) { setChecked({ ...checked, [e.target.nyamType] : e.target.checked }) }\n\n    return (\n        <ToolsWrap className=\"Tools\">\n            <div className=\"LeftDiv\">\n                {/* 냠 필터링 */}\n                <Popover placement=\"bottom\" title={\"냠 필터링\"} content={filterContent(onChange, checked)} trigger=\"click\">\n                    <Tooltip title=\"냠 필터링\" placement=\"left\">\n                        <MenuButton shape=\"circle\" icon={<FilterOutlined />} />\n                    </Tooltip>\n                </Popover>\n\n                {/* 새로운 냠 */}\n                <Popover placement=\"bottom\" title={\"새로운 냠 만들기\"} content={createNyamContent} trigger=\"click\">\n                    <Tooltip title=\"새로운 냠\" placement=\"right\">\n                        <MenuButton shape=\"circle\" icon={<PlusOutlined />} style={{marginLeft:\"8px\"}} \n                            onClick={ () => { \n                                setNyamEditorTaskType(\"create\"); \n                                setIsPickmode(true); \n                            }} \n                        />\n                    </Tooltip>\n                </Popover>\n            </div>\n\n            <div className=\"RightDiv\" style={{marginLeft:\"auto\"}} >\n                <Tooltip title=\"업데이트 노트\" placement=\"right\">\n                    <MenuButton shape=\"circle\" icon={<BookOutlined />}  onClick={ () => { setUpdateNoteModalVisible(true); }} />\n                    <UpdateNote updateNoteModalVisible={updateNoteModalVisible} setUpdateNoteModalVisible={setUpdateNoteModalVisible} />\n                </Tooltip>\n            </div>\n        </ToolsWrap>\n    );\n}\n\nfunction filterContent(onChange, checked) {\n    return (\n        <div className=\"filterContent\" styld={{display:\"flex\", flexDirection:\"column\"}}>\n        {\n            NYAM_TYPES_KEY.map( (type, index) => (\n                <div key={index}><Checkbox onChange={onChange} checked={checked[type]} nyamType={type}>{NYAM_TYPES[type]}</Checkbox></div>\n            ))\n        }\n        </div>\n    )\n}\n\nconst createNyamContent = (\n    <div>\n        <p style={{margin:\"0\"}}><strong>지도에서 새로운 남의 위치를 찍어주세요</strong></p>\n        {/* <p style={{margin:\"0\"}}>버튼을 다시누르면 '새로운 냠 만들기'가 취소됩니다</p> */}\n    </div>\n);\n    \n// style ========================================================\nconst ToolsWrap = styled.div`\n    display : flex;\n    flex : 1;\n\n    justify-contents : center;\n    align-items : center;\n\n    padding : 10px 10px;\n\n    background-color : #333333;\n    color : #FFFFFF;\n    `;\n\nconst MenuButton = styled(Button)`\n    border : 0;\n    `;\n\n// function =====================================================\nfunction initChecked(arr) {\n    let obj = {};\n    arr.forEach( el => {\n        obj[el] = true;\n    });\n\n    return obj;\n}","// imported Modules =============================================\nimport { React } from 'react';\nimport styled from 'styled-components';\n\n// imported components ==========================================\nimport Tools from \"./followers/Tools\";\n\n// Main Component ===============================================\nexport default function Header ({ setFilters, setIsPickmode, setNyamEditorTaskType }) {\n    return (\n        <HeaderWrap className=\"Header\">\n            <Logo>냠냠랩(TEST)</Logo>\n            <Tools setFilters={setFilters} setIsPickmode={setIsPickmode} setNyamEditorTaskType={setNyamEditorTaskType} />\n        </HeaderWrap>\n    );\n}\n\n// style ========================================================\nconst HeaderWrap = styled.div`\n    display : flex;\n    align-items : center;\n\n    padding : 10px 0px;\n\n    background-color : #333333;\n    color : #FFFFFF;\n    `;\n\nconst Logo = styled.h1`\n    margin : 0;\n    padding : 10px 20px;\n    color : #FFFFFF;\n    font-family: 'Poor Story', cursive;\n    `;\n\n// function =====================================================\n// *","// imported Modules =============================================\nimport React from 'react';\nimport styled from 'styled-components';\n\n// imported components ==========================================\n// *\n\n// Main Component ===============================================\nexport default function ContentsTable({ desc, dataOrder, data }) {\n    // desc (문자열 Array) : thead에 표시할 텍스트를 차례로 나열한 문자열 배열\n    // dataOrder (객체 Array) : tbody의 각 row에서 [data]객체의 요소를 표시할 순서를 나열한 문자열 배열 \n    // data (객체 Array) : 원본데이터\n\n    return (\n        <ContentsTableWrap className=\"ContentsTable\">\n            <Table>\n                <tbody>\n                    <Row style={{borderWidth:\"2px\"}}>\n                    {\n                        desc.map( (el, index) => (\n                            <Th key={index}>{ el }</Th>\n                        ))\n                    }\n                    </Row>\n                </tbody>\n                \n                <tbody>\n                {\n                    data.map( (rowItem,index) => (\n                        <Row key={index}>\n                        {\n                            dataOrder.map( (colItem, index) => (\n                                <Td key={index}>{ rowItem[colItem] }</Td>\n                            ))\n                        }\n                        </Row>\n                    ))\n                }\n                </tbody>\n            </Table>\n        </ContentsTableWrap>\n    );\n}\n\n// style ========================================================\n//const SPACE = \"4px\";\nconst CELL_PADDING = \"8px\";\nconst BORDER_COLOR = \"#dbdbdb\";\n\nconst ContentsTableWrap = styled.div`\n    width : 100%;\n    border : 1px solid ${BORDER_COLOR};\n    border-bottom : 12px solid ${BORDER_COLOR};\n    border-radius : 8px;\n    `;\n\nconst Table = styled.table`\n    width : 100%;\n    text-align : center;\n    `;\n\nconst Row = styled.tr`\n    padding : ${CELL_PADDING};\n    border-bottom : 1px solid ${BORDER_COLOR};\n    `;\n\nconst Th = styled.th`\n    padding : ${CELL_PADDING};\n    `;\n\nconst Td = styled.td`\n    padding : ${CELL_PADDING};\n    `;\n// function =====================================================\n// *\n\n                ","// imported Modules =============================================\nimport React from 'react';\nimport axios from \"axios\";\n\nimport styled from 'styled-components';\nimport { Button, message, Tooltip } from \"antd\";\nimport { FormOutlined, DeleteOutlined, QuestionCircleOutlined } from \"@ant-design/icons\"\n\n// imported components ==========================================\nimport ContentsTable from \"../../atoms/ContentsTable\";\n\n// Main Component ===============================================\nexport default function MapsModalInfo({ nyamListSource, selectedNyam, refreshMaps, setIsLoading, setMapsModalVisible, setNyamEditorModalVisible, setNyamEditorTaskType }) {\n\n    const { open, close, description, menu } = selectedNyam;\n    const parsedMenu = JSON.parse(menu).menu;\n\n    async function handleDelete() {\n        setIsLoading(true);\n\n        const url = `${nyamListSource}?taskTarget=nyam&taskType=delete`;\n        const data = JSON.stringify(selectedNyam);\n\n        await axios.post(url, data);\n\n        await refreshMaps();\n        setMapsModalVisible(false);\n        setIsLoading(false);\n\n        message.success(\"냠이 역사의 뒤안길로 사라졌습니다\");\n    }\n\n    function openNyamEditor(e) {\n        setNyamEditorTaskType(\"edit\"); \n        setMapsModalVisible(false); \n        setNyamEditorModalVisible(true);\n    }\n\n    return (\n        <MapsModalInfoWrap className=\"MapsModalInfo\">\n            {/* 우측 상단 도구 */}\n            <Tools>\n                <a href={`https://map.naver.com/v5/search/${removeSpace(selectedNyam.name)}`} target=\"_blank\" rel=\"noreferrer\">\n                    <Tooltip title=\"네이버지도\" placement=\"top\">\n                        <Button shape=\"circle\" icon={<QuestionCircleOutlined />} size=\"normal\" style={{ marginRight: SPACE }} />\n                    </Tooltip>\n                </a>\n                <Tooltip title=\"수정\" placement=\"top\">\n                    <Button shape=\"circle\" icon={<FormOutlined />} size=\"normal\" style={{ marginRight: SPACE }} onClick={openNyamEditor} />\n                \n                </Tooltip>\n                <Tooltip title=\"삭제\" placement=\"top\">\n                    <Button shape=\"circle\" icon={<DeleteOutlined />} size=\"normal\" onClick={(e) => { handleDelete(); }} />\n                </Tooltip>\n            </Tools>\n\n            {/* 개요 */}\n            <Summary>\n                <div>\n                    <Title>영업시간</Title>\n                    <p>{open}~{close}</p>\n                </div>\n                <p style={{ marginLeft: \"8px\" }}>{description}</p>\n            </Summary>\n\n            {/* 메뉴목록 */}\n            <ContentsTable desc={[\"메뉴\", \"가격\"]} dataOrder={[\"name\", \"price\"]} data={parsedMenu} />\n        </MapsModalInfoWrap>\n    );\n}\n\n// style ========================================================\nconst SPACE = \"4px\";\n\nconst MapsModalInfoWrap = styled.div`\n    display : flex;\n    flex-direction : column;\n\n    flex : 1;\n    margin-right : ${\"8px\"}; \n\n    @media(max-width : 768px){\n        margin-right : 0;\n        margin-bottom : 8px;\n    }\n    `;\nconst Tools = styled.div`\n    display : flex;\n    justify-content : flex-end;\n    margin-bottom : ${SPACE};\n    `;\n\nconst Summary = styled.div`\n    display : flex;\n    `;\n\nconst Title = styled.p`\n    margin : 0;\n    font-weight : bold;\n    `;\n\n// function =====================================================\nfunction removeSpace(string) {\n    const str = string.split(' ').join('');\n    return str;\n}","// imported Modules =============================================\nimport React from 'react';\nimport styled from 'styled-components';\n\nimport { Button, Tooltip } from \"antd\";\nimport { DeleteOutlined } from \"@ant-design/icons\"\n\n// Main Component ===============================================\nexport default function Comment ({ index, content, onDelete }) {\n    return (\n        <CommentWrap className=\"Comment\">\n            <Content>{content}</Content>\n            <Tooltip className=\"deleteComment\" title=\"크큭..없.앤.다.\" placement=\"right\">\n                <Button index={index} shape=\"circle\" icon={<DeleteOutlined />} style={{}} onClick={(e)=>{onDelete(index)}} />\n            </Tooltip>\n        </CommentWrap>\n    );\n}\n\n// style ========================================================\nconst SPACE = \"4px\";\n\nconst CommentWrap = styled.div`\n    display : flex;\n    justify-content : flex-end;\n\n    margin-top : ${SPACE};\n    `;\n\nconst Content = styled.p`\n    padding : ${SPACE};\n    border : 1px solid #DCDCDC;\n    border-radius : 8px;\n    margin : 0;\n    max-width : 100%;\n    margin-right : ${SPACE};\n    \n    word-break: break-all;\n    overflow-wrap: break-word;\n    `;\n\n// function =====================================================\n// *","// imported Modules =============================================\nimport React, { useCallback, useState } from 'react';\nimport axios from \"axios\";\n\nimport styled from 'styled-components';\n\nimport { Button, Tooltip, Input, Popover } from \"antd\";\nimport { EditOutlined, SmileOutlined } from \"@ant-design/icons\"\n\nimport Picker from 'emoji-picker-react';\n\n// imported components ==========================================\nimport Comment from \"../../atoms/Comment\";\n\n// Main Component ===============================================\nexport default function MapsModalComment({ nyamListSource, selectedNyam, refreshMaps, setIsLoading }) {\n    const [newComment, setNewComment] = useState('');\n    const commentsData = JSON.parse(selectedNyam.comment).comment;\n\n    async function onCreate(e) {\n        setIsLoading(true);\n\n        // 검증\n        if (newComment == null || newComment === '') {\n            setIsLoading(false);\n            return;\n        }\n\n        // 요청 데이터 준비`\n        const url = `${nyamListSource}?taskTarget=comment&taskType=edit`;\n        const data = JSON.stringify({\n            id: selectedNyam.id,\n            comment: JSON.stringify({ comment: [newComment, ...commentsData] })\n        });\n\n        // 요청\n        //console.log(data);\n        await axios.post(url, data);\n\n        // 리프레시\n        await refreshMaps();\n        setNewComment('');\n        setIsLoading(false);\n    }\n\n    const onDelete = useCallback(async (index) => {\n        setIsLoading(true);\n\n        // 요청 데이터 준비\n        const url = `${nyamListSource}?taskTarget=comment&taskType=edit`;\n        const data = JSON.stringify({\n            id: selectedNyam.id,\n            comment: JSON.stringify({ comment: [...commentsData.slice(0, index), ...commentsData.slice(index + 1)] })\n        });\n\n        // 요청\n        //console.log(data);\n        await axios.post(url, data);\n\n        // 리프레시\n        await refreshMaps();\n        setIsLoading(false);\n    }, [nyamListSource, selectedNyam, commentsData, setIsLoading, refreshMaps]);\n\n    return (\n        <MapsModalCommentWrap className=\"MapsModalComment\">\n            <Form>\n                <Input \n                    placeholder=\"새로운 의견을 적어주세요\" \n                    value={newComment} onChange={(e) => { setNewComment(e.target.value); }} \n                    style={{ borderRadius: \"8px\", marginRight: \"4px\" }} \n                    suffix={\n                        <Popover placement=\"bottom\" title={null} content={<Picker onEmojiClick={(e,obj) => {setNewComment(newComment+obj.emoji)}} />} trigger=\"click\">\n                            <Tooltip title=\"이모지\" placement=\"top\">\n                                <SmileOutlined />\n                            </Tooltip>\n                        </Popover>\n                    }\n                />\n                \n                <Tooltip className=\"deleteComment\" title=\"쓰기\" placement=\"right\">\n                    <Button type=\"primary\" shape=\"circle\" icon={<EditOutlined />} size=\"normal\" onClick={onCreate} />\n                </Tooltip>\n            </Form>\n\n            <Comments>\n                {\n                    commentsData.map((item, index) => (\n                        <Comment key={index} index={index} content={item} onDelete={onDelete} />\n                    ))\n                }\n            </Comments>\n        </MapsModalCommentWrap>\n    );\n}\n\n// style ========================================================\nconst BORDER_COLOR = \"#dbdbdb\";\n\nconst MapsModalCommentWrap = styled.div`\n    display : flex;\n    flex-direction : column;\n\n    width : 40%;\n\n    margin-left : auto;\n    padding : 16px;\n\n    border : 1px solid ${BORDER_COLOR};\n    border-bottom : 12px solid ${BORDER_COLOR};\n    border-radius : 8px;\n\n    @media(max-width : 768px){\n        width : 100%;\n    }\n    `;\n\n const Form = styled.div`\n    display :flex;\n    align-items : center;\n    `;\n\nconst Comments = styled.div`\n    display : flex;\n    flex-direction : column;\n    align-content : flex-end;\n    justify-content : flex-start;\n\n    height : 100%;\n\n    overflow-y: auto;\n    `;\n\n// function =====================================================\n// *","// imported Modules =============================================\nimport { React } from \"react\";\n\nimport styled from \"styled-components\";\nimport { Spin } from 'antd';\nimport { LoadingOutlined } from '@ant-design/icons';\nimport 'antd/dist/antd.css';\n\n// Main Component ===============================================\nexport default function Loading ({ isLoading }) {\n    \n    if ( isLoading ){\n        return (\n            <LoadingWrap className=\"Loading\">\n                <Backdrop></Backdrop>\n                <Spin spinning={isLoading} size=\"large\" indicator={<LoadingOutlined style={{ fontSize: 64 }} spin />} />\n            </LoadingWrap>\n        );\n    } else {\n        return <div className=\"Loading\"></div>;\n    }\n   \n}\n\n// style ========================================================\nconst LoadingWrap = styled.div`\n    position : fixed;\n    top : 0; \n    left : 0;\n\n    display : flex;\n    justify-content : center;\n    align-items : center;\n\n    width : 100%; \n    height : 100%;\n    `;\n\nconst Backdrop = styled.div`\n    position : fixed;\n    top : 0; \n    left : 0;\n\n    width : 100%;\n    height : 100%;\n\n    background-color : rgba(0,0,0, 0.75);\n    `;","// imported Modules =============================================\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\n\nimport { Modal } from 'antd';\n\n// imported components ==========================================\nimport MapsModalInfo from \"../followers/MapsModalInfo\";\nimport MapsModalComment from \"../followers/MapsModalComment\";\nimport Loading from \"../../atoms/Loading\";\n\n// Main Component ===============================================\nexport default function MapsModal ({nyamListSource, selectedNyam, refreshMaps, mapsModalVisible, setMapsModalVisible, setNyamEditorModalVisible, setNyamEditorTaskType}) {\n    const [ isLoading, setIsLoading ] = useState(false);\n\n    return (\n        selectedNyam != null\n            ?\n                <MapsModalWrap className=\"MapsModal\">\n                    <StyledModal\n                        title={selectedNyam.name}\n                        visible={mapsModalVisible}\n                        onCancel={() => { setMapsModalVisible(false) }}\n                        footer={null}\n                    >\n                        <ModalContentsWrap>\n                            <MapsModalInfo \n                                nyamListSource={nyamListSource} selectedNyam={selectedNyam} refreshMaps={refreshMaps} \n                                setIsLoading={setIsLoading} setMapsModalVisible={setMapsModalVisible} setNyamEditorModalVisible={setNyamEditorModalVisible} setNyamEditorTaskType={setNyamEditorTaskType}\n                            />\n                            <MapsModalComment nyamListSource={nyamListSource} selectedNyam={selectedNyam} refreshMaps={refreshMaps} setIsLoading={setIsLoading} />\n                        </ModalContentsWrap>\n\n                        <Loading isLoading={isLoading} />\n                    </StyledModal>\n                </MapsModalWrap>\n    \n            :   \n                <div></div>\n    );\n}\n\n// style ========================================================\nconst MapsModalWrap = styled.div`\n\n    `;\n\nconst ModalContentsWrap = styled.div`\n    display : flex;\n\n    @media(max-width : 768px){\n        flex-direction : column;\n    }\n`;\nconst StyledModal = styled(Modal)`\n    min-width : 50%;\n`;\n// function =====================================================\n// *","// imported Modules =============================================\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport styled from \"styled-components\";\nimport axios from \"axios\";\nimport moment from \"moment\";\n\nimport { Modal, Input, TimePicker, Button, Divider, Select, message } from 'antd';\nimport { PlusOutlined, MinusOutlined } from \"@ant-design/icons\"\n\n// imported components\nimport Loading from \"../../atoms/Loading\";\n\n/* ******************************************* */\n// [경고] 임시적인 사용자설정 보관소 - 나중에 다른 방법으로 대체필요\nimport DataStorage from \"../../../DataStorage\";\nconst NYAM_TYPES = DataStorage(\"NYAM_TYPES\");\nconst NYAM_TYPES_KEY = DataStorage(\"NYAM_TYPES_KEY\");\nconst NYAM_LIST_SOURCE = DataStorage(\"NYAM_LIST_SOURCE\");\n// [경고] 임시적인 사용자설정 보관소 - 나중에 다른 방법으로 대체필요\n/* ******************************************* */\n\n// Main Component ===============================================\n\nconst SUMMARY_INIT_VALUE = { name: null, description: null, open: null, close: null, type: null, lat: null, lng: null, comment: null };\nconst MENUITEM_INIT_VALUE = [{ name: '', price: '' }];\n\nexport default function NyamEditor({ taskType, pickCoord, defaultNyamValue, refreshMaps, nyamEditorModalVisible, setNyamEditorModalVisible, setIsPickmode, setMapsModalVisible }) {\n    const [isLoading, setIsLoading] = useState(false);\n    const [resetLock, setResetLock] = useState(false); // 냠에디터를 닫았다 열었을 때, selectedNyam의 내용으로 초기화시킬지. ( false : 초기화함, true : 초기화 안함, null : 폼 업데이트됨 )\n\n    const [summary, setSummary] = useState(SUMMARY_INIT_VALUE);\n    const [menuItems, setMenuItems] = useState(MENUITEM_INIT_VALUE);\n\n    const title = (taskType === \"create\" ? \"새로운 냠 만들기\" : \"냠 수정하기\");\n\n    const initFormData = useCallback(() => {\n        if (taskType === \"edit\" && defaultNyamValue != null) {\n            // apply default value to \"summary\"\n            const tempSummary = { ...defaultNyamValue };\n            delete tempSummary.menu;\n            setSummary(tempSummary);\n\n            // apply default value to \"menuItems\"\n            let tempMenuItems = [];\n            tempMenuItems = (JSON.parse(defaultNyamValue.menu)).menu;\n            setMenuItems(tempMenuItems);\n\n        } else if (taskType === \"create\") {\n            setSummary({ ...SUMMARY_INIT_VALUE, lat: pickCoord.y, lng: pickCoord.x, comment: JSON.stringify({ \"comment\": [] }) });\n            setMenuItems(MENUITEM_INIT_VALUE)\n        }\n\n        setResetLock(null);\n    }, [defaultNyamValue, taskType, pickCoord]);\n\n    // 폼 초기값 지정.\n    useEffect(() => {\n        if (resetLock === false && nyamEditorModalVisible === true) {\n            initFormData();\n            setResetLock(null);\n        }\n    }, [resetLock, nyamEditorModalVisible, initFormData]);\n\n    // 좌표 수정 업데이트.\n    useEffect(() => {\n        if (nyamEditorModalVisible === true && resetLock === true) {\n            setSummary({ ...summary, lat: pickCoord.y, lng: pickCoord.x });\n            setResetLock(null);\n        }\n\n    }, [pickCoord, nyamEditorModalVisible, resetLock, summary])\n\n\n\n    // about onChange\n    function onChangeSummary(target, value) {\n        setSummary({ ...summary, [target]: value });\n    }\n    function onChangeMenuItems(index, type, value) {\n        setMenuItems([...menuItems.slice(0, index), { ...menuItems[index], [type]: value }, ...menuItems.slice(index + 1)]);\n    }\n\n    // add/remove menu item\n    function addNewMenuItem(index) { setMenuItems([...menuItems.slice(0, index), { name: '', price: '' }, ...menuItems.slice(index)]) }\n    function removeMenuItem(index) { setMenuItems([...menuItems.slice(0, index), ...menuItems.slice(index + 1)]); }\n\n    // about footer buttons.\n    function clearAll(e) {\n        const summaryReplace = {...SUMMARY_INIT_VALUE, id:summary.id, lat:summary.lat, lng:summary.lng, comment:summary.comment};\n\n        setSummary(summaryReplace);\n        setMenuItems(MENUITEM_INIT_VALUE);\n    }\n\n    async function onSubmit(e) {\n        setIsLoading(true);\n\n        const data = {};\n        Object.assign(data, summary);\n\n        // 검증\n        for (let property of Object.keys(data)) {\n            if (data[property] === null || data[property] === \"\") {\n                message.warning(\"비어있는 정보를 채워넣어주세요!\");\n                setIsLoading(false);\n                return;\n            }\n        }\n\n        for (let item of menuItems) {\n            if (item.name === '' || item.price === '') {\n                message.warning(\"비어있는 정보를 채워넣어주세요!\");\n                setIsLoading(false);\n                return;\n            }\n        }\n\n        // 요청 데이터 준비\n        Object.assign(data, { \"menu\": JSON.stringify({ \"menu\": menuItems }) });\n\n        try {\n            // 요청\n            const strData = JSON.stringify(data);\n            const url = `${NYAM_LIST_SOURCE}?taskTarget=nyam&taskType=${taskType}`;\n            await axios.post(url, strData);\n\n            // 리프레시\n            await refreshMaps();\n            setNyamEditorModalVisible(false);\n            setResetLock(false);\n            setIsLoading(false);\n\n            // 완료메시지\n            if (taskType === \"create\") { message.success(\"새로운 냠을 만들었습니다!\"); }\n            else if (taskType === \"edit\") { message.success(\"냠이 수정되었습니다!\"); }\n        } catch (err) {\n            setIsLoading(false);\n            console.error(err);\n            message.error(\"앗, 뭔가 잘못됐습니다. 다시 시도해주세요\", 2.0);\n        }\n    }\n\n    function onClose(e) {\n        setNyamEditorModalVisible(false);\n        setResetLock(false);\n        if (taskType === \"edit\") {\n            setMapsModalVisible(true);\n        }\n    }\n\n    function onCoordEdit(e) {\n        message.info(\"냠의 새로운 위치를 정해주세요\", 5);\n        setResetLock(true);\n        setNyamEditorModalVisible(false);\n        setIsPickmode(true);\n    }\n\n    return (\n        <NyamEditorWrap className=\"NyamEditor\">\n            <Modal\n                title={title}\n                visible={nyamEditorModalVisible}\n                onCancel={onClose}\n                footer={null}\n            >\n                <SummaryWrap>\n                    <Divider>개요</Divider>\n\n                    <Coord>\n                        <span style={{ marginRight: \"8px\", textAlign: \"center\" }}>{`위도 ${summary.lat}`}</span>\n                        <span style={{ marginRight: \"8px\", textAlign: \"center\" }}>{`경도 ${summary.lng}`}</span>\n                        <Button onClick={onCoordEdit} >위치 수정</Button>\n                    </Coord>\n\n                    <StyledInput name=\"name\" placeholder=\"가게 이름\" value={summary.name} onChange={(e) => { onChangeSummary(e.target.name, e.target.value) }} />\n                    <StyledInput name=\"description\" placeholder=\"설명\" value={summary.description} onChange={(e) => { onChangeSummary(e.target.name, e.target.value) }} />\n\n                    <TimePickersWrap>\n                        <TimePicker\n                            name=\"openTime\" format=\"HH:mm\" placeholder=\"문 여는 시간\" value={summary.open ? moment(summary.open, \"HH:mm\") : null}\n                            onChange={(time, timeString) => { onChangeSummary(\"open\", timeString); }} style={{ flexGrow: \"1\", marginRight: SPACE }}\n                            minuteStep={5}\n                        />\n                        <TimePicker\n                            name=\"closeTime\" format=\"HH:mm\" placeholder=\"문 닫는 시간\" value={summary.close ? moment(summary.close, \"HH:mm\") : null}\n                            onChange={(time, timeString) => { onChangeSummary(\"close\", timeString); }} style={{ flexGrow: \"1\" }}\n                            minuteStep={5}\n                        />\n                    </TimePickersWrap>\n\n                    <Select placeholder=\"유형을 골라주세요\" value={summary.type} onChange={(value) => { onChangeSummary(\"type\", value); }}>\n                        {NYAM_TYPES_KEY.map((key, index) => (<Select.Option value={key} key={index}>{NYAM_TYPES[key]}</Select.Option>))}\n                    </Select>\n                </SummaryWrap>\n\n                <MenusWrap>\n                    <Divider>메뉴</Divider>\n\n                    {menuItems.map((item, index) => MenuItem(index, item.name, item.price, addNewMenuItem, removeMenuItem, onChangeMenuItems))}\n                    <StyledButton shape=\"circle\" icon={<PlusOutlined />} style={{}} onClick={(e) => { addNewMenuItem(menuItems.length) }} />\n\n                    <Divider />\n                </MenusWrap>\n\n                <ButtonsWrap>\n                    <Button type=\"link\" onClick={clearAll}>모두 지우기</Button>\n                    <Button onClick={onSubmit} style={{ marginLeft: \"auto\" }}>저장</Button>\n                </ButtonsWrap>\n\n                <Loading isLoading={isLoading} />\n            </Modal>\n        </NyamEditorWrap>\n    );\n}\n\n// style ========================================================\nconst SPACE = \"4px\";\n\n// -- antd redefined style\nconst StyledInput = styled(Input)`\n    margin-bottom : ${SPACE};\n    `;\n\nconst StyledButton = styled(Button)`\n    margin-right : ${SPACE};\n    `;\n\n// -- user defined style\nconst NyamEditorWrap = styled.div``;\n\nconst SummaryWrap = styled.div`\n    display : flex;\n    flex-direction : column;\n    align-items : stretch;\n    `;\n\nconst Coord = styled.div`\n    display : flex;\n    justify-content : flex-end;\n    align-items : center;\n\n    margin-bottom : ${SPACE}\n    `;\n\nconst TimePickersWrap = styled.div`\n    display : flex;\n    margin-bottom : ${SPACE}\n    `;\n\nconst MenusWrap = styled.div``;\n\nconst MenuItemWrap = styled.div`\n    display : flex;\n    `;\n\nconst ButtonsWrap = styled.div`\n    display : flex;\n    `;\n\n// function =====================================================\n// *\n\n// 유사 컴포넌트 ================================================\nfunction MenuItem(index, name, price, addNewMenuItem, removeMenuItem, onChangeMenuItems) {\n    return (\n        <MenuItemWrap key={index}>\n            <StyledButton shape=\"circle\" icon={<PlusOutlined />} style={{}} onClick={(e) => { addNewMenuItem(index); }} />\n            <StyledButton shape=\"circle\" icon={<MinusOutlined />} onClick={(e) => { removeMenuItem(index) }} />\n\n            <StyledInput placeholder=\"메뉴 이름\" value={name} style={{ marginRight: SPACE }} onChange={(e) => { onChangeMenuItems(index, \"name\", e.target.value); }} />\n            <StyledInput placeholder=\"메뉴 가격\" value={price} onChange={(e) => { onChangeMenuItems(index, \"price\", e.target.value); }} />\n        </MenuItemWrap>\n    )\n}\n","export default function naverMapsinit (mapValues) {\n    // set naver.maps.Map\n    const { center, zoom } = mapValues;\n\n    const mapOptions = {\n        center: new window.naver.maps.LatLng(center.lat, center.lng),\n        zoom: zoom,\n    };\n    const map = new window.naver.maps.Map(\"map\", mapOptions);\n\n    return map;\n}","import axios from \"axios\";\nimport {message } from \"antd\";\n\nexport default async function naverMapsSetNyams (map, mapValues, setMarkers, setNyams, setMapsModalVisible, setSelectedNyam) {\n    // initialize temp variable for states\n    const tempNyams = initWithNyamtype(mapValues.nyamTypes);\n    const tempMarkers = initWithNyamtype(mapValues.nyamTypes);\n\n    // read nyamList\n    const nyamList = await readNyamList(mapValues.nyamListSource);\n    if (nyamList===null){\n        message.error(\"문제가 생겨 데이터를 받아오지 못했습니다. 새로고침을 시도해주세요\", 0);\n        return;\n    }\n\n    try {\n        // set markers\n            // organization item\n        const org = nyamList.shift(); \n        const org_marker = new window.naver.maps.Marker({\n            position: new window.naver.maps.LatLng(org.lat, org.lng),\n            map: map,\n            icon: {\n              url : `img/icons/${org.type}.png`,\n              size: new window.naver.maps.Size(48, 48),\n              origin: new window.naver.maps.Point(0, 0),\n            }\n        });\n    \n            // nyam items\n        let cnt = 0;\n        nyamList.forEach( item => { \n            const marker = new window.naver.maps.Marker({\n                position : new window.naver.maps.LatLng(item.lat, item.lng),\n                map : map,\n                icon : {\n                    content: [\n                        '<div>',\n                            '<div style=\"background-color:rgba(255,255,255,0.8); padding:5px; border-radius:16px; border:1px solid #d9d9d9;\">',\n                                `<span style=\"white-space:nowrap;\">${item.name}</span>`,\n                            '</div>',\n                            `<img src=\"img/icons/svg/${item.type}.svg\">`,\n                        '</div>'\n                    ].join(''),\n                    size : new window.naver.maps.Size(1,500),\n                    scaledSize: new window.naver.maps.Size(395, 79),\n    \n                    anchor: new window.naver.maps.Point(16, 48),\n                    \n                }\n            });\n    \n            marker.addListener(\"click\", (e) => {\n                const targetid = e.overlay[\"_nmarker_id\"];\n                const types = mapValues.nyamTypes;\n    \n                for( let i = 0; i<types.length; i++){\n                    const type = types[i];\n                    let chk = false;\n                    for( let j=0; j<tempMarkers[type].length; j++ ){\n                        if ( targetid === tempMarkers[type][j][\"_nmarker_id\"] ){\n                            setSelectedNyam(tempNyams[type][j]);\n                            setMapsModalVisible(true);\n                            chk = true;\n                            break;\n                        }\n                    }\n                    if (chk) { break; }\n                }\n            });\n    \n            tempNyams[item.type].push(item);\n            tempMarkers[item.type].push(marker);\n    \n            cnt++;\n        });\n        \n        org_marker.setZIndex(cnt); // 회사 마커가 가장 위로 올라오도록\n    \n        setNyams(tempNyams);\n        setMarkers(tempMarkers);\n    } catch(err) {\n        console.error(err);\n        console.error(nyamList);\n        message.error(\"데이터를 표시하는 과정에 문제가 생겼습니다. 새로고침을 시도해주세요\", 0);\n    }\n    \n}\n\nasync function readNyamList (src) {\n        try {\n            const { data } = await axios.get(src);\n            //console.log(\"readNyams\", data);\n            return data;\n        } catch {\n            return null;\n        }\n        \n        \n\n        \n}\n\nfunction initWithNyamtype (types) {\n    let obj = {};\n    types.forEach( category => {\n        obj[category] = [];\n    });\n\n    return obj;\n}","// imported Modules =============================================\nimport { React, useState, useEffect } from \"react\";\nimport ScriptTag from \"react-script-tag\";\nimport styled from \"styled-components\";\n\n// [경고] 임시적인 사용자설정 보관소 - 나중에 다른 방법으로 대체필요\nimport DataStorage from \"../../DataStorage\"; // [경고] 임시적인 사용자설정 보관소 - 나중에 다른 방법으로 대체필요\n// [경고] 임시적인 사용자설정 보관소 - 나중에 다른 방법으로 대체필요\n\n// imported components ==========================================\nimport MapsModal from \"./leaders/MapsModal\";\nimport NyamEditor from \"./followers/NyamEditor\";\nimport Loading from \"../atoms/Loading\";\n\n// imported supporters\nimport naverMapsinit from \"../supporters/naverMapsInit\";\nimport naverMapsSetNyams from \"../supporters/naverMapsSetNyams\";\n\n// Main Component ===============================================\nlet map = null;\n\nconst mapValues = {\n    nyamListSource: DataStorage(\"NYAM_LIST_SOURCE\"),\n    nyamTypes: DataStorage(\"NYAM_TYPES_KEY\"),\n    mapSource: \"https://openapi.map.naver.com/openapi/v3/maps.js?ncpClientId=ont9t74d67\",\n    center: {\n        lat: 37.552472,\n        lng: 127.076665,\n    },\n    zoom: 16,\n};\n\nexport default function Maps({ filters, isPickmode, nyamEditorTaskType, setIsPickmode, setNyamEditorTaskType }) {\n    const [nyams, setNyams] = useState(null);\n    const [markers, setMarkers] = useState(null);\n\n    const [isLoading, setIsLoading] = useState(false);\n    const [selectedNyam, setSelectedNyam] = useState(null);\n    const [pickCoord, setPickCoord] = useState({ x: 0, y: 0 }); // 새로 추가할 냠의 좌표값. { x : 123, y : 123 }\n\n    const [mapsModalVisible, setMapsModalVisible] = useState(false);\n    const [nyamEditorModalVisible, setNyamEditorModalVisible] = useState(false);\n\n    // 마커 visible 속성 변경\n    useEffect(() => {\n        if (markers !== null) {\n            setMarkersVisible(filters, setIsLoading, markers);\n        }\n    }, [filters, markers]);\n\n    // 마커위치 선택\n    useEffect(() => {\n        if (map != null) {\n            if (isPickmode === true) {\n                map.setCursor(\"Crosshair\");\n                const listener = window.naver.maps.Event.addListener(map, 'click', function (e) { // 클릭이 들어왔으면\n                    if (isPickmode === true) {\n                        const { x, y } = e.coord; \n                        setPickCoord({ x, y }); // 좌표값 저장하고\n                        setIsPickmode(false); // 선택모드 끄고\n                        setNyamEditorModalVisible(true); // 냠에디터 켜\n                        window.naver.maps.Event.removeListener(listener);\n                    }\n                });\n            } else if (isPickmode === false) {\n                map.setCursor(\"Move\");\n            }\n        }\n    }, [isPickmode, setIsPickmode]);\n\n    // 지도 refreshMaps() 된다음, selectedNyam내용 업데이트\n    useEffect(() => {\n        if (selectedNyam != null) {\n            const { type, id } = selectedNyam;\n            const index = nyams[type].findIndex(nyam => nyam.id === id)\n            setSelectedNyam(nyams[type][index]);\n        }\n    }, [nyams, selectedNyam]);\n\n    async function refreshMaps() {\n        // 기존의 마커 모두 삭제하기\n        for (let arr of Object.values(markers)) {\n            arr.forEach(marker => {\n                marker.setMap(null);\n            });\n        }\n\n        // 다시 만들기\n        await naverMapsSetNyams(map, mapValues, setMarkers, setNyams, setMapsModalVisible, setSelectedNyam);\n\n        // 이후 바로 위 useEffect에서 selectedNyam 내용 갱신.\n    }\n\n    return (\n        <MapsWrap className=\"Maps\">\n            <ScriptTag\n                type=\"text/javascript\" src={mapValues.mapSource}\n                onLoad={async () => {\n                    setIsLoading(true);\n                    map = naverMapsinit(mapValues);\n                    await naverMapsSetNyams(map, mapValues, setMarkers, setNyams, setMapsModalVisible, setSelectedNyam);\n                    setIsLoading(false);\n                }}\n            />\n            <Map id=\"map\"></Map>\n\n            <MapsModal\n                nyamListSource={mapValues.nyamListSource} selectedNyam={selectedNyam} \n                refreshMaps={refreshMaps} \n                mapsModalVisible={mapsModalVisible} setMapsModalVisible={setMapsModalVisible} \n                setNyamEditorModalVisible={setNyamEditorModalVisible} setNyamEditorTaskType={setNyamEditorTaskType}\n            />\n\n            <NyamEditor\n                taskType={nyamEditorTaskType} pickCoord={pickCoord} defaultNyamValue={selectedNyam}\n                refreshMaps={refreshMaps} \n                nyamEditorModalVisible={nyamEditorModalVisible} setNyamEditorModalVisible={setNyamEditorModalVisible}\n                setIsPickmode={setIsPickmode} setMapsModalVisible={setMapsModalVisible}\n            />\n\n            <Loading isLoading={isLoading} />\n        </MapsWrap>\n    );\n}\n\n// style ========================================================\nconst MapsWrap = styled.div`\n    display : flex;\n    flex : 1;\n    `;\n\nconst Map = styled.div`\n    width: 100%;\n    height : 100%;\n    `;\n\n// function =====================================================\nconst setMarkersVisible = (filters, setIsLoading, markers) => {\n    setIsLoading(true);\n\n    const types = mapValues.nyamTypes; // 정의되어있는 type배열 불러오기\n\n    types.forEach(type => {\n        const target = markers[type]; // markers의 한 type을 대상으로 정함\n        if (target.length === 0) { return; } // 대상이 비어있으면 바로 함수종료\n\n        const dest = filters[type]; // 업데이트 하려고 하는 값\n        if (target[0].getVisible() !== dest) { // target안의 첫번째 마커의 visible속성과, 업데이트 하려고 하는 값이 다르면 (어차피 첫번째 마커 visible값이랑, 전체 마커 visible값이랑 똑같을거기 때문)\n            target.forEach(marker => { marker.setVisible(dest); }); // 업데이트!\n            return;\n        }\n    });\n\n    setIsLoading(false);\n}","// imported Modules =============================================\nimport { React } from 'react';\nimport styled from 'styled-components';\n\n// imported components ==========================================\n// *\n\n// Main Component ===============================================\nexport default function Footer () {\n    return (\n        <FooterWrap className=\"Footer\">\n            <Group>\n                <Item>Wonjin Yi</Item>\n                <Item><strong>Contact </strong>studioplug17@gmail.com</Item>\n            </Group>\n            <Group style={{marginLeft : \"auto\",}}>\n                <Item><strong>냠냠램 TEST </strong>조직내부의 폐쇄적인 냠냠거리 공유 서비스</Item>\n            </Group>\n        </FooterWrap>\n    );\n}\n\n// style ========================================================\nconst FooterWrap = styled.div`\n    display : flex;\n \n    width : 100%;\n    padding : 20px 30px;\n\n    background-color : #333333;\n    color : #a1a1a1;\n    `; \n\nconst Group = styled.div`\n\n    `;\n\nconst Item = styled.p`\n    margin : 0;\n    `;\n\n// function =====================================================\n// *","// imported Modules =============================================\nimport { React, useEffect, useState } from 'react';\nimport styled from \"styled-components\";\nimport {notification} from \"antd\";\n\n// imported components ==========================================\nimport Header from \"./components/Header/Header\";\nimport Maps from \"./components/Maps/Maps\";\nimport Footer from \"./components/Footer/Footer\";\n\n// Main Component ===============================================\nexport default function App() {\n  const [filters, setFilters] = useState({});\n  const [isPickmode, setIsPickmode] = useState(false); // 현재 '새로운 냠'버튼을 눌러 새로운 위치를 찍는 상태인지\n  const [nyamEditorTaskType, setNyamEditorTaskType] = useState(null); // 냠에디터 taskType : create / edit\n\n  // temp temp temp temp temp temp temp temp temp temp\n  useEffect( () => {\n    notification.open({\n      message: '안녕히계세요여러분저는이세상의모든굴레와...',\n      description:\n        \"여기(nyam.wonj.in)는 멀지않은 미래에 모든 사람의 '냠 연구소'로 통하는 대문으로 바뀔 예정입니다. 대문에서 'datalab_gorani'를 입력하시면 현재와 같은 페이지를 열람하실 수 있습니다. 데이터연구소의 '냠 연구소'는 구글시트가 망하기 전까지는 유지됩니다.\",\n      duration : 10\n    });\n  }, []);\n  // temp temp temp temp temp temp temp temp temp temp\n\n  return (\n    <AppWrap className=\"App\" style={{ cursor : (isPickmode ? 'Crosshair' : 'auto') }}>\n      <Header setFilters={setFilters} setIsPickmode={setIsPickmode} setNyamEditorTaskType={setNyamEditorTaskType} />\n      <Maps filters={filters} isPickmode={isPickmode} nyamEditorTaskType={nyamEditorTaskType} setIsPickmode={setIsPickmode} setNyamEditorTaskType={setNyamEditorTaskType} />\n      <Footer />\n    </AppWrap>\n  );\n}\n\n// style ========================================================\nconst AppWrap = styled.div`\n  display : flex;\n  flex-direction : column;\n  height : 100%;\n`;\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    // <React.StrictMode>\n    //   <App />\n    // </React.StrictMode>,\n    \n    <App />,\n    document.getElementById('root')\n);"],"sourceRoot":""}