{"version":3,"sources":["../node_modules/yargs-parser sync","DataStorage.js","components/atoms/NyamEditor.js","components/followers/Header/Menu.js","components/Header.js","components/atoms/Loading.js","components/followers/Maps/MapsModalInfo.js","components/atoms/Comment.js","components/followers/Maps/MapsModalComment.js","components/followers/Maps/MapsModal.js","components/Maps.js","components/Footer.js","App.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","DataStorage","key","NYAM_TYPES","meal","fastfood","cvs","cafe","NYAM_TYPES_KEY","NYAM_LIST_SOURCE","NyamEditor","title","nyamEditorModalVisible","setNyamEditorModalVisible","onSubmit","useState","name","price","menuItems","setMenuItems","removeItem","index","slice","menuItemOnChange","type","value","NyamEditorWrap","className","visible","onCancel","footer","StyledInput","placeholder","style","marginBottom","SPACE","Title","format","MenusWrap","map","item","console","log","MenuItemWrap","placement","StyledButton","shape","icon","MinusOutlined","onClick","marginRight","onChange","target","MenuItem","PlusOutlined","styled","Input","Button","div","span","Menu","setFilters","isPickmode","setIsPickmode","pickCoord","arr","obj","forEach","el","initChecked","checked","setChecked","useEffect","MenuWrap","content","filterContent","nyamType","trigger","MenuButton","FilterOutlined","createNyamContent","marginLeft","margin","Header","HeaderWrap","Logo","h1","Loading","isLoading","LoadingWrap","Backdrop","spinning","size","indicator","LoadingOutlined","fontSize","spin","MapsModalInfo","nyamListSource","selectedNyam","open","close","description","menu","parsedMenu","JSON","parse","MapsModalInfoWrap","Summary","header","bordered","dataSource","renderItem","Item","borderRadius","p","ul","Comment","onDelete","CommentWrap","Content","DeleteOutlined","MapsModalComment","nyamListSoruce","commentsData","comment","MapsModalCommentWrap","Comments","Form","EditOutlined","onCreate","MapsModal","mapsModalVisible","setMapsModalVisible","MapsModalWrap","StyledModal","ModalContentsWrap","Modal","mapValues","nyamTypes","mapSource","center","lat","lng","zoom","nyams","markersInit","markers","_isPickmode","Maps","filters","setPickCoord","setIsLoading","setSelectedNyam","setMarkersVisible","setCursor","MapsWrap","onLoad","init","src","Map","reqNyamList","read","a","axios","get","data","length","dest","getVisible","marker","setVisible","mapOptions","window","naver","maps","LatLng","nyamList","org","shift","Marker","position","url","Size","origin","Point","temp","join","anchor","addListener","targetid","overlay","types","coord","i","chk","j","push","x","y","category","Footer","FooterWrap","Group","App","AppWrap","cursor","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.60093199.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 267;","// [경고] 임시적인 사용자설정 보관소 - 나중에 다른 방법으로 대체필요\nexport default function DataStorage (key) {\n    const data = {\n        NYAM_TYPES : {\n            meal : \"밥\",\n            fastfood : \"패스트푸드\",\n            cvs : \"편의점\",\n            cafe : \"카페\",\n        }, \n        NYAM_TYPES_KEY : [\"meal\", \"fastfood\", \"cvs\", \"cafe\"],\n        NYAM_LIST_SOURCE : \"https://script.google.com/macros/s/AKfycbyuACrtmBSgcaehSnfbDVhSAMeScTP455Z44h4jtjxRGxJ5UNeVdOEh/exec\",\n    }\n\n    return data[key];\n}","// imported Modules =============================================\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\n\nimport { Modal, Input, InputNumber, TimePicker, Button, Tooltip, Divider } from 'antd';\nimport { PlusOutlined, MinusOutlined } from \"@ant-design/icons\"\nimport { useEffect } from 'react/cjs/react.development';\n\n// Main Component ===============================================\nexport default function NyamEditor ({ title, nyamEditorModalVisible, setNyamEditorModalVisible, onSubmit }) {\n\n    const [menuItems, setMenuItems] = useState( [{name:'1', price:'2222'},{name:'2', price:'55'},{name:'3', price:'55'},{name:'4', price:'55'}] );\n\n    function addNewItem(e) {\n        setMenuItems([ ...menuItems, {name:'', price:''} ])\n    }\n    \n    function removeItem(index) {\n        setMenuItems([ ...menuItems.slice(0,index), ...menuItems.slice(index+1)]);\n    }\n    \n    function menuItemOnChange(index, type, value) {\n        setMenuItems([ ...menuItems.slice(0,index), { ...menuItems[index], [type] : value } , ...menuItems.slice(index+1)])\n    }\n\n    return (\n        <NyamEditorWrap className=\"NyamEditor\">\n            <Modal\n                title={\"새로운 냠 만들기\"}\n                visible={nyamEditorModalVisible}\n                onCancel={() => { setNyamEditorModalVisible(false) }}\n                footer={null}\n            >\n                <Divider>개요</Divider>\n                <StyledInput placeholder=\"가게 이름\" />\n                <StyledInput placeholder=\"설명\" />\n                \n                <div style={{marginBottom:SPACE}}>\n                    <Title>영업시간</Title>\n                    <TimePicker format=\"HH:mm\" placeholder=\"시작\" />\n                    <span> ~ </span>\n                    <TimePicker format=\"HH:mm\" placeholder=\"종료\" />\n                </div>\n                \n                <Divider>메뉴</Divider>\n                <MenusWrap>\n                {\n                    menuItems.map( (item, index) => { \n                        console.log('가즈아', index, item);\n                        return MenuItem(index, item.name, item.price, removeItem, menuItemOnChange);\n                    })\n                }\n                    <Tooltip className=\"deleteComment\" title=\"메뉴 추가\" placement=\"left\">\n                        <StyledButton shape=\"circle\" icon={<PlusOutlined />} style={{}} onClick={addNewItem} />\n                    </Tooltip>\n                    \n                </MenusWrap>\n            </Modal>\n        </NyamEditorWrap>\n    );\n}\n\n// style ========================================================\nconst SPACE = \"4px\";\n\n// -- antd redefined style\nconst StyledInput = styled(Input)`\n    margin-bottom : ${SPACE};\n    `;\n\nconst StyledButton = styled(Button)`\n    margin-right : ${SPACE};\n`;\n// -- user defined style\nconst NyamEditorWrap = styled.div`\n\n    `;\n\nconst MenusWrap = styled.div`\n\n    `;\n\nconst MenuItemWrap = styled.div`\n    display : flex;\n    `;\n\nconst Title = styled.span`\n    font-weight : bold;\n    margin-right : ${SPACE};\n    `;\n\n// function =====================================================\n// *\n\n// 유사 컴포넌트 ================================================\nfunction MenuItem(index, name, price, removeItem, menuItemOnChange) {\n    return (\n        <MenuItemWrap key={index}>\n            <Tooltip className=\"deleteComment\" title=\"크큭.. 없.앤.다.\" placement=\"left\">\n                <StyledButton shape=\"circle\" icon={<MinusOutlined />} onClick={(e) => { removeItem(index) }} />\n            </Tooltip>\n            <StyledInput placeholder=\"메뉴 이름\" value={name} style={{marginRight:SPACE}} onChange={(e) => {menuItemOnChange(index,\"name\", e.target.value);}} />\n            <StyledInput placeholder=\"메뉴 가격\" value={price} onChange={(e) => {menuItemOnChange(index, \"price\", e.target.value);}} />\n        </MenuItemWrap>\n    )\n}\n","// imported Modules =============================================\nimport { React, useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Checkbox, Popover, Button, Tooltip } from \"antd\";\nimport { FilterOutlined, PlusOutlined } from \"@ant-design/icons\"\nimport 'antd/dist/antd.css';\n\nimport DataStorage from \"../../../DataStorage\"; // [경고] 임시적인 사용자설정 보관소 - 나중에 다른 방법으로 대체필요\n\n// imported Components ==========================================\nimport NyamEditor from \"../../atoms/NyamEditor\";\n\n// Main Component ===============================================\nconst NYAM_TYPES = DataStorage(\"NYAM_TYPES\"); // [경고] 임시적인 사용자설정 보관소 - 나중에 다른 방법으로 대체필요\nconst NYAM_TYPES_KEY = DataStorage(\"NYAM_TYPES_KEY\");\n\nexport default function Menu ({ setFilters, isPickmode, setIsPickmode, pickCoord }) {\n    const [checked, setChecked] = useState( initChecked(NYAM_TYPES_KEY) );\n    const [nyamEditorModalVisible, setNyamEditorModalVisible] = useState(false);\n\n    useEffect ( () => { \n        setFilters(checked); \n    }, [checked, setFilters]);\n\n    useEffect ( () => {\n        if(isPickmode === true && pickCoord!==null) {\n            setIsPickmode(false);\n            setNyamEditorModalVisible(true);\n            console.log('[Menu] 받음받음');\n        }\n    }, [pickCoord])\n    \n    \n\n    function onChange(e) { setChecked({ ...checked, [e.target.nyamType] : e.target.checked }) }\n\n    return (\n        <MenuWrap className=\"Menu\">\n            <Popover placement=\"bottom\" title={\"냠 필터링\"} content={filterContent(onChange, checked)} trigger=\"click\">\n                <Tooltip title=\"냠 필터링\" placement=\"left\">\n                    <MenuButton shape=\"circle\" icon={<FilterOutlined />} />\n                </Tooltip>\n            </Popover>\n\n            <Popover placement=\"bottom\" title={\"새로운 냠 만들기\"} content={createNyamContent} trigger=\"click\">\n                <Tooltip title=\"새로운 냠\" placement=\"right\">\n                    <MenuButton shape=\"circle\" icon={<PlusOutlined />} style={{marginLeft:\"8px\"}} onClick={ () => { setIsPickmode(true); console.log('setispickmode : true') }} />\n                </Tooltip>\n            </Popover>\n\n            <NyamEditor title={\"새로운 냠 만들기\"} nyamEditorModalVisible={nyamEditorModalVisible} setNyamEditorModalVisible={setNyamEditorModalVisible} onSubmit={()=>{console.log('submitsubmit')}} />\n        </MenuWrap>\n    );\n}\n\nfunction filterContent(onChange, checked) {\n    return (\n        <div className=\"filterContent\">\n        {\n            NYAM_TYPES_KEY.map( key => (\n                <Checkbox onChange={onChange} checked={checked[key]} nyamType={key} key={key}>{NYAM_TYPES[key]}</Checkbox>\n            ))\n        }\n        </div>\n    )\n}\n\nconst createNyamContent = (\n    <div>\n        <p style={{margin:\"0\"}}><strong>지도에서 새로운 남의 위치를 찍어주세요</strong></p>\n        {/* <p style={{margin:\"0\"}}>버튼을 다시누르면 '새로운 냠 만들기'가 취소됩니다</p> */}\n    </div>\n);\n    \n// style ========================================================\nconst MenuWrap = styled.div`\n    display : flex;\n    justify-contents : center;\n    align-items : center;\n\n    padding : 10px 0px;\n\n    background-color : #333333;\n    color : #FFFFFF;\n    `;\n\nconst MenuButton = styled(Button)`\n    border : 0;\n    `;\n\n// function =====================================================\nfunction initChecked(arr) {\n    let obj = {};\n    arr.forEach( el => {\n        obj[el] = true;\n    });\n\n    return obj;\n}","// imported Modules =============================================\nimport { React } from 'react';\nimport styled from 'styled-components';\n\n// imported components ==========================================\nimport Menu from \"./followers/Header/Menu\";\n\n// Main Component ===============================================\nexport default function Header ({ setFilters, isPickmode, setIsPickmode, pickCoord }) {\n    return (\n        <HeaderWrap className=\"Header\">\n            <Logo>냠냠랩(TEST)</Logo>\n            <Menu setFilters={setFilters} isPickmode={isPickmode} setIsPickmode={setIsPickmode} pickCoord={pickCoord} />\n        </HeaderWrap>\n    );\n}\n\n// style ========================================================\nconst HeaderWrap = styled.div`\n    display : flex;\n    align-items : center;\n\n    padding : 10px 0px;\n\n    background-color : #333333;\n    color : #FFFFFF;\n    `;\n\nconst Logo = styled.h1`\n    margin : 0;\n    padding : 10px 20px;\n    color : #FFFFFF;\n    font-family: 'Poor Story', cursive;\n    `;\n\n// function =====================================================\n// *","// imported Modules =============================================\nimport { React } from \"react\";\n\nimport styled from \"styled-components\";\nimport { Spin } from 'antd';\nimport { LoadingOutlined } from '@ant-design/icons';\nimport 'antd/dist/antd.css';\n\n// Main Component ===============================================\nexport default function Loading ({ isLoading }) {\n    \n    if ( isLoading ){\n        return (\n            <LoadingWrap className=\"Loading\">\n                <Backdrop></Backdrop>\n                <Spin spinning={isLoading} size=\"large\" indicator={<LoadingOutlined style={{ fontSize: 64 }} spin />} />\n            </LoadingWrap>\n        );\n    } else {\n        return <div className=\"Loading\"></div>;\n    }\n   \n}\n\n// style ========================================================\nconst LoadingWrap = styled.div`\n    position : fixed;\n    top : 0; \n    left : 0;\n\n    display : flex;\n    justify-content : center;\n    align-items : center;\n\n    width : 100%; \n    height : 100%;\n    `;\n\nconst Backdrop = styled.div`\n    position : fixed;\n    top : 0; \n    left : 0;\n\n    width : 100%;\n    height : 100%;\n\n    background-color : rgba(0,0,0, 0.75);\n    `;","// imported Modules =============================================\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\n\nimport { Modal, Button, List } from \"antd\";\nimport axios from \"axios\";\nimport parser from \"yargs-parser\";\n\n// imported components ==========================================\nimport Loading from \"../../atoms/Loading\";\n\n// Main Component ===============================================\nexport default function MapsModalInfo ({ nyamListSource, selectedNyam }) {\n    const { open, close, description, menu } = selectedNyam;\n    const parsedMenu = JSON.parse(menu).menu;\n\n    return (\n        <MapsModalInfoWrap className=\"MapsModalInfo\">\n            <Summary>\n                <div>\n                    <Title>영업시간</Title> \n                    <p>{open}~{close}</p>\n                </div>\n                <p style={{marginLeft:\"8px\"}}>{description}</p>\n            </Summary>\n            <MenuWrap>\n                <Title>메뉴</Title>\n                <List\n                    size=\"small\"\n                    header={null}\n                    footer={null}\n                    bordered\n                    dataSource={parsedMenu.map( item => ( `${item.name} ${item.price}` ) )}\n                    renderItem={item => <List.Item key={item.index}>{item}</List.Item>}\n                    style={{borderRadius:\"8px\"}}\n                />\n                \n            </MenuWrap>\n        </MapsModalInfoWrap>\n    );\n}\n\n// style ========================================================\nconst MapsModalInfoWrap = styled.div`\n    display : flex;\n    flex-direction : column;\n\n    padding-right : 8px; \n    `;\n\nconst Summary = styled.div`\n    display : flex;\n    `;\n\nconst MenuWrap = styled.div`\n    display : flex;\n    flex-direction : column;\n    `;\n\nconst Title = styled.p`\n    margin : 0;\n    font-weight : bold;\n    `;\n\nconst Menus = styled.ul`\n\n`;\n\n// function =====================================================\n// *","// imported Modules =============================================\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\n\nimport { Button, Tooltip } from \"antd\";\nimport { DeleteOutlined } from \"@ant-design/icons\"\n\n// Main Component ===============================================\nexport default function Comment ({ content, onDelete }) {\n    return (\n        <CommentWrap className=\"Comment\">\n            <Content>{content}</Content>\n            <Tooltip className=\"deleteComment\" title=\"크큭..없.앤.다.\" placement=\"right\">\n                <Button shape=\"circle\" icon={<DeleteOutlined />} style={{}} onClick={onDelete} />\n            </Tooltip>\n        </CommentWrap>\n    );\n}\n\n// style ========================================================\nconst SPACE = \"4px\";\n\nconst CommentWrap = styled.div`\n    display : flex;\n    justify-content : flex-end;\n    \n    margin-bottom : ${SPACE};\n    `;\n\nconst Content = styled.p`\n    padding : ${SPACE};\n    border : 1px solid #DCDCDC;\n    border-radius : 8px;\n    margin : 0;\n    margin-right : ${SPACE};\n    `;\n\n// function =====================================================\n// *","// imported Modules =============================================\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\n\nimport { Button, Tooltip, Input } from \"antd\";\nimport { EditOutlined } from \"@ant-design/icons\"\n\n// imported components ==========================================\nimport Comment from \"../../atoms/Comment\";\n\n// Main Component ===============================================\nexport default function MapsModalComment ({ nyamListSoruce, selectedNyam }) {\n    const commentsData = JSON.parse(selectedNyam.comment).comment;\n\n    return (\n        <MapsModalCommentWrap className=\"MapsModalComment\">\n            \n            <Comments>\n            {\n                commentsData.map( item => (\n                    <Comment content={item} onDelete={onDelete} />\n                ))\n            }\n            </Comments>\n\n            <Form>\n                <Input placeholder=\"새로운 의견을 적어주세요\" style={{borderRadius:\"8px\", marginRight:\"4px\"}}></Input>\n                <Tooltip className=\"deleteComment\" title=\"새로운 의견적기\" placement=\"right\">\n                    <Button shape=\"circle\" icon={<EditOutlined />} size=\"normal\" style={{}} onClick={onCreate} />\n                </Tooltip>\n            </Form>\n            \n        </MapsModalCommentWrap>\n    );\n}\n\n// style ========================================================\nconst MapsModalCommentWrap = styled.div`\n    display : flex;\n    flex-direction : column;\n\n    width : 40%;\n\n    margin-left : auto;\n    padding : 16px;\n    border : 1px solid #dbdbdb;\n    border-radius : 8px;\n    `;\n\nconst Comments = styled.div`\n    display : flex;\n    flex-direction : column;\n    align-content : flex-end;\n    justify-content : flex-start;\n   \n    overflow-y: auto;\n`;\n\nconst Form = styled.div`\n    display :flex;\n    align-items : center;\n`;\n\n// function =====================================================\nfunction onCreate() {\n    console.log(\"새로쓰기\")\n}\nfunction onDelete() {\n    console.log(\"삭제삭제\");\n}","// imported Modules =============================================\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\n\nimport { Modal } from 'antd';\n\n// imported components ==========================================\nimport MapsModalInfo from \"./MapsModalInfo\";\nimport MapsModalComment from \"./MapsModalComment\";\n\n// Main Component ===============================================\nexport default function MapsModal ({nyamListSource, selectedNyam, mapsModalVisible, setMapsModalVisible}) {\n    return (\n        selectedNyam !== null\n            ?\n                <MapsModalWrap className=\"MapsModal\">\n                    <StyledModal\n                        title={selectedNyam.name}\n                        visible={mapsModalVisible}\n                        onCancel={() => { setMapsModalVisible(false) }}\n                        footer={null}\n                    >\n                        <ModalContentsWrap>\n                            <MapsModalInfo nyamListSource={nyamListSource} selectedNyam={selectedNyam} />\n                            <MapsModalComment nyamListSource={nyamListSource} selectedNyam={selectedNyam} />\n                        </ModalContentsWrap>\n                        \n                    </StyledModal>\n                </MapsModalWrap>\n    \n            :   \n                <div></div>\n    );\n}\n\n// style ========================================================\nconst MapsModalWrap = styled.div`\n\n    `;\n\nconst ModalContentsWrap = styled.div`\n    display : flex;\n`;\nconst StyledModal = styled(Modal)`\n    min-width : 50%;\n`;\n// function =====================================================\n// *","// imported Modules =============================================\nimport { React, useState, useEffect } from \"react\";\nimport ScriptTag from \"react-script-tag\";\nimport axios from \"axios\";\n\nimport styled from \"styled-components\";\n\nimport DataStorage from \"../DataStorage\"; // [경고] 임시적인 사용자설정 보관소 - 나중에 다른 방법으로 대체필요\n\n// imported components ==========================================\nimport MapsModal from \"./followers/Maps/MapsModal\";\n\nimport Loading from \"./atoms/Loading\";\n\n// Main Component ===============================================\nconsole.log(\"map\");\nlet map = null;\nconst mapValues = {\n    nyamListSource : DataStorage(\"NYAM_LIST_SOURCE\"),\n    nyamTypes : DataStorage(\"NYAM_TYPES_KEY\"),\n    mapSource : \"https://openapi.map.naver.com/openapi/v3/maps.js?ncpClientId=ont9t74d67\",\n    center : {\n        lat : 37.552472, \n        lng : 127.076665,\n    },\n    zoom : 16,\n};\n\nconst nyams = markersInit();\nconst markers = markersInit();\nlet _isPickmode = null;\n\nexport default function Maps ({ filters, isPickmode, setPickCoord }) {\n    const [isLoading, setIsLoading] = useState(false);\n    const [mapsModalVisible, setMapsModalVisible] = useState(false);\n    const [selectedNyam, setSelectedNyam] = useState(null);\n\n    useEffect( () => {\n        if ( markers !== null ) {\n            setMarkersVisible(filters, setIsLoading);\n        }\n    }, [filters]);\n\n    useEffect( () => {\n        _isPickmode = isPickmode;\n        \n        if(isPickmode === true){\n            map.setCursor(\"Crosshair\");\n        } else if (isPickmode === false) {\n            map.setCursor(\"Move\");\n        }\n    }, [isPickmode]);\n\n    return (\n        <MapsWrap className=\"Maps\">\n            <ScriptTag type=\"text/javascript\" onLoad={() => { init(setIsLoading, setMapsModalVisible, setSelectedNyam, isPickmode, setPickCoord); }} src={mapValues.mapSource} />\n\n            <Map id=\"map\"></Map>\n            <MapsModal nyamListSource={mapValues.nyamListSource} selectedNyam={selectedNyam} mapsModalVisible={mapsModalVisible} setMapsModalVisible={setMapsModalVisible} />\n            <Loading isLoading={isLoading} />\n        </MapsWrap>\n    );\n}\n\n// style ========================================================\nconst MapsWrap = styled.div`\n    display : flex;\n    flex : 1;\n    `;\n\nconst Map = styled.div`\n    width: 100%;\n    height : 100%;\n    `;\n\n// function =====================================================\nconst reqNyamList = {\n    read : async () => {\n        const { data } = await axios.get(mapValues.nyamListSource);\n        console.log(\"readNyams\", data);\n\n        return data;\n    },\n}\n\nconst setMarkersVisible = (filters, setIsLoading) => {\n    setIsLoading(true);\n\n    const types = mapValues.nyamTypes; // 정의되어있는 type배열 불러오기\n\n    types.forEach( type => {\n        const target = markers[type]; // markers의 한 type을 대상으로 정함\n        if (target.length === 0) { return; } // 대상이 비어있으면 바로 함수종료\n\n        const dest = filters[type]; // 업데이트 하려고 하는 값\n        if ( target[0].getVisible() !== dest ){ // target안의 첫번째 마커의 visible속성과, 업데이트 하려고 하는 값이 다르면\n            target.forEach( marker => { marker.setVisible(dest); }); // 업데이트!\n            return;\n        }\n    });\n\n    setIsLoading(false);\n}\n\nconst init = async(setIsLoading, setMapsModalVisible, setSelectedNyam, isPickmode, setPickCoord) => {\n    setIsLoading(true);\n\n    // set naver.maps.Map\n    const { center, zoom } = mapValues;\n\n    const mapOptions = {\n        center: new window.naver.maps.LatLng(center.lat, center.lng),\n        zoom: zoom,\n    };\n    map = new window.naver.maps.Map(\"map\", mapOptions);   \n\n    // read nyamList\n    const nyamList = await reqNyamList.read();\n\n    // set markers\n    const org = nyamList.shift(); // organization\n    /*const org_marker = */ new window.naver.maps.Marker({\n        position: new window.naver.maps.LatLng(org.lat, org.lng),\n        map: map,\n        icon: {\n          url : `img/icons/${org.type}.png`,\n          size: new window.naver.maps.Size(48, 48),\n          origin: new window.naver.maps.Point(0, 0),\n        }\n    });\n\n    nyamList.forEach( item => { // nyam items\n        const temp = new window.naver.maps.Marker({\n            position : new window.naver.maps.LatLng(item.lat, item.lng),\n            map : map,\n            icon : {\n                content: [\n                    '<div>',\n                        '<div style=\"background-color:rgba(255,255,255,0.8); padding:5px; border-radius:16px; border:1px solid #d9d9d9;\">',\n                            `<span>${item.name}</span>`,\n                        '</div>',\n                        `<img src=\"img/icons/${item.type}.png\">`,\n                    '</div>'\n                ].join(''),\n                anchor: new window.naver.maps.Point(16, 48),\n            }\n        });\n\n        temp.addListener(\"click\", (e) => {\n            const targetid = e.overlay[\"_nmarker_id\"];\n            const types = mapValues.nyamTypes;\n            console.log(e.coord);\n            for( let i = 0; i<types.length; i++){\n                const type = types[i];\n                let chk = false;\n\n                for( let j=0; j<markers[type].length; j++ ){\n                    if ( targetid === markers[type][j][\"_nmarker_id\"] ){\n                        setSelectedNyam(nyams[type][j]);\n                        setMapsModalVisible(true);\n                        chk = true;\n                        break;\n                    }\n                }\n\n                if (chk) { break; }\n            }\n        });\n\n        nyams[item.type].push(item);\n        markers[item.type].push(temp);\n    });\n\n    // set eventListener\n    map.addListener(\"click\", (e) => {\n        console.log(_isPickmode);\n        if (_isPickmode===true) {\n            const { x, y } = e.coord;\n            console.log(\"[Maps] lat lng : \", x, y);\n\n            setPickCoord({x, y});\n        }\n        \n    });\n    \n\n    setIsLoading(false);\n}\n\nfunction markersInit () {\n    let obj = {};\n    (mapValues.nyamTypes).forEach( category => {\n        obj[category] = [];\n    });\n\n    return obj;\n}","// imported Modules =============================================\nimport { React } from 'react';\nimport styled from 'styled-components';\n\n// imported components ==========================================\n// *\n\n// Main Component ===============================================\nexport default function Footer () {\n    return (\n        <FooterWrap className=\"Footer\">\n            <Group>\n                <Item>Wonjin Yi</Item>\n                <Item><strong>Contact </strong>studioplug17@gmail.com</Item>\n            </Group>\n            <Group style={{marginLeft : \"auto\",}}>\n                <Item><strong>냠냠램 TEST </strong>조직내부의 폐쇄적인 냠냠거리 공유 서비스</Item>\n            </Group>\n        </FooterWrap>\n    );\n}\n\n// style ========================================================\nconst FooterWrap = styled.div`\n    display : flex;\n \n    width : 100%;\n    padding : 20px 30px;\n\n    background-color : #333333;\n    color : #a1a1a1;\n    `; \n\nconst Group = styled.div`\n\n    `;\n\nconst Item = styled.p`\n    margin : 0;\n    `;\n\n// function =====================================================\n// *","// imported Modules =============================================\nimport { React, useState } from 'react';\nimport styled from \"styled-components\";\n\n// imported components ==========================================\nimport Header from \"./components/Header\";\nimport Maps from \"./components/Maps\";\nimport Footer from \"./components/Footer\";\n\n// Main Component ===============================================\nexport default function App() {\n  const [filters, setFilters] = useState({});\n  const [isPickmode, setIsPickmode] = useState(null); // 현재 '새로운 냠'버튼을 눌러 새로운 위치를 찍는 상태인지를 표현. true / false\n  const [pickCoord, setPickCoord] = useState(null); // 새로 추가할 냠의 좌표값. { x : 123, y : 123 }\n\n  return (\n    <AppWrap className=\"App\" style={{ cursor : (isPickmode ? 'Crosshair' : 'auto') }}>\n      <Header setFilters={setFilters} isPickmode={isPickmode} setIsPickmode={setIsPickmode} pickCoord={pickCoord} />\n      <Maps filters={filters} isPickmode={isPickmode} setPickCoord={setPickCoord}/>\n      <Footer />\n    </AppWrap>\n  );\n}\n\n// style ========================================================\nconst AppWrap = styled.div`\n  display : flex;\n  flex-direction : column;\n  height : 100%;\n\n  \n`;\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    // <React.StrictMode>\n    //   <App />\n    // </React.StrictMode>,\n    \n    <App />,\n    document.getElementById('root')\n);"],"sourceRoot":""}