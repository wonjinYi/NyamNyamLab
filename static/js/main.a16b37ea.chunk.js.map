{"version":3,"sources":["DataStorage.js","components/Header/followers/Tools.js","components/Header/Header.js","components/atoms/Loading.js","components/Maps/followers/NyamEditor.js","components/Maps/followers/MapsModalInfo.js","components/atoms/Comment.js","components/Maps/followers/MapsModalComment.js","components/Maps/leaders/MapsModal.js","components/supporters/naverMapsInit.js","components/supporters/naverMapsSetNyams.js","components/Maps/Maps.js","components/Footer/Footer.js","App.js","index.js"],"names":["DataStorage","key","NYAM_TYPES","korea","china","japan","fastfood","cvs","cafe","NYAM_TYPES_KEY","NYAM_LIST_SOURCE","Tools","setFilters","setIsPickmode","useState","arr","obj","forEach","el","initChecked","checked","setChecked","useEffect","ToolsWrap","className","placement","title","content","filterContent","e","target","nyamType","trigger","MenuButton","shape","icon","FilterOutlined","createNyamContent","PlusOutlined","style","marginLeft","onClick","onChange","styld","display","flexDirection","map","margin","styled","div","Button","Header","isPickmode","HeaderWrap","Logo","h1","Loading","isLoading","LoadingWrap","Backdrop","spinning","size","indicator","LoadingOutlined","fontSize","spin","SUMMARY_INIT_VALUE","name","description","open","close","type","lat","lng","comment","MENUITEM_INIT_VALUE","price","NyamEditor","pickCoord","taskType","defaultNyamValue","refreshMaps","nyamEditorModalVisible","setNyamEditorModalVisible","setIsLoading","summary","setSummary","menuItems","setMenuItems","summaryOnChange","value","menuItemOnChange","index","slice","addNewMenuItem","removeMenuItem","a","data","Object","assign","JSON","stringify","y","x","keys","i","length","console","log","strData","url","axios","post","tempSummary","menu","tempMenuItems","parse","NyamEditorWrap","visible","onCancel","footer","SummaryWrap","StyledInput","placeholder","TimePickersWrap","format","moment","time","timeString","flexGrow","marginRight","SPACE","minuteStep","Option","MenusWrap","item","MenuItemWrap","StyledButton","MinusOutlined","MenuItem","ButtonsWrap","Input","MapsModalInfo","nyamListSource","selectedNyam","setMapsModalVisible","parsedMenu","MapsModalInfoWrap","href","removeSpace","rel","QuestionCircleOutlined","FormOutlined","DeleteOutlined","handleDelete","Summary","Title","MenuWrap","header","bordered","dataSource","renderItem","Item","borderRadius","p","string","split","join","Comment","onDelete","CommentWrap","Content","MapsModalComment","newComment","setNewComment","commentsData","id","MapsModalCommentWrap","Form","EditOutlined","Comments","EmptyNoti","MapsModal","mapsModalVisible","MapsModalWrap","StyledModal","ModalContentsWrap","Modal","naverMapsinit","mapValues","center","zoom","mapOptions","window","naver","maps","LatLng","Map","naverMapsSetNyams","setMarkers","setNyams","setSelectedNyam","tempNyams","initWithNyamtype","nyamTypes","tempMarkers","readNyamList","nyamList","org","shift","org_marker","Marker","position","Size","origin","Point","cnt","marker","scaledSize","anchor","addListener","targetid","overlay","types","chk","j","push","setZIndex","src","get","category","mapSource","Maps","filters","nyams","markers","setPickCoord","values","setMap","setMarkersVisible","setCursor","listener","Event","coord","removeListener","findIndex","nyam","MapsWrap","onLoad","dest","getVisible","setVisible","Footer","FooterWrap","Group","App","AppWrap","cursor","ReactDOM","render","document","getElementById"],"mappings":"oQACe,SAASA,EAAaC,GAcjC,MAba,CACTC,WAAa,CACTC,MAAQ,eACRC,MAAQ,eACRC,MAAQ,eACRC,SAAW,iCACXC,IAAM,qBACNC,KAAO,gBAEXC,eAAiB,CAAC,QAAS,QAAS,QAAS,WAAY,MAAO,QAChEC,iBAAmB,wGAGXT,G,eCDVC,EAAaF,EAAY,cACzBS,EAAiBT,EAAY,kBAKpB,SAASW,EAAT,GAAgD,IAA9BC,EAA6B,EAA7BA,WAAYC,EAAiB,EAAjBA,cAAiB,EAC5BC,mBA+DlC,SAAqBC,GACjB,IAAIC,EAAM,GAKV,OAJAD,EAAIE,SAAS,SAAAC,GACTF,EAAIE,IAAM,KAGPF,EArEiCG,CAAYV,IADM,mBACnDW,EADmD,KAC1CC,EAD0C,KAS1D,OANAC,qBAAY,WACRV,EAAWQ,KACZ,CAACA,EAASR,IAKT,eAACW,EAAD,CAAWC,UAAU,QAArB,UAEI,cAAC,IAAD,CAASC,UAAU,SAASC,MAAO,4BAASC,QAASC,GAL7D,SAAkBC,GAAKR,EAAW,2BAAKD,GAAN,kBAAgBS,EAAEC,OAAOC,SAAYF,EAAEC,OAAOV,aAKMA,GAAUY,QAAQ,QAA/F,SACI,cAAC,IAAD,CAASN,MAAM,4BAAQD,UAAU,OAAjC,SACI,cAACQ,EAAD,CAAYC,MAAM,SAASC,KAAM,cAACC,EAAA,EAAD,UAKzC,cAAC,IAAD,CAASX,UAAU,SAASC,MAAO,+CAAaC,QAASU,EAAmBL,QAAQ,QAApF,SACI,cAAC,IAAD,CAASN,MAAM,4BAAQD,UAAU,QAAjC,SACI,cAACQ,EAAD,CAAYC,MAAM,SAASC,KAAM,cAACG,EAAA,EAAD,IAAkBC,MAAO,CAACC,WAAW,OAAQC,QAAU,WAAQ5B,GAAc,aAOlI,SAASe,EAAcc,EAAUtB,GAC7B,OACI,qBAAKI,UAAU,gBAAgBmB,MAAO,CAACC,QAAQ,OAAQC,cAAc,UAArE,SAEIpC,EAAeqC,KAAK,SAAC7C,GAAD,OAChB,8BAAK,cAAC,IAAD,CAAUyC,SAAUA,EAAUtB,QAASA,EAAQnB,GAAM8B,SAAU9B,EAA/D,SAA+EC,EAAWD,IAAjBA,UAO9F,I,IAAMoC,EACF,8BACI,mBAAGE,MAAO,CAACQ,OAAO,KAAlB,SAAwB,oJAM1BxB,EAAYyB,IAAOC,IAAV,oMAWThB,EAAae,YAAOE,IAAPF,CAAH,iDCvED,SAASG,EAAT,GAA6D,IAA1CvC,EAAyC,EAAzCA,WAAYwC,EAA6B,EAA7BA,WAAYvC,EAAiB,EAAjBA,cACtD,OACI,eAACwC,EAAD,CAAY7B,UAAU,SAAtB,UACI,cAAC8B,EAAD,uCACA,cAAC3C,EAAD,CAAOC,WAAYA,EAAYwC,WAAYA,EAAYvC,cAAeA,OAMlF,I,IAAMwC,EAAaL,IAAOC,IAAV,oKAUVK,EAAON,IAAOO,GAAV,0I,kMCnBK,SAASC,GAAT,GAAkC,IAAdC,EAAa,EAAbA,UAE/B,OAAKA,EAEG,eAACC,GAAD,CAAalC,UAAU,UAAvB,UACI,cAACmC,GAAD,IACA,cAAC,KAAD,CAAMC,SAAUH,EAAWI,KAAK,QAAQC,UAAW,cAACC,GAAA,EAAD,CAAiBxB,MAAO,CAAEyB,SAAU,IAAMC,MAAI,SAIlG,qBAAKzC,UAAU,YAM9B,I,wBAAMkC,GAAcV,IAAOC,IAAV,gNAaXU,GAAWX,IAAOC,IAAV,2KCvBR/C,GAAaF,EAAY,cACzBS,GAAiBT,EAAY,kBAC7BU,GAAmBV,EAAY,oBAM/BkE,GAAqB,CAAEC,KAAM,KAAMC,YAAa,KAAMC,KAAM,KAAMC,MAAO,KAAMC,KAAM,KAAMC,IAAK,KAAMC,IAAK,KAAMC,QAAS,MAC1HC,GAAsB,CAAC,CAAER,KAAM,KAAMS,MAAO,OAEnC,SAASC,GAAT,GAAuI,IAAjHnD,EAAgH,EAAhHA,MAAOoD,EAAyG,EAAzGA,UAAWC,EAA8F,EAA9FA,SAAUC,EAAoF,EAApFA,iBAAkBC,EAAkE,EAAlEA,YAAaC,EAAqD,EAArDA,uBAAwBC,EAA6B,EAA7BA,0BAA6B,EAC/GrE,oBAAS,GADsG,mBAC1I2C,EAD0I,KAC/H2B,EAD+H,OAGnHtE,mBAASoD,IAH0G,mBAG1ImB,EAH0I,KAGjIC,EAHiI,OAI/GxE,mBAAS6D,IAJsG,mBAI1IY,EAJ0I,KAI/HC,EAJ+H,KAsBjJ,SAASC,EAAgB3D,EAAQ4D,GAC7BJ,EAAW,2BAAKD,GAAN,kBAAgBvD,EAAS4D,KAEvC,SAASC,EAAiBC,EAAOrB,EAAMmB,GACnCF,EAAa,GAAD,mBAAKD,EAAUM,MAAM,EAAGD,IAAxB,aAAC,eAAoCL,EAAUK,IAA/C,kBAAwDrB,EAAOmB,KAA/D,YAA2EH,EAAUM,MAAMD,EAAQ,MAInH,SAASE,EAAeF,GAASJ,EAAa,GAAD,mBAAKD,EAAUM,MAAM,EAAGD,IAAxB,CAAgC,CAAEzB,KAAM,GAAIS,MAAO,KAAnD,YAA4DW,EAAUM,MAAMD,MACzH,SAASG,EAAeH,GAASJ,EAAa,GAAD,mBAAKD,EAAUM,MAAM,EAAGD,IAAxB,YAAmCL,EAAUM,MAAMD,EAAQ,MA/ByC,4CAuCjJ,WAAwB/D,GAAxB,uBAAAmE,EAAA,sDACIZ,GAAa,GAEPa,EAAO,GACbC,OAAOC,OAAOF,EAAMZ,GAGH,WAAbN,IACAmB,OAAOC,OAAOF,EAAM,CAAE,QAAWG,KAAKC,UAAU,CAAE,QAAW,OAC7DJ,EAAKzB,IAAMM,EAAUwB,EACrBL,EAAKxB,IAAMK,EAAUyB,GAIzBL,OAAOC,OAAOF,EAAM,CAAE,KAAQG,KAAKC,UAAU,CAAE,KAAQd,MAGjDiB,EAAON,OAAOM,KAAKP,GAChBQ,EAAI,EAlBjB,YAkBoBA,EAAID,EAAKE,QAlB7B,oBAmB8B,OAAlBT,EAAKO,EAAKC,KAAkC,KAAlBR,EAAKO,EAAKC,IAnBhD,wBAoBYE,QAAQC,IAAI,8CACZxB,GAAa,GArBzB,2BAkBqCqB,IAlBrC,8BA2BUI,EAAUT,KAAKC,UAAUJ,GACzBa,EA5BV,UA4BmBpG,GA5BnB,qCA4BgEqE,GA5BhE,UA6BUgC,IAAMC,KAAKF,EAAKD,GA7B1B,yBAgCU5B,IAhCV,QAiCIE,GAA0B,GAC1BC,GAAa,GAlCjB,6CAvCiJ,sBA4EjJ,OAtEA9D,qBAAU,WACN,GAAiB,SAAbyD,GAA2C,MAApBC,EAA0B,CAEjD,IAAIiC,EAAc,GAClBf,OAAOC,OAAOc,EAAajC,UACpBiC,EAAYC,KACnB5B,EAAW2B,GAGX,IAAIE,EACJA,EAAiBf,KAAKgB,MAAMpC,EAAiBkC,MAAOA,KACpD1B,EAAa2B,MAElB,CAACnC,EAAkBD,IA0DlB,cAACsC,GAAD,CAAgB7F,UAAU,aAA1B,SACI,eAAC,IAAD,CACIE,MAAOA,EACP4F,QAASpC,EACTqC,SAAU,WAAQpC,GAA0B,IAC5CqC,OAAQ,KAJZ,UAMI,eAACC,GAAD,WACI,cAAC,IAAD,2BAEA,cAACC,GAAD,CAAavD,KAAK,OAAOwD,YAAY,4BAAQjC,MAAOL,EAAQlB,KAAMzB,SAAU,SAACb,GAAQ4D,EAAgB5D,EAAEC,OAAOqC,KAAMtC,EAAEC,OAAO4D,UAC7H,cAACgC,GAAD,CAAavD,KAAK,cAAcwD,YAAY,eAAKjC,MAAOL,EAAQjB,YAAa1B,SAAU,SAACb,GAAQ4D,EAAgB5D,EAAEC,OAAOqC,KAAMtC,EAAEC,OAAO4D,UAExI,eAACkC,GAAD,WACI,cAAC,IAAD,CACIzD,KAAK,WAAW0D,OAAO,QAAQF,YAAY,mCAAUjC,MAAOL,EAAQhB,KAAOyD,IAAOzC,EAAQhB,KAAM,SAAW,KAC3G3B,SAAU,SAACqF,EAAMC,GAAiBvC,EAAgB,OAAQuC,IAAgBzF,MAAO,CAAE0F,SAAU,IAAKC,YAAaC,IAC/GC,WAAY,IAEhB,cAAC,IAAD,CACIjE,KAAK,YAAY0D,OAAO,QAAQF,YAAY,mCAAUjC,MAAOL,EAAQf,MAAQwD,IAAOzC,EAAQf,MAAO,SAAW,KAC9G5B,SAAU,SAACqF,EAAMC,GAAiBvC,EAAgB,QAASuC,IAAgBzF,MAAO,CAAE0F,SAAU,KAC9FG,WAAY,OAIpB,cAAC,IAAD,CAAQT,YAAY,oDAAYjC,MAAOL,EAAQd,KAAM7B,SAAU,SAACgD,GAAYD,EAAgB,OAAQC,IAApG,SACKjF,GAAeqC,KAAI,SAAC7C,EAAK2F,GAAN,OAAiB,cAAC,IAAOyC,OAAR,CAAe3C,MAAOzF,EAAtB,SAAwCC,GAAWD,IAAnB2F,WAI7E,eAAC0C,GAAD,WACI,cAAC,IAAD,2BAEE/C,EAAUzC,KAAI,SAACyF,EAAM3C,GAAP,OAyDpC,SAAkBA,EAAOzB,EAAMS,EAAOkB,EAAgBC,EAAgBJ,GAClE,OACI,eAAC6C,GAAD,WACI,cAACC,GAAD,CAAcvG,MAAM,SAASC,KAAM,cAACG,EAAA,EAAD,IAAkBC,MAAO,GAAIE,QAAS,SAACZ,GAAQiE,EAAeF,MACjG,cAAC6C,GAAD,CAAcvG,MAAM,SAASC,KAAM,cAACuG,GAAA,EAAD,IAAmBjG,QAAS,SAACZ,GAAQkE,EAAeH,MAEvF,cAAC8B,GAAD,CAAaC,YAAY,4BAAQjC,MAAOvB,EAAM5B,MAAO,CAAE2F,YAAaC,IAASzF,SAAU,SAACb,GAAQ8D,EAAiBC,EAAO,OAAQ/D,EAAEC,OAAO4D,UACzI,cAACgC,GAAD,CAAaC,YAAY,4BAAQjC,MAAOd,EAAOlC,SAAU,SAACb,GAAQ8D,EAAiBC,EAAO,QAAS/D,EAAEC,OAAO4D,YAL7FE,GA3D0B+C,CAAS/C,EAAO2C,EAAKpE,KAAMoE,EAAK3D,MAAOkB,EAAgBC,EAAgBJ,MACxG,cAAC8C,GAAD,CAAcvG,MAAM,SAASC,KAAM,cAACG,EAAA,EAAD,IAAkBC,MAAO,GAAIE,QAAS,SAACZ,GAAQiE,EAAeP,EAAUmB,WAE3G,cAAC,IAAD,OAGJ,eAACkC,GAAD,WACI,cAAC,IAAD,CAAQrE,KAAK,OAAO9B,QApFpC,SAAkBZ,GACdyD,EAAWpB,IACXsB,EAAab,KAkFD,6CACA,cAAC,IAAD,CAAQlC,QAvHyH,4CAuHtGF,MAAO,CAAEC,WAAY,QAAhD,mCAGJ,cAACgB,GAAD,CAASC,UAAWA,SAOpC,I,eAAM0E,GAAQ,MAGRT,GAAc1E,YAAO6F,IAAP7F,CAAH,2DACKmF,IAGhBM,GAAezF,YAAOE,IAAPF,CAAH,sDACGmF,IAIfd,GAAiBrE,IAAOC,IAAV,4BAEdwE,GAAczE,IAAOC,IAAV,iHAMX2E,GAAkB5E,IAAOC,IAAV,+EAECkF,IAGhBG,GAAYtF,IAAOC,IAAV,4BAETuF,GAAexF,IAAOC,IAAV,uDAIZ2F,GAAc5F,IAAOC,IAAV,uDC5KF,SAAS6F,GAAT,GAA2G,IAAjFC,EAAgF,EAAhFA,eAAgBC,EAAgE,EAAhEA,aAAc/D,EAAkD,EAAlDA,YAAaG,EAAqC,EAArCA,aAAc6D,EAAuB,EAAvBA,oBAAuB,EACvDnI,oBAAS,GAD8C,mBAC7GoE,EAD6G,KACrFC,EADqF,KAG7Gd,EAAmC2E,EAAnC3E,KAAMC,EAA6B0E,EAA7B1E,MAAOF,EAAsB4E,EAAtB5E,YAAa8C,EAAS8B,EAAT9B,KAC5BgC,EAAa9C,KAAKgB,MAAMF,GAAMA,KAEpC,OACI,eAACiC,GAAD,CAAmB3H,UAAU,gBAA7B,UACI,eAAC,GAAD,WACI,mBAAG4H,KAAI,0CAAqCC,GAAYL,EAAa7E,OAASrC,OAAO,SAASwH,IAAI,aAAlG,SACI,cAAC,IAAD,CAAS5H,MAAM,iCAAQD,UAAU,MAAjC,SACI,cAAC,IAAD,CAAQS,MAAM,SAASC,KAAM,cAACoH,EAAA,EAAD,IAA4B1F,KAAK,SAAStB,MAAO,CAAC2F,YAAYC,UAGnG,cAAC,IAAD,CAASzG,MAAM,eAAKD,UAAU,MAA9B,SACI,cAAC,IAAD,CAAQS,MAAM,SAASC,KAAM,cAACqH,EAAA,EAAD,IAAkB3F,KAAK,SAASpB,QAAS,SAACZ,GAAKsD,GAA0B,IAAS5C,MAAO,CAAC2F,YAAYC,QAEvI,cAAC,IAAD,CAASzG,MAAM,sCAAaD,UAAU,MAAtC,SACI,cAAC,IAAD,CAAQS,MAAM,SAASC,KAAM,cAACsH,EAAA,EAAD,IAAoB5F,KAAK,SAASpB,QAAS,SAACZ,I,6CAAK6H,CAAaX,EAAgBC,EAAc5D,EAAc6D,EAAqBhE,WAIpK,eAAC0E,GAAD,WACI,gCACI,cAACC,GAAD,uCACA,8BAAIvF,EAAJ,IAAWC,QAEf,mBAAG/B,MAAO,CAACC,WAAW,OAAtB,SAA+B4B,OAGnC,eAACyF,GAAD,WACI,cAACD,GAAD,2BACA,cAAC,IAAD,CACI/F,KAAK,QACLiG,OAAQ,KACRtC,OAAQ,KACRuC,UAAQ,EACRC,WAAYd,EAAWpG,KAAK,SAAAyF,GAAI,OAAM,gCAAMA,EAAKpE,KAAX,IAAiB,4BAAIoE,EAAK3D,cAChEqF,WAAY,SAAC1B,EAAM3C,GAAP,OAAiB,cAAC,IAAKsE,KAAN,UAAwB3B,GAAR3C,IAC7CrD,MAAO,CAAC4H,aAAa,YAI7B,cAACtF,GAAD,CACInD,MAAM,kCAASoD,UAAW,KAAMC,SAAS,OAAOC,iBAAkBgE,EAClE/D,YAAaA,EAAaC,uBAAwBA,EAAwBC,0BAA2BA,OASrH,IAAMgD,GAAQ,MAERgB,GAAoBnG,IAAOC,IAAV,iOAKF,OAOftC,GAAQqC,IAAOC,IAAV,iHAGWkF,IAGhBwB,GAAU3G,IAAOC,IAAV,uDAIP4G,GAAW7G,IAAOC,IAAV,qFAKR2G,GAAQ5G,IAAOoH,EAAV,4E,8CAMX,WAA4BrB,EAAgBC,EAAc5D,EAAc6D,EAAqBhE,GAA7F,iBAAAe,EAAA,6DACIZ,GAAa,GAEP0B,EAHV,UAGmBiC,EAHnB,oCAIU9C,EAAOG,KAAKC,UAAU2C,GAJhC,SAMUjC,IAAMC,KAAKF,EAAKb,GAN1B,uBAQUhB,IARV,OASIgE,GAAoB,GACpB7D,GAAa,GAVjB,4C,sBAaA,SAASiE,GAAYgB,GAEjB,OADYA,EAAOC,MAAM,KAAKC,KAAK,I,oBC7GxB,SAASC,GAAT,GAAiD,IAA7B5E,EAA4B,EAA5BA,MAAOjE,EAAqB,EAArBA,QAAS8I,EAAY,EAAZA,SAC/C,OACI,eAACC,GAAD,CAAalJ,UAAU,UAAvB,UACI,cAACmJ,GAAD,UAAUhJ,IACV,cAAC,IAAD,CAASH,UAAU,gBAAgBE,MAAM,sCAAaD,UAAU,QAAhE,SACI,cAAC,IAAD,CAAQmE,MAAOA,EAAO1D,MAAM,SAASC,KAAM,cAACsH,EAAA,EAAD,IAAoBlH,MAAO,GAAIE,QAAS,SAACZ,GAAK4I,EAAS7E,WAOlH,I,YAAMuC,GAAQ,MAERuC,GAAc1H,IAAOC,IAAV,gHAIEkF,IAGbwC,GAAU3H,IAAOoH,EAAV,mPACGjC,GAKKA,ICtBN,SAASyC,GAAT,GAAyF,IAA5D7B,EAA2D,EAA3DA,eAAgBC,EAA2C,EAA3CA,aAAc/D,EAA6B,EAA7BA,YAAaG,EAAgB,EAAhBA,aAAgB,EAC/DtE,mBAAS,MADsD,mBAC5F+J,EAD4F,KAChFC,EADgF,KAE7FC,EAAe3E,KAAKgB,MAAM4B,EAAatE,SAASA,QAF6C,4CAInG,WAAwB7C,GAAxB,iBAAAmE,EAAA,yDACIZ,GAAa,GAGG,MAAZyF,GAAiC,KAAbA,EAJ5B,uBAKQzF,GAAa,GALrB,iCAUU0B,EAVV,UAUmBiC,EAVnB,qCAWU9C,EAAOG,KAAKC,UAAU,CACxB2E,GAAKhC,EAAagC,GAClBtG,QAAU0B,KAAKC,UAAU,CAAE3B,QAAO,CAAImG,GAAJ,mBAAmBE,QAb7D,SAkBUhE,IAAMC,KAAKF,EAAKb,GAlB1B,wBAqBUhB,IArBV,QAsBI6F,EAAc,MACd1F,GAAa,GAvBjB,6CAJmG,+BA8BpFqF,EA9BoF,8EA8BnG,WAAwB7E,GAAxB,iBAAAI,EAAA,6DACIZ,GAAa,GAGP0B,EAJV,UAImBiC,EAJnB,qCAKU9C,EAAOG,KAAKC,UAAU,CACxB2E,GAAKhC,EAAagC,GAClBtG,QAAU0B,KAAKC,UAAU,CAAE3B,QAAO,sBAAOqG,EAAalF,MAAM,EAAED,IAA5B,YAAuCmF,EAAalF,MAAMD,EAAM,SAP1G,SAYUmB,IAAMC,KAAKF,EAAKb,GAZ1B,uBAeUhB,IAfV,OAgBIG,GAAa,GAhBjB,4CA9BmG,sBAiDnG,OACI,eAAC6F,GAAD,CAAsBzJ,UAAU,mBAAhC,UACI,eAAC0J,GAAD,WACI,cAAC,IAAD,CAAOvD,YAAY,uEAAgBjC,MAAOmF,EAAYnI,SAAU,SAACb,GAAKiJ,EAAcjJ,EAAEC,OAAO4D,QAAUnD,MAAO,CAAC4H,aAAa,MAAOjC,YAAY,SAC/I,cAAC,IAAD,CAAS1G,UAAU,gBAAgBE,MAAM,8CAAWD,UAAU,QAA9D,SACI,cAAC,IAAD,CAAQ8C,KAAK,UAAUrC,MAAM,SAASC,KAAM,cAACgJ,GAAA,EAAD,IAAkBtH,KAAK,SAASpB,QAtDO,mDA0D3F,cAAC2I,GAAD,UAEIL,EAAarE,OAAS,EAClBqE,EAAajI,KAAK,SAAEyF,EAAM3C,GAAR,OACd,cAAC4E,GAAD,CAAqB5E,MAAOA,EAAOjE,QAAS4G,EAAMkC,SAAUA,GAA9C7E,MAGlB,cAACyF,GAAD,UAAW,oFAQ/B,I,SAAMJ,GAAuBjI,IAAOC,IAAV,sRAiBpBmI,GAAWpI,IAAOC,IAAV,kMASRiI,GAAOlI,IAAOC,IAAV,iFAKJoI,GAAYrI,IAAOC,IAAV,qICzGA,SAASqI,GAAT,GAAyG,IAApFvC,EAAmF,EAAnFA,eAAgBC,EAAmE,EAAnEA,aAAc/D,EAAqD,EAArDA,YAAasG,EAAwC,EAAxCA,iBAAkBtC,EAAsB,EAAtBA,oBAAsB,EAC/EnI,oBAAS,GADsE,mBAC3G2C,EAD2G,KAChG2B,EADgG,KAEnH,OACoB,MAAhB4D,EAEQ,cAACwC,GAAD,CAAehK,UAAU,YAAzB,SACI,eAACiK,GAAD,CACI/J,MAAOsH,EAAa7E,KACpBmD,QAASiE,EACThE,SAAU,WAAQ0B,GAAoB,IACtCzB,OAAQ,KAJZ,UAMI,eAACkE,GAAD,WACI,cAAC5C,GAAD,CAAeC,eAAgBA,EAAgBC,aAAcA,EAAc/D,YAAaA,EAAaG,aAAcA,EAAc6D,oBAAqBA,IACtJ,cAAC2B,GAAD,CAAkB7B,eAAgBA,EAAgBC,aAAcA,EAAc/D,YAAaA,EAAaG,aAAcA,OAG1H,cAAC5B,GAAD,CAASC,UAAWA,SAK5B,wBAKhB,I,MAAM+H,GAAgBxI,IAAOC,IAAV,oCAIbyI,GAAoB1I,IAAOC,IAAV,8HAOjBwI,GAAczI,YAAO2I,IAAP3I,CAAH,oDClDF,SAAS4I,GAAeC,GAAW,IAEtCC,EAAiBD,EAAjBC,OAAQC,EAASF,EAATE,KAEVC,EAAa,CACfF,OAAQ,IAAIG,OAAOC,MAAMC,KAAKC,OAAON,EAAOtH,IAAKsH,EAAOrH,KACxDsH,KAAMA,GAIV,OAFY,IAAIE,OAAOC,MAAMC,KAAKE,IAAI,MAAOL,GCNlC,SAAeM,GAA9B,6C,8CAAe,WAAkCxJ,EAAK+I,EAAWU,EAAYC,EAAUvD,EAAqBwD,GAA7F,yBAAAzG,EAAA,6DAEL0G,EAAYC,GAAiBd,EAAUe,WACvCC,EAAcF,GAAiBd,EAAUe,WAHpC,SAMYE,GAAajB,EAAU9C,gBANnC,OAMLgE,EANK,OAULC,EAAMD,EAASE,QACfC,EAAa,IAAIjB,OAAOC,MAAMC,KAAKgB,OAAO,CAC5CC,SAAU,IAAInB,OAAOC,MAAMC,KAAKC,OAAOY,EAAIxI,IAAKwI,EAAIvI,KACpD3B,IAAKA,EACLX,KAAM,CACJ2E,IAAG,oBAAgBkG,EAAIzI,KAApB,QACHV,KAAM,IAAIoI,OAAOC,MAAMC,KAAKkB,KAAK,GAAI,IACrCC,OAAQ,IAAIrB,OAAOC,MAAMC,KAAKoB,MAAM,EAAG,MAKzCC,EAAM,EACVT,EAAS9L,SAAS,SAAAsH,GACd,IAAMkF,EAAS,IAAIxB,OAAOC,MAAMC,KAAKgB,OAAO,CACxCC,SAAW,IAAInB,OAAOC,MAAMC,KAAKC,OAAO7D,EAAK/D,IAAK+D,EAAK9D,KACvD3B,IAAMA,EACNX,KAAO,CACHR,QAAS,CACL,QACI,mHAFC,4CAGwC4G,EAAKpE,KAH7C,WAID,SAJC,kCAK0BoE,EAAKhE,KAL/B,UAML,UACFgG,KAAK,IACP1G,KAAO,IAAIoI,OAAOC,MAAMC,KAAKkB,KAAK,EAAE,KACpCK,WAAY,IAAIzB,OAAOC,MAAMC,KAAKkB,KAAK,IAAK,IAE5CM,OAAQ,IAAI1B,OAAOC,MAAMC,KAAKoB,MAAM,GAAI,OAKhDE,EAAOG,YAAY,SAAS,SAAC/L,GAIzB,IAHA,IAAMgM,EAAWhM,EAAEiM,QAAF,YACXC,EAAQlC,EAAUe,UAEfnG,EAAI,EAAGA,EAAEsH,EAAMrH,OAAQD,IAAI,CAGhC,IAFA,IAAMlC,EAAOwJ,EAAMtH,GACfuH,GAAM,EACDC,EAAE,EAAGA,EAAEpB,EAAYtI,GAAMmC,OAAQuH,IACtC,GAAKJ,IAAahB,EAAYtI,GAAM0J,GAAlB,YAAqC,CACnDxB,EAAgBC,EAAUnI,GAAM0J,IAChChF,GAAoB,GACpB+E,GAAM,EACN,MAGR,GAAIA,EAAO,UAInBtB,EAAUnE,EAAKhE,MAAM2J,KAAK3F,GAC1BsE,EAAYtE,EAAKhE,MAAM2J,KAAKT,GAE5BD,OAGJN,EAAWiB,UAAUX,GAErBhB,EAASE,GACTH,EAAWM,GAxEA,6C,+BA2EAC,G,iFAAf,WAA6BsB,GAA7B,iBAAApI,EAAA,sEAC+Be,IAAMsH,IAAID,GADzC,uBACgBnI,EADhB,EACgBA,KADhB,kBAIeA,GAJf,4C,sBAOA,SAAS0G,GAAkBoB,GACvB,IAAI/M,EAAM,GAKV,OAJA+M,EAAM9M,SAAS,SAAAqN,GACXtN,EAAIsN,GAAY,MAGbtN,ECvEX,IAAI8B,GAAM,KAEJ+I,GAAY,CACd9C,eAAiB/I,EAAY,oBAC7B4M,UAAY5M,EAAY,kBACxBuO,UAAY,0EACZzC,OAAS,CACLtH,IAAM,UACNC,IAAM,YAEVsH,KAAO,IAGI,SAASyC,GAAT,GAAwD,IAAvCC,EAAsC,EAAtCA,QAASrL,EAA6B,EAA7BA,WAAYvC,EAAiB,EAAjBA,cAAiB,EACxCC,mBAAS,MAD+B,mBAC3D4N,EAD2D,KACpDlC,EADoD,OAEpC1L,mBAAS,MAF2B,mBAE3D6N,EAF2D,KAElDpC,EAFkD,OAIhCzL,oBAAS,GAJuB,mBAI3D2C,EAJ2D,KAIhD2B,EAJgD,OAK1BtE,mBAAS,MALiB,mBAK3DkI,EAL2D,KAK7CyD,EAL6C,OAMhC3L,mBAAS,MANuB,mBAM3DgE,EAN2D,KAMhD8J,EANgD,OAQlB9N,oBAAS,GARS,mBAQ3DyK,EAR2D,KAQzCtC,EARyC,OASNnI,oBAAS,GATH,mBAS3DoE,EAT2D,KASnCC,EATmC,cA4CnDF,IA5CmD,2EA4ClE,8BAAAe,EAAA,sDAEI,IAAI,EAAJ,IAAgBE,OAAO2I,OAAOF,GAA9B,eAAwC,KAChC1N,SAAS,SAAAwM,GACTA,EAAOqB,OAAO,SAJ1B,gBASUxC,GAAkBxJ,GAAK+I,GAAWU,EAAYC,EAAUvD,EAAqBwD,GATvF,4CA5CkE,sBA0DlE,OA/CAnL,qBAAW,WACU,OAAZqN,GACDI,GAAkBN,EAASrJ,EAAcuJ,KAE9C,CAACF,EAASE,IAEbrN,qBAAW,WACP,IAAkB,IAAf8B,EAAoB,CACnBN,GAAIkM,UAAU,aACd,IAAMC,EAAWhD,OAAOC,MAAMC,KAAK+C,MAAMtB,YAAY9K,GAAK,SAAS,SAASjB,GACxE,IAAiB,IAAbuB,EAAmB,CAAC,IAAD,EACFvB,EAAEsN,MAAX5I,EADW,EACXA,EAAGD,EADQ,EACRA,EAEXsI,EAAa,CAACrI,IAAGD,MACjBzF,GAAc,GACdsE,GAA0B,GAC1B8G,OAAOC,MAAMC,KAAK+C,MAAME,eAAeH,YAGzB,IAAf7L,GACPN,GAAIkM,UAAU,UAEnB,CAAC5L,EAAYvC,IAEhBS,qBAAW,WAEP,GAAqB,MAAhB0H,EAAsB,CAAC,IAChBzE,EAAayE,EAAbzE,KAAMyG,EAAOhC,EAAPgC,GACRpF,EAAQ8I,EAAMnK,GAAM8K,WAAW,SAAAC,GAAI,OAAIA,EAAKtE,KAAOA,KACzDyB,EAAiBiC,EAAMnK,GAAMqB,OAElC,CAAC8I,EAAO1F,IAiBP,eAACuG,GAAD,CAAU/N,UAAU,OAApB,UACI,cAAC,IAAD,CACI+C,KAAK,kBAAkB6J,IAAKvC,GAAU0C,UACtCiB,OAAM,sBAAG,sBAAAxJ,EAAA,6DACLZ,GAAa,GACbtC,GAAM8I,GAAcC,IAFf,SAGCS,GAAkBxJ,GAAK+I,GAAWU,EAAYC,EAAUvD,EAAqBwD,GAH9E,OAILrH,GAAa,GAJR,6CAQb,cAACiH,GAAD,CAAKrB,GAAG,QACR,cAACM,GAAD,CAAWvC,eAAgB8C,GAAU9C,eAAgBC,aAAcA,EAAc/D,YAAaA,EAAasG,iBAAkBA,EAAkBtC,oBAAqBA,IACpK,cAACpE,GAAD,CACInD,MAAO,+CAAaoD,UAAWA,EAAWC,SAAS,SAASC,iBAAkB,KAC9EC,YAAaA,EAAaC,uBAAwBA,EAAwBC,0BAA2BA,IAGzG,cAAC3B,GAAD,CAASC,UAAWA,OAMhC,I,SAAM8L,GAAWvM,IAAOC,IAAV,sEAKRoJ,GAAMrJ,IAAOC,IAAV,wEAMH8L,GAAoB,SAACN,EAASrJ,EAAcuJ,GAC9CvJ,GAAa,GAECyG,GAAUe,UAElB3L,SAAS,SAAAsD,GACX,IAAMzC,EAAS6M,EAAQpK,GACvB,GAAsB,IAAlBzC,EAAO4E,OAAX,CAEA,IAAM+I,EAAOhB,EAAQlK,GAChBzC,EAAO,GAAG4N,eAAiBD,GAC5B3N,EAAOb,SAAS,SAAAwM,GAAYA,EAAOkC,WAAWF,UAKtDrK,GAAa,ICtIF,SAASwK,KACpB,OACI,eAACC,GAAD,CAAYrO,UAAU,SAAtB,UACI,eAACsO,GAAD,WACI,cAAC5F,GAAD,wBACA,eAACA,GAAD,WAAM,8CAAN,+BAEJ,cAAC4F,GAAD,CAAOvN,MAAO,CAACC,WAAa,QAA5B,SACI,eAAC0H,GAAD,WAAM,8DAAN,2HAOhB,I,GAAM2F,GAAa7M,IAAOC,IAAV,gKAUV6M,GAAQ9M,IAAOC,IAAV,oCAILiH,GAAOlH,IAAOoH,EAAV,mDC3BK,SAAS2F,KAAO,IAAD,EACEjP,mBAAS,IADX,mBACrB2N,EADqB,KACZ7N,EADY,OAEQE,mBAAS,MAFjB,mBAErBsC,EAFqB,KAETvC,EAFS,KAI5B,OACE,eAACmP,GAAD,CAASxO,UAAU,MAAMe,MAAO,CAAE0N,OAAU7M,EAAa,YAAc,QAAvE,UACE,cAACD,EAAD,CAAQvC,WAAYA,EAAYC,cAAeA,IAC/C,cAAC2N,GAAD,CAAMC,QAASA,EAASrL,WAAYA,EAAYvC,cAAeA,IAC/D,cAAC+O,GAAD,OAMN,IAAMI,GAAUhN,IAAOC,IAAV,+FClBbiN,IAASC,OAKL,cAACJ,GAAD,IACAK,SAASC,eAAe,W","file":"static/js/main.a16b37ea.chunk.js","sourcesContent":["// [경고] 임시적인 사용자설정 보관소 - 나중에 다른 방법으로 대체필요\nexport default function DataStorage (key) {\n    const data = {\n        NYAM_TYPES : {\n            korea : \"한식\",\n            china : \"중식\",\n            japan : \"일식\",\n            fastfood : \"패스트푸드\",\n            cvs : \"편의점\",\n            cafe : \"카페\",\n        }, \n        NYAM_TYPES_KEY : [\"korea\", \"china\", \"japan\", \"fastfood\", \"cvs\", \"cafe\"],\n        NYAM_LIST_SOURCE : \"https://script.google.com/macros/s/AKfycbyuACrtmBSgcaehSnfbDVhSAMeScTP455Z44h4jtjxRGxJ5UNeVdOEh/exec\",\n    }\n\n    return data[key];\n}","// imported Modules =============================================\nimport { React, useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Checkbox, Popover, Button, Tooltip } from \"antd\";\nimport { FilterOutlined, PlusOutlined } from \"@ant-design/icons\"\nimport 'antd/dist/antd.css';\n\n// imported Components ==========================================\n// *\n\n/* ******************************************* */\n// [경고] 임시적인 사용자설정 보관소 - 나중에 다른 방법으로 대체필요\nimport DataStorage from \"../../../DataStorage\"; \nconst NYAM_TYPES = DataStorage(\"NYAM_TYPES\");\nconst NYAM_TYPES_KEY = DataStorage(\"NYAM_TYPES_KEY\");\n// [경고] 임시적인 사용자설정 보관소 - 나중에 다른 방법으로 대체필요\n/* ******************************************* */\n\n// Main Component ===============================================\nexport default function Tools ({ setFilters, setIsPickmode }) {\n    const [checked, setChecked] = useState( initChecked(NYAM_TYPES_KEY) );\n\n    useEffect ( () => { \n        setFilters(checked); \n    }, [checked, setFilters]);\n\n    function onChange(e) { setChecked({ ...checked, [e.target.nyamType] : e.target.checked }) }\n\n    return (\n        <ToolsWrap className=\"Tools\">\n            {/* 냠 필터링 */}\n            <Popover placement=\"bottom\" title={\"냠 필터링\"} content={filterContent(onChange, checked)} trigger=\"click\">\n                <Tooltip title=\"냠 필터링\" placement=\"left\">\n                    <MenuButton shape=\"circle\" icon={<FilterOutlined />} />\n                </Tooltip>\n            </Popover>\n\n            {/* 새로운 냠 */}\n            <Popover placement=\"bottom\" title={\"새로운 냠 만들기\"} content={createNyamContent} trigger=\"click\">\n                <Tooltip title=\"새로운 냠\" placement=\"right\">\n                    <MenuButton shape=\"circle\" icon={<PlusOutlined />} style={{marginLeft:\"8px\"}} onClick={ () => { setIsPickmode(true); }} />\n                </Tooltip>\n            </Popover>\n        </ToolsWrap>\n    );\n}\n\nfunction filterContent(onChange, checked) {\n    return (\n        <div className=\"filterContent\" styld={{display:\"flex\", flexDirection:\"column\"}}>\n        {\n            NYAM_TYPES_KEY.map( (key) => (\n                <div><Checkbox onChange={onChange} checked={checked[key]} nyamType={key} key={key}>{NYAM_TYPES[key]}</Checkbox></div>\n            ))\n        }\n        </div>\n    )\n}\n\nconst createNyamContent = (\n    <div>\n        <p style={{margin:\"0\"}}><strong>지도에서 새로운 남의 위치를 찍어주세요</strong></p>\n        {/* <p style={{margin:\"0\"}}>버튼을 다시누르면 '새로운 냠 만들기'가 취소됩니다</p> */}\n    </div>\n);\n    \n// style ========================================================\nconst ToolsWrap = styled.div`\n    display : flex;\n    justify-contents : center;\n    align-items : center;\n\n    padding : 10px 0px;\n\n    background-color : #333333;\n    color : #FFFFFF;\n    `;\n\nconst MenuButton = styled(Button)`\n    border : 0;\n    `;\n\n// function =====================================================\nfunction initChecked(arr) {\n    let obj = {};\n    arr.forEach( el => {\n        obj[el] = true;\n    });\n\n    return obj;\n}","// imported Modules =============================================\nimport { React } from 'react';\nimport styled from 'styled-components';\n\n// imported components ==========================================\nimport Tools from \"./followers/Tools\";\n\n// Main Component ===============================================\nexport default function Header ({ setFilters, isPickmode, setIsPickmode }) {\n    return (\n        <HeaderWrap className=\"Header\">\n            <Logo>냠냠랩(TEST)</Logo>\n            <Tools setFilters={setFilters} isPickmode={isPickmode} setIsPickmode={setIsPickmode} />\n        </HeaderWrap>\n    );\n}\n\n// style ========================================================\nconst HeaderWrap = styled.div`\n    display : flex;\n    align-items : center;\n\n    padding : 10px 0px;\n\n    background-color : #333333;\n    color : #FFFFFF;\n    `;\n\nconst Logo = styled.h1`\n    margin : 0;\n    padding : 10px 20px;\n    color : #FFFFFF;\n    font-family: 'Poor Story', cursive;\n    `;\n\n// function =====================================================\n// *","// imported Modules =============================================\nimport { React } from \"react\";\n\nimport styled from \"styled-components\";\nimport { Spin } from 'antd';\nimport { LoadingOutlined } from '@ant-design/icons';\nimport 'antd/dist/antd.css';\n\n// Main Component ===============================================\nexport default function Loading ({ isLoading }) {\n    \n    if ( isLoading ){\n        return (\n            <LoadingWrap className=\"Loading\">\n                <Backdrop></Backdrop>\n                <Spin spinning={isLoading} size=\"large\" indicator={<LoadingOutlined style={{ fontSize: 64 }} spin />} />\n            </LoadingWrap>\n        );\n    } else {\n        return <div className=\"Loading\"></div>;\n    }\n   \n}\n\n// style ========================================================\nconst LoadingWrap = styled.div`\n    position : fixed;\n    top : 0; \n    left : 0;\n\n    display : flex;\n    justify-content : center;\n    align-items : center;\n\n    width : 100%; \n    height : 100%;\n    `;\n\nconst Backdrop = styled.div`\n    position : fixed;\n    top : 0; \n    left : 0;\n\n    width : 100%;\n    height : 100%;\n\n    background-color : rgba(0,0,0, 0.75);\n    `;","// imported Modules =============================================\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport axios from \"axios\";\nimport moment from \"moment\";\n\nimport { Modal, Input, TimePicker, Button, Tooltip, Divider, Select } from 'antd';\nimport { PlusOutlined, MinusOutlined } from \"@ant-design/icons\"\n\n// imported components\nimport Loading from \"../../atoms/Loading\";\n\n/* ******************************************* */\n// [경고] 임시적인 사용자설정 보관소 - 나중에 다른 방법으로 대체필요\nimport DataStorage from \"../../../DataStorage\";\nconst NYAM_TYPES = DataStorage(\"NYAM_TYPES\");\nconst NYAM_TYPES_KEY = DataStorage(\"NYAM_TYPES_KEY\");\nconst NYAM_LIST_SOURCE = DataStorage(\"NYAM_LIST_SOURCE\");\n// [경고] 임시적인 사용자설정 보관소 - 나중에 다른 방법으로 대체필요\n/* ******************************************* */\n\n// Main Component ===============================================\n\nconst SUMMARY_INIT_VALUE = { name: null, description: null, open: null, close: null, type: null, lat: null, lng: null, comment: null };\nconst MENUITEM_INIT_VALUE = [{ name: null, price: null }];\n\nexport default function NyamEditor({ title, pickCoord, taskType, defaultNyamValue, refreshMaps, nyamEditorModalVisible, setNyamEditorModalVisible }) {\n    const [isLoading, setIsLoading] = useState(false);\n\n    const [summary, setSummary] = useState(SUMMARY_INIT_VALUE);\n    const [menuItems, setMenuItems] = useState(MENUITEM_INIT_VALUE);\n\n    useEffect(() => {\n        if (taskType === \"edit\" && defaultNyamValue != null) {\n            // apply default value to \"summary\"\n            let tempSummary = {};\n            Object.assign(tempSummary, defaultNyamValue);\n            delete tempSummary.menu;\n            setSummary(tempSummary);\n\n            // apply default value to \"menuItems\"\n            let tempMenuItems = [];\n            tempMenuItems = (JSON.parse(defaultNyamValue.menu)).menu;\n            setMenuItems(tempMenuItems);\n        }\n    }, [defaultNyamValue, taskType]);\n\n    // about onChange\n    function summaryOnChange(target, value) {\n        setSummary({ ...summary, [target]: value });\n    }\n    function menuItemOnChange(index, type, value) {\n        setMenuItems([...menuItems.slice(0, index), { ...menuItems[index], [type]: value }, ...menuItems.slice(index + 1)]);\n    }\n\n    // add/remove menu item\n    function addNewMenuItem(index) { setMenuItems([...menuItems.slice(0, index), { name: '', price: '' }, ...menuItems.slice(index)]) }\n    function removeMenuItem(index) { setMenuItems([...menuItems.slice(0, index), ...menuItems.slice(index + 1)]); }\n\n    // about footer buttons.\n    function clearAll(e) {\n        setSummary(SUMMARY_INIT_VALUE);\n        setMenuItems(MENUITEM_INIT_VALUE);\n    }\n\n    async function onSubmit(e) {\n        setIsLoading(true);\n\n        const data = {};\n        Object.assign(data, summary);\n\n        // 요청 데이터 준비\n        if (taskType === \"create\") {\n            Object.assign(data, { \"comment\": JSON.stringify({ \"comment\": [] }) });\n            data.lat = pickCoord.y;\n            data.lng = pickCoord.x;\n        } else if (taskType === \"edit\") {\n\n        }\n        Object.assign(data, { \"menu\": JSON.stringify({ \"menu\": menuItems }) });\n\n        // 검증\n        const keys = Object.keys(data);\n        for (let i = 0; i < keys.length; i++) {\n            if (data[keys[i]] === null || data[keys[i]] === \"\") {\n                console.log('통과하지못했음');\n                setIsLoading(false);\n                return;\n            }\n        }\n\n        // 요청\n        const strData = JSON.stringify(data);\n        const url = `${NYAM_LIST_SOURCE}?taskTarget=nyam&taskType=${taskType}`;\n        await axios.post(url, strData);\n\n        // 리프레시\n        await refreshMaps();\n        setNyamEditorModalVisible(false);\n        setIsLoading(false);\n    }\n\n    return (\n        <NyamEditorWrap className=\"NyamEditor\">\n            <Modal\n                title={title}\n                visible={nyamEditorModalVisible}\n                onCancel={() => { setNyamEditorModalVisible(false) }}\n                footer={null}\n            >\n                <SummaryWrap>\n                    <Divider>개요</Divider>\n\n                    <StyledInput name=\"name\" placeholder=\"가게 이름\" value={summary.name} onChange={(e) => { summaryOnChange(e.target.name, e.target.value) }} />\n                    <StyledInput name=\"description\" placeholder=\"설명\" value={summary.description} onChange={(e) => { summaryOnChange(e.target.name, e.target.value) }} />\n\n                    <TimePickersWrap>\n                        <TimePicker\n                            name=\"openTime\" format=\"HH:mm\" placeholder=\"문 여는 시간\" value={summary.open ? moment(summary.open, \"HH:mm\") : null}\n                            onChange={(time, timeString) => { summaryOnChange(\"open\", timeString); }} style={{ flexGrow: \"1\", marginRight: SPACE }}\n                            minuteStep={5}\n                        />\n                        <TimePicker\n                            name=\"closeTime\" format=\"HH:mm\" placeholder=\"문 닫는 시간\" value={summary.close ? moment(summary.close, \"HH:mm\") : null}\n                            onChange={(time, timeString) => { summaryOnChange(\"close\", timeString); }} style={{ flexGrow: \"1\" }}\n                            minuteStep={5}\n                        />\n                    </TimePickersWrap>\n\n                    <Select placeholder=\"유형을 골라주세요\" value={summary.type} onChange={(value) => { summaryOnChange(\"type\", value); }}>\n                        {NYAM_TYPES_KEY.map((key, index) => (<Select.Option value={key} key={index}>{NYAM_TYPES[key]}</Select.Option>))}\n                    </Select>\n                </SummaryWrap>\n\n                <MenusWrap>\n                    <Divider>메뉴</Divider>\n\n                    { menuItems.map((item, index) => MenuItem(index, item.name, item.price, addNewMenuItem, removeMenuItem, menuItemOnChange)) }\n                    <StyledButton shape=\"circle\" icon={<PlusOutlined />} style={{}} onClick={(e) => { addNewMenuItem(menuItems.length) }} />\n                    \n                    <Divider />\n                </MenusWrap>\n\n                <ButtonsWrap>\n                    <Button type=\"link\" onClick={clearAll}>모두 지우기</Button>\n                    <Button onClick={onSubmit} style={{ marginLeft: \"auto\" }}>가즈아</Button>\n                </ButtonsWrap>\n\n                <Loading isLoading={isLoading} />\n            </Modal>\n        </NyamEditorWrap>\n    );\n}\n\n// style ========================================================\nconst SPACE = \"4px\";\n\n// -- antd redefined style\nconst StyledInput = styled(Input)`\n    margin-bottom : ${SPACE};\n    `;\n\nconst StyledButton = styled(Button)`\n    margin-right : ${SPACE};\n`;\n\n// -- user defined style\nconst NyamEditorWrap = styled.div``;\n\nconst SummaryWrap = styled.div`\n    display : flex;\n    flex-direction : column;\n    align-items : stretch;\n    `;\n\nconst TimePickersWrap = styled.div`\n    display : flex;\n    margin-bottom : ${SPACE}\n    `;\n\nconst MenusWrap = styled.div``;\n\nconst MenuItemWrap = styled.div`\n    display : flex;\n    `;\n\nconst ButtonsWrap = styled.div`\n    display : flex;\n    `;\n\n// function =====================================================\n// *\n\n// 유사 컴포넌트 ================================================\nfunction MenuItem(index, name, price, addNewMenuItem, removeMenuItem, menuItemOnChange) {\n    return (\n        <MenuItemWrap key={index}>\n            <StyledButton shape=\"circle\" icon={<PlusOutlined />} style={{}} onClick={(e) => { addNewMenuItem(index); }} />\n            <StyledButton shape=\"circle\" icon={<MinusOutlined />} onClick={(e) => { removeMenuItem(index) }} />\n\n            <StyledInput placeholder=\"메뉴 이름\" value={name} style={{ marginRight: SPACE }} onChange={(e) => { menuItemOnChange(index, \"name\", e.target.value); }} />\n            <StyledInput placeholder=\"메뉴 가격\" value={price} onChange={(e) => { menuItemOnChange(index, \"price\", e.target.value); }} />\n        </MenuItemWrap>\n    )\n}\n","// imported Modules =============================================\nimport React, { useState } from 'react';\nimport axios from \"axios\";\n\nimport styled from 'styled-components';\n\n\nimport { List, Button, Tooltip } from \"antd\";\nimport { FormOutlined, DeleteOutlined, QuestionCircleOutlined } from \"@ant-design/icons\"\n\n// imported components ==========================================\nimport NyamEditor from \"./NyamEditor\";\n\n// Main Component ===============================================\nexport default function MapsModalInfo ({ nyamListSource, selectedNyam, refreshMaps, setIsLoading, setMapsModalVisible }) {\n    const [ nyamEditorModalVisible, setNyamEditorModalVisible ] = useState(false);\n\n    const { open, close, description, menu } = selectedNyam;\n    const parsedMenu = JSON.parse(menu).menu;\n\n    return (\n        <MapsModalInfoWrap className=\"MapsModalInfo\">\n            <Tools>\n                <a href={`https://map.naver.com/v5/search/${removeSpace(selectedNyam.name)}`} target=\"_blank\" rel=\"noreferrer\">\n                    <Tooltip title=\"네이버지도\" placement=\"top\">\n                        <Button shape=\"circle\" icon={<QuestionCircleOutlined />} size=\"normal\" style={{marginRight:SPACE}} />\n                    </Tooltip>\n                </a>\n                <Tooltip title=\"수정\" placement=\"top\">\n                    <Button shape=\"circle\" icon={<FormOutlined />} size=\"normal\" onClick={(e)=>{setNyamEditorModalVisible(true);}} style={{marginRight:SPACE}} />\n                </Tooltip>\n                <Tooltip title=\"크큭..없.앤.다.\" placement=\"top\">\n                    <Button shape=\"circle\" icon={<DeleteOutlined />} size=\"normal\" onClick={(e)=>{handleDelete(nyamListSource, selectedNyam, setIsLoading, setMapsModalVisible, refreshMaps);}} />\n                </Tooltip>\n            </Tools>\n\n            <Summary>\n                <div>\n                    <Title>영업시간</Title> \n                    <p>{open}~{close}</p>\n                </div>\n                <p style={{marginLeft:\"8px\"}}>{description}</p>\n            </Summary>\n\n            <MenuWrap>\n                <Title>메뉴</Title>\n                <List\n                    size=\"small\"\n                    header={null}\n                    footer={null}\n                    bordered\n                    dataSource={parsedMenu.map( item => ( <div>{item.name} <b>{item.price}</b></div> ) )}\n                    renderItem={(item, index) => <List.Item key={index}>{item}</List.Item>}\n                    style={{borderRadius:\"8px\"}}\n                />\n            </MenuWrap>\n\n            <NyamEditor \n                title=\"냠 수정하기\" pickCoord={null} taskType=\"edit\" defaultNyamValue={selectedNyam} \n                refreshMaps={refreshMaps} nyamEditorModalVisible={nyamEditorModalVisible} setNyamEditorModalVisible={setNyamEditorModalVisible} \n            />\n\n            \n        </MapsModalInfoWrap>\n    );\n}\n\n// style ========================================================\nconst SPACE = \"4px\";\n\nconst MapsModalInfoWrap = styled.div`\n    display : flex;\n    flex-direction : column;\n\n    flex : 1;\n    margin-right : ${\"8px\"}; \n\n    @media(max-width : 768px){\n        margin-right : 0;\n        margin-bottom : 8px;\n    }\n    `;\nconst Tools = styled.div`\n    display : flex;\n    justify-content : flex-end;\n    margin-bottom : ${SPACE};\n    `;\n\nconst Summary = styled.div`\n    display : flex;\n    `;\n\nconst MenuWrap = styled.div`\n    display : flex;\n    flex-direction : column;\n    `;\n\nconst Title = styled.p`\n    margin : 0;\n    font-weight : bold;\n    `;\n\n// function =====================================================\nasync function handleDelete(nyamListSource, selectedNyam, setIsLoading, setMapsModalVisible, refreshMaps) {\n    setIsLoading(true);\n\n    const url = `${nyamListSource}?taskTarget=nyam&taskType=delete`;\n    const data = JSON.stringify(selectedNyam);\n\n    await axios.post(url, data);\n\n    await refreshMaps();\n    setMapsModalVisible(false);\n    setIsLoading(false);\n}\n\nfunction removeSpace(string) {\n    const str = string.split(' ').join('');\n    return str;\n}","// imported Modules =============================================\nimport React from 'react';\nimport styled from 'styled-components';\n\nimport { Button, Tooltip } from \"antd\";\nimport { DeleteOutlined } from \"@ant-design/icons\"\n\n// Main Component ===============================================\nexport default function Comment ({ index, content, onDelete }) {\n    return (\n        <CommentWrap className=\"Comment\">\n            <Content>{content}</Content>\n            <Tooltip className=\"deleteComment\" title=\"크큭..없.앤.다.\" placement=\"right\">\n                <Button index={index} shape=\"circle\" icon={<DeleteOutlined />} style={{}} onClick={(e)=>{onDelete(index)}} />\n            </Tooltip>\n        </CommentWrap>\n    );\n}\n\n// style ========================================================\nconst SPACE = \"4px\";\n\nconst CommentWrap = styled.div`\n    display : flex;\n    justify-content : flex-end;\n\n    margin-top : ${SPACE};\n    `;\n\nconst Content = styled.p`\n    padding : ${SPACE};\n    border : 1px solid #DCDCDC;\n    border-radius : 8px;\n    margin : 0;\n    max-width : 100%;\n    margin-right : ${SPACE};\n    \n    word-break: break-all;\n    overflow-wrap: break-word;\n    `;\n\n// function =====================================================\n// *","// imported Modules =============================================\nimport React, { useState } from 'react';\nimport axios from \"axios\";\n\nimport styled from 'styled-components';\n\nimport { Button, Tooltip, Input } from \"antd\";\nimport { EditOutlined } from \"@ant-design/icons\"\n\n// imported components ==========================================\nimport Comment from \"../../atoms/Comment\";\n\n// Main Component ===============================================\nexport default function MapsModalComment ({ nyamListSource, selectedNyam, refreshMaps, setIsLoading }) {\n    const [newComment, setNewComment] = useState(null);\n    const commentsData = JSON.parse(selectedNyam.comment).comment;\n\n    async function onCreate(e) {\n        setIsLoading(true);\n\n        // 검증\n        if (newComment==null || newComment===''){ \n            setIsLoading(false);\n            return; \n        }\n\n        // 요청 데이터 준비`\n        const url = `${nyamListSource}?taskTarget=comment&taskType=edit`;\n        const data = JSON.stringify({\n            id : selectedNyam.id,\n            comment : JSON.stringify({ comment : [newComment, ...commentsData ] })\n        });\n        \n        // 요청\n        //console.log(data);\n        await axios.post(url, data);\n\n        // 리프레시\n        await refreshMaps();\n        setNewComment(null);\n        setIsLoading(false);\n    }\n\n    async function onDelete(index) {\n        setIsLoading(true);\n\n        // 요청 데이터 준비\n        const url = `${nyamListSource}?taskTarget=comment&taskType=edit`;\n        const data = JSON.stringify({\n            id : selectedNyam.id,\n            comment : JSON.stringify({ comment : [...commentsData.slice(0,index), ...commentsData.slice(index+1)] })\n        });\n        \n        // 요청\n        //console.log(data);\n        await axios.post(url, data);\n\n        // 리프레시\n        await refreshMaps();\n        setIsLoading(false);\n    }\n\n    return (\n        <MapsModalCommentWrap className=\"MapsModalComment\">\n            <Form>\n                <Input placeholder=\"새로운 의견을 적어주세요\" value={newComment} onChange={(e)=>{setNewComment(e.target.value);}} style={{borderRadius:\"8px\", marginRight:\"4px\"}} />\n                <Tooltip className=\"deleteComment\" title=\"새로운 의견적기\" placement=\"right\">\n                    <Button type=\"primary\" shape=\"circle\" icon={<EditOutlined />} size=\"normal\" onClick={onCreate} />\n                </Tooltip>\n            </Form>\n\n            <Comments>\n            {\n                commentsData.length > 0 \n                ?   commentsData.map( ( item, index ) => (\n                        <Comment key={index} index={index} content={item} onDelete={onDelete} />\n                    ))\n                \n                :   <EmptyNoti><h1>아무것도 없었다</h1></EmptyNoti>\n            }\n            </Comments>\n        </MapsModalCommentWrap>\n    );\n}\n\n// style ========================================================\nconst MapsModalCommentWrap = styled.div`\n    display : flex;\n    flex-direction : column;\n\n    width : 40%;\n\n    margin-left : auto;\n    padding : 16px;\n    border : 1px solid #dbdbdb;\n    border-radius : 8px;\n\n    @media(max-width : 768px){\n        width : 100%;\n    }\n\n    `;\n\nconst Comments = styled.div`\n    display : flex;\n    flex-direction : column;\n    align-content : flex-end;\n    justify-content : flex-start;\n    height : 100%;\n    overflow-y: auto;\n    `;\n\nconst Form = styled.div`\n    display :flex;\n    align-items : center;\n    `;\n\nconst EmptyNoti = styled.div`\n    display : flex;\n    height : 100%;\n    justify-content : center;\n    align-items : center;\n    `;\n// function =====================================================\n// *","// imported Modules =============================================\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\n\nimport { Modal } from 'antd';\n\n// imported components ==========================================\nimport MapsModalInfo from \"../followers/MapsModalInfo\";\nimport MapsModalComment from \"../followers/MapsModalComment\";\nimport Loading from \"../../atoms/Loading\";\n\n// Main Component ===============================================\nexport default function MapsModal ({nyamListSource, selectedNyam, refreshMaps, mapsModalVisible, setMapsModalVisible}) {\n    const [ isLoading, setIsLoading ] = useState(false);\n    return (\n        selectedNyam != null\n            ?\n                <MapsModalWrap className=\"MapsModal\">\n                    <StyledModal\n                        title={selectedNyam.name}\n                        visible={mapsModalVisible}\n                        onCancel={() => { setMapsModalVisible(false) }}\n                        footer={null}\n                    >\n                        <ModalContentsWrap>\n                            <MapsModalInfo nyamListSource={nyamListSource} selectedNyam={selectedNyam} refreshMaps={refreshMaps} setIsLoading={setIsLoading} setMapsModalVisible={setMapsModalVisible} />\n                            <MapsModalComment nyamListSource={nyamListSource} selectedNyam={selectedNyam} refreshMaps={refreshMaps} setIsLoading={setIsLoading} />\n                        </ModalContentsWrap>\n\n                        <Loading isLoading={isLoading} />\n                    </StyledModal>\n                </MapsModalWrap>\n    \n            :   \n                <div></div>\n    );\n}\n\n// style ========================================================\nconst MapsModalWrap = styled.div`\n\n    `;\n\nconst ModalContentsWrap = styled.div`\n    display : flex;\n\n    @media(max-width : 768px){\n        flex-direction : column;\n    }\n`;\nconst StyledModal = styled(Modal)`\n    min-width : 50%;\n`;\n// function =====================================================\n// *","export default function naverMapsinit (mapValues) {\n    // set naver.maps.Map\n    const { center, zoom } = mapValues;\n\n    const mapOptions = {\n        center: new window.naver.maps.LatLng(center.lat, center.lng),\n        zoom: zoom,\n    };\n    const map = new window.naver.maps.Map(\"map\", mapOptions);\n\n    return map;\n}","import axios from \"axios\";\n\nexport default async function naverMapsSetNyams (map, mapValues, setMarkers, setNyams, setMapsModalVisible, setSelectedNyam) {\n    // initialize temp variable for states\n    const tempNyams = initWithNyamtype(mapValues.nyamTypes);\n    const tempMarkers = initWithNyamtype(mapValues.nyamTypes);\n\n    // read nyamList\n    const nyamList = await readNyamList(mapValues.nyamListSource);\n\n    // set markers\n        // organization item\n    const org = nyamList.shift(); \n    const org_marker = new window.naver.maps.Marker({\n        position: new window.naver.maps.LatLng(org.lat, org.lng),\n        map: map,\n        icon: {\n          url : `img/icons/${org.type}.png`,\n          size: new window.naver.maps.Size(48, 48),\n          origin: new window.naver.maps.Point(0, 0),\n        }\n    });\n\n        // nyam items\n    let cnt = 0;\n    nyamList.forEach( item => { \n        const marker = new window.naver.maps.Marker({\n            position : new window.naver.maps.LatLng(item.lat, item.lng),\n            map : map,\n            icon : {\n                content: [\n                    '<div>',\n                        '<div style=\"background-color:rgba(255,255,255,0.8); padding:5px; border-radius:16px; border:1px solid #d9d9d9;\">',\n                            `<span style=\"white-space:nowrap;\">${item.name}</span>`,\n                        '</div>',\n                        `<img src=\"img/icons/svg/${item.type}.svg\">`,\n                    '</div>'\n                ].join(''),\n                size : new window.naver.maps.Size(1,500),\n                scaledSize: new window.naver.maps.Size(395, 79),\n\n                anchor: new window.naver.maps.Point(16, 48),\n                \n            }\n        });\n\n        marker.addListener(\"click\", (e) => {\n            const targetid = e.overlay[\"_nmarker_id\"];\n            const types = mapValues.nyamTypes;\n\n            for( let i = 0; i<types.length; i++){\n                const type = types[i];\n                let chk = false;\n                for( let j=0; j<tempMarkers[type].length; j++ ){\n                    if ( targetid === tempMarkers[type][j][\"_nmarker_id\"] ){\n                        setSelectedNyam(tempNyams[type][j]);\n                        setMapsModalVisible(true);\n                        chk = true;\n                        break;\n                    }\n                }\n                if (chk) { break; }\n            }\n        });\n\n        tempNyams[item.type].push(item);\n        tempMarkers[item.type].push(marker);\n\n        cnt++;\n    });\n    \n    org_marker.setZIndex(cnt); // 회사 마커가 가장 위로 올라오도록\n\n    setNyams(tempNyams);\n    setMarkers(tempMarkers);\n}\n\nasync function readNyamList (src) {\n        const { data } = await axios.get(src);\n        //console.log(\"readNyams\", data);\n\n        return data;\n}\n\nfunction initWithNyamtype (types) {\n    let obj = {};\n    types.forEach( category => {\n        obj[category] = [];\n    });\n\n    return obj;\n}","// imported Modules =============================================\nimport { React, useState, useEffect } from \"react\";\nimport ScriptTag from \"react-script-tag\";\nimport styled from \"styled-components\";\n\n// [경고] 임시적인 사용자설정 보관소 - 나중에 다른 방법으로 대체필요\nimport DataStorage from \"../../DataStorage\"; // [경고] 임시적인 사용자설정 보관소 - 나중에 다른 방법으로 대체필요\n// [경고] 임시적인 사용자설정 보관소 - 나중에 다른 방법으로 대체필요\n\n// imported components ==========================================\nimport MapsModal from \"./leaders/MapsModal\";\nimport NyamEditor from \"./followers/NyamEditor\";\nimport Loading from \"../atoms/Loading\";\n\n// imported supporters\nimport naverMapsinit from \"../supporters/naverMapsInit\";\nimport naverMapsSetNyams from \"../supporters/naverMapsSetNyams\";\n\n// Main Component ===============================================\nlet map = null;\n\nconst mapValues = {\n    nyamListSource : DataStorage(\"NYAM_LIST_SOURCE\"),\n    nyamTypes : DataStorage(\"NYAM_TYPES_KEY\"),\n    mapSource : \"https://openapi.map.naver.com/openapi/v3/maps.js?ncpClientId=ont9t74d67\",\n    center : {\n        lat : 37.552472, \n        lng : 127.076665,\n    },\n    zoom : 16,\n};\n\nexport default function Maps ({ filters, isPickmode, setIsPickmode }) {\n    const [nyams, setNyams] = useState(null);\n    const [markers, setMarkers] = useState(null);\n\n    const [isLoading, setIsLoading] = useState(false);\n    const [selectedNyam, setSelectedNyam] = useState(null);\n    const [pickCoord, setPickCoord] = useState(null); // 새로 추가할 냠의 좌표값. { x : 123, y : 123 }\n\n    const [mapsModalVisible, setMapsModalVisible] = useState(false);\n    const [nyamEditorModalVisible, setNyamEditorModalVisible] = useState(false);\n\n    useEffect( () => {\n        if ( markers !== null ) {\n            setMarkersVisible(filters, setIsLoading, markers);\n        }\n    }, [filters, markers]);\n\n    useEffect( () => {\n        if(isPickmode === true){\n            map.setCursor(\"Crosshair\");\n            const listener = window.naver.maps.Event.addListener(map, 'click', function(e) {\n                if (isPickmode===true) {\n                    const { x, y } = e.coord;\n        \n                    setPickCoord({x, y});\n                    setIsPickmode(false);\n                    setNyamEditorModalVisible(true);\n                    window.naver.maps.Event.removeListener(listener);\n                }\n            });   \n        } else if (isPickmode === false) {\n            map.setCursor(\"Move\");\n        }\n    }, [isPickmode, setIsPickmode]);\n\n    useEffect( () => {\n        // 모달이 켜있었다면 모달내용 바꿔주기\n        if ( selectedNyam != null ){\n            const { type, id } = selectedNyam;\n            const index = nyams[type].findIndex( nyam => nyam.id === id )\n            setSelectedNyam( nyams[type][index] );\n        }\n    }, [nyams, selectedNyam]);\n\n    async function refreshMaps() {\n        // 기존의 마커 모두 삭제하기\n        for( let arr of Object.values(markers) ){\n            arr.forEach( marker => {\n                marker.setMap(null);\n            });\n        }\n\n        // 다시 만들기\n        await naverMapsSetNyams(map, mapValues, setMarkers, setNyams, setMapsModalVisible, setSelectedNyam);\n\n        // 이후 useEffect에서 selectedNyam 내용 갱신.\n    }\n\n    return (\n        <MapsWrap className=\"Maps\">\n            <ScriptTag \n                type=\"text/javascript\" src={mapValues.mapSource}\n                onLoad={ async () => { \n                    setIsLoading(true);\n                    map = naverMapsinit(mapValues);\n                    await naverMapsSetNyams(map, mapValues, setMarkers, setNyams, setMapsModalVisible, setSelectedNyam);\n                    setIsLoading(false);\n                }} \n            />\n\n            <Map id=\"map\"></Map>\n            <MapsModal nyamListSource={mapValues.nyamListSource} selectedNyam={selectedNyam} refreshMaps={refreshMaps} mapsModalVisible={mapsModalVisible} setMapsModalVisible={setMapsModalVisible} />\n            <NyamEditor \n                title={\"새로운 냠 만들기\"} pickCoord={pickCoord} taskType=\"create\" defaultNyamValue={null} \n                refreshMaps={refreshMaps} nyamEditorModalVisible={nyamEditorModalVisible} setNyamEditorModalVisible={setNyamEditorModalVisible}  \n            />\n\n            <Loading isLoading={isLoading} />\n        </MapsWrap>\n    );\n}\n\n// style ========================================================\nconst MapsWrap = styled.div`\n    display : flex;\n    flex : 1;\n    `;\n\nconst Map = styled.div`\n    width: 100%;\n    height : 100%;\n    `;\n\n// function =====================================================\nconst setMarkersVisible = (filters, setIsLoading, markers) => {\n    setIsLoading(true);\n\n    const types = mapValues.nyamTypes; // 정의되어있는 type배열 불러오기\n\n    types.forEach( type => {\n        const target = markers[type]; // markers의 한 type을 대상으로 정함\n        if (target.length === 0) { return; } // 대상이 비어있으면 바로 함수종료\n\n        const dest = filters[type]; // 업데이트 하려고 하는 값\n        if ( target[0].getVisible() !== dest ){ // target안의 첫번째 마커의 visible속성과, 업데이트 하려고 하는 값이 다르면\n            target.forEach( marker => { marker.setVisible(dest); }); // 업데이트!\n            return;\n        }\n    });\n\n    setIsLoading(false);\n}","// imported Modules =============================================\nimport { React } from 'react';\nimport styled from 'styled-components';\n\n// imported components ==========================================\n// *\n\n// Main Component ===============================================\nexport default function Footer () {\n    return (\n        <FooterWrap className=\"Footer\">\n            <Group>\n                <Item>Wonjin Yi</Item>\n                <Item><strong>Contact </strong>studioplug17@gmail.com</Item>\n            </Group>\n            <Group style={{marginLeft : \"auto\",}}>\n                <Item><strong>냠냠램 TEST </strong>조직내부의 폐쇄적인 냠냠거리 공유 서비스</Item>\n            </Group>\n        </FooterWrap>\n    );\n}\n\n// style ========================================================\nconst FooterWrap = styled.div`\n    display : flex;\n \n    width : 100%;\n    padding : 20px 30px;\n\n    background-color : #333333;\n    color : #a1a1a1;\n    `; \n\nconst Group = styled.div`\n\n    `;\n\nconst Item = styled.p`\n    margin : 0;\n    `;\n\n// function =====================================================\n// *","// imported Modules =============================================\nimport { React, useState } from 'react';\nimport styled from \"styled-components\";\n\n// imported components ==========================================\nimport Header from \"./components/Header/Header\";\nimport Maps from \"./components/Maps/Maps\";\nimport Footer from \"./components/Footer/Footer\";\n\n// Main Component ===============================================\nexport default function App() {\n  const [filters, setFilters] = useState({});\n  const [isPickmode, setIsPickmode] = useState(null); // 현재 '새로운 냠'버튼을 눌러 새로운 위치를 찍는 상태인지를 표현. true / false\n\n  return (\n    <AppWrap className=\"App\" style={{ cursor : (isPickmode ? 'Crosshair' : 'auto') }}>\n      <Header setFilters={setFilters} setIsPickmode={setIsPickmode} />\n      <Maps filters={filters} isPickmode={isPickmode} setIsPickmode={setIsPickmode} />\n      <Footer />\n    </AppWrap>\n  );\n}\n\n// style ========================================================\nconst AppWrap = styled.div`\n  display : flex;\n  flex-direction : column;\n  height : 100%;\n`;\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    // <React.StrictMode>\n    //   <App />\n    // </React.StrictMode>,\n    \n    <App />,\n    document.getElementById('root')\n);"],"sourceRoot":""}