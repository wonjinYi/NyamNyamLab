{"version":3,"sources":["components/Header/followers/UpdateNoteRaw.md","components/Header/followers/UpdateNote.js","DataStorage.js","components/Header/followers/Tools.js","components/Header/Header.js","components/atoms/Loading.js","components/Maps/followers/NyamEditor.js","components/atoms/ContentsTable.js","components/Maps/followers/MapsModalInfo.js","components/atoms/Comment.js","components/Maps/followers/MapsModalComment.js","components/Maps/leaders/MapsModal.js","components/supporters/naverMapsInit.js","components/supporters/naverMapsSetNyams.js","components/Maps/Maps.js","components/Footer/Footer.js","App.js","index.js"],"names":["UpdateNote","updateNoteModalVisible","setUpdateNoteModalVisible","useState","markdown","setMarkdown","useEffect","a","fetch","mdSource","then","res","text","str","init","UpdateNoteWrap","className","title","visible","onCancel","footer","style","minWidth","children","styled","div","DataStorage","key","NYAM_TYPES","korea","china","japan","fastfood","cvs","cafe","NYAM_TYPES_KEY","NYAM_LIST_SOURCE","Tools","setFilters","setIsPickmode","setNyamEditorTaskType","arr","obj","forEach","el","initChecked","checked","setChecked","ToolsWrap","placement","content","filterContent","e","target","nyamType","trigger","MenuButton","shape","icon","FilterOutlined","createNyamContent","PlusOutlined","marginLeft","onClick","BookOutlined","onChange","styld","display","flexDirection","map","type","index","margin","Button","Header","HeaderWrap","Logo","h1","Loading","isLoading","LoadingWrap","Backdrop","spinning","size","indicator","LoadingOutlined","fontSize","spin","SUMMARY_INIT_VALUE","name","description","open","close","lat","lng","comment","MENUITEM_INIT_VALUE","price","NyamEditor","pickCoord","taskType","defaultNyamValue","refreshMaps","setMapsModalVisible","nyamEditorModalVisible","setNyamEditorModalVisible","setIsLoading","resetLock","setResetLock","summary","setSummary","menuItems","setMenuItems","summaryOnChange","value","menuItemOnChange","slice","addNewMenuItem","removeMenuItem","data","Object","assign","JSON","stringify","keys","i","length","message","warning","strData","url","axios","post","success","error","tempSummary","menu","tempMenuItems","parse","y","x","NyamEditorWrap","SummaryWrap","marginBottom","SPACE","marginRight","StyledInput","placeholder","TimePickersWrap","format","moment","time","timeString","flexGrow","minuteStep","Option","MenusWrap","item","MenuItemWrap","StyledButton","MinusOutlined","MenuItem","ButtonsWrap","Input","ContentsTable","desc","dataOrder","ContentsTableWrap","Table","Row","borderWidth","Th","rowItem","colItem","Td","CELL_PADDING","BORDER_COLOR","table","tr","th","td","MapsModalInfo","nyamListSource","selectedNyam","parsedMenu","MapsModalInfoWrap","href","removeSpace","rel","QuestionCircleOutlined","FormOutlined","DeleteOutlined","handleDelete","Summary","Title","p","string","split","join","Comment","onDelete","CommentWrap","Content","MapsModalComment","newComment","setNewComment","commentsData","id","useCallback","MapsModalCommentWrap","Form","borderRadius","EditOutlined","Comments","MapsModal","mapsModalVisible","MapsModalWrap","StyledModal","ModalContentsWrap","Modal","naverMapsinit","mapValues","center","zoom","mapOptions","window","naver","maps","LatLng","Map","naverMapsSetNyams","setMarkers","setNyams","setSelectedNyam","tempNyams","initWithNyamtype","nyamTypes","tempMarkers","readNyamList","nyamList","org","shift","org_marker","Marker","position","Size","origin","Point","cnt","marker","scaledSize","anchor","addListener","targetid","overlay","types","chk","j","push","setZIndex","src","get","category","mapSource","Maps","filters","isPickmode","nyamEditorTaskType","nyams","markers","setPickCoord","values","setMap","setMarkersVisible","setCursor","listener","Event","coord","removeListener","findIndex","nyam","MapsWrap","onLoad","dest","getVisible","setVisible","Footer","FooterWrap","Group","Item","App","notification","duration","AppWrap","cursor","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4fab3bcc.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/UpdateNoteRaw.16000995.md\";","// imported Modules =============================================\nimport React, { useEffect, useState } from 'react';\nimport { Modal } from \"antd\";\nimport styled from 'styled-components';\nimport ReactMarkdown from 'react-markdown';\n\n// imported components ==========================================\n// *\n\n// Main Component ===============================================\nimport mdSource from \"./UpdateNoteRaw.md\";\n\nexport default function UpdateNote({ updateNoteModalVisible, setUpdateNoteModalVisible}) {\n    const [markdown, setMarkdown] = useState('');\n\n    useEffect( () => {\n        async function init() {\n            const str = await fetch(mdSource)\n            .then( res => res.text() );\n\n            setMarkdown(str);\n        }\n        init();\n    }, [markdown]);\n\n    return (\n        <UpdateNoteWrap className=\"UpdateNote\">\n            <Modal\n                title={\"업데이트 노트\"}\n                visible={updateNoteModalVisible}\n                onCancel={() => { setUpdateNoteModalVisible(false) }}\n                footer={null}\n                style={{minWidth:\"50%\"}}\n            >\n                <ReactMarkdown children={markdown} />\n            </Modal>\n        </UpdateNoteWrap>\n    );\n}\n\n// style ========================================================\nconst UpdateNoteWrap = styled.div`\n\n    `;\n\n// function =====================================================\n// *","// [경고] 임시적인 사용자설정 보관소 - 나중에 다른 방법으로 대체필요\nexport default function DataStorage (key) {\n    const data = {\n        NYAM_TYPES : {\n            korea : \"한식\",\n            china : \"중식\",\n            japan : \"일식\",\n            fastfood : \"패스트푸드\",\n            cvs : \"편의점\",\n            cafe : \"카페\",\n        }, \n        NYAM_TYPES_KEY : [\"korea\", \"china\", \"japan\", \"fastfood\", \"cvs\", \"cafe\"],\n        NYAM_LIST_SOURCE : \"https://script.google.com/macros/s/AKfycbyuACrtmBSgcaehSnfbDVhSAMeScTP455Z44h4jtjxRGxJ5UNeVdOEh/exec\",\n    }\n\n    return data[key];\n}","// imported Modules =============================================\nimport { React, useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Checkbox, Popover, Button, Tooltip } from \"antd\";\nimport { FilterOutlined, PlusOutlined, BookOutlined } from \"@ant-design/icons\"\nimport 'antd/dist/antd.css';\n\n// imported Components ==========================================\nimport UpdateNote from \"./UpdateNote\";\n\n/* ******************************************* */\n// [경고] 임시적인 사용자설정 보관소 - 나중에 다른 방법으로 대체필요\nimport DataStorage from \"../../../DataStorage\"; \nconst NYAM_TYPES = DataStorage(\"NYAM_TYPES\");\nconst NYAM_TYPES_KEY = DataStorage(\"NYAM_TYPES_KEY\");\n// [경고] 임시적인 사용자설정 보관소 - 나중에 다른 방법으로 대체필요\n/* ******************************************* */\n\n// Main Component ===============================================\nexport default function Tools ({ setFilters, setIsPickmode, setNyamEditorTaskType }) {\n    const [checked, setChecked] = useState( initChecked(NYAM_TYPES_KEY) );\n    const [updateNoteModalVisible, setUpdateNoteModalVisible] = useState(false);\n\n    useEffect ( () => { \n        setFilters(checked); \n    }, [checked, setFilters]);\n\n    function onChange(e) { setChecked({ ...checked, [e.target.nyamType] : e.target.checked }) }\n\n    return (\n        <ToolsWrap className=\"Tools\">\n            <div className=\"LeftDiv\">\n                {/* 냠 필터링 */}\n                <Popover placement=\"bottom\" title={\"냠 필터링\"} content={filterContent(onChange, checked)} trigger=\"click\">\n                    <Tooltip title=\"냠 필터링\" placement=\"left\">\n                        <MenuButton shape=\"circle\" icon={<FilterOutlined />} />\n                    </Tooltip>\n                </Popover>\n\n                {/* 새로운 냠 */}\n                <Popover placement=\"bottom\" title={\"새로운 냠 만들기\"} content={createNyamContent} trigger=\"click\">\n                    <Tooltip title=\"새로운 냠\" placement=\"right\">\n                        <MenuButton shape=\"circle\" icon={<PlusOutlined />} style={{marginLeft:\"8px\"}} \n                            onClick={ () => { \n                                setNyamEditorTaskType(\"create\"); \n                                setIsPickmode(true); \n                            }} \n                        />\n                    </Tooltip>\n                </Popover>\n            </div>\n\n            <div className=\"RightDiv\" style={{marginLeft:\"auto\"}} >\n                <Tooltip title=\"업데이트 노트\" placement=\"right\">\n                    <MenuButton shape=\"circle\" icon={<BookOutlined />}  onClick={ () => { setUpdateNoteModalVisible(true); }} />\n                    <UpdateNote updateNoteModalVisible={updateNoteModalVisible} setUpdateNoteModalVisible={setUpdateNoteModalVisible} />\n                </Tooltip>\n            </div>\n        </ToolsWrap>\n    );\n}\n\nfunction filterContent(onChange, checked) {\n    return (\n        <div className=\"filterContent\" styld={{display:\"flex\", flexDirection:\"column\"}}>\n        {\n            NYAM_TYPES_KEY.map( (type, index) => (\n                <div key={index}><Checkbox onChange={onChange} checked={checked[type]} nyamType={type}>{NYAM_TYPES[type]}</Checkbox></div>\n            ))\n        }\n        </div>\n    )\n}\n\nconst createNyamContent = (\n    <div>\n        <p style={{margin:\"0\"}}><strong>지도에서 새로운 남의 위치를 찍어주세요</strong></p>\n        {/* <p style={{margin:\"0\"}}>버튼을 다시누르면 '새로운 냠 만들기'가 취소됩니다</p> */}\n    </div>\n);\n    \n// style ========================================================\nconst ToolsWrap = styled.div`\n    display : flex;\n    flex : 1;\n\n    justify-contents : center;\n    align-items : center;\n\n    padding : 10px 10px;\n\n    background-color : #333333;\n    color : #FFFFFF;\n    `;\n\nconst MenuButton = styled(Button)`\n    border : 0;\n    `;\n\n// function =====================================================\nfunction initChecked(arr) {\n    let obj = {};\n    arr.forEach( el => {\n        obj[el] = true;\n    });\n\n    return obj;\n}","// imported Modules =============================================\nimport { React } from 'react';\nimport styled from 'styled-components';\n\n// imported components ==========================================\nimport Tools from \"./followers/Tools\";\n\n// Main Component ===============================================\nexport default function Header ({ setFilters, setIsPickmode, setNyamEditorTaskType }) {\n    return (\n        <HeaderWrap className=\"Header\">\n            <Logo>냠냠랩(TEST)</Logo>\n            <Tools setFilters={setFilters} setIsPickmode={setIsPickmode} setNyamEditorTaskType={setNyamEditorTaskType} />\n        </HeaderWrap>\n    );\n}\n\n// style ========================================================\nconst HeaderWrap = styled.div`\n    display : flex;\n    align-items : center;\n\n    padding : 10px 0px;\n\n    background-color : #333333;\n    color : #FFFFFF;\n    `;\n\nconst Logo = styled.h1`\n    margin : 0;\n    padding : 10px 20px;\n    color : #FFFFFF;\n    font-family: 'Poor Story', cursive;\n    `;\n\n// function =====================================================\n// *","// imported Modules =============================================\nimport { React } from \"react\";\n\nimport styled from \"styled-components\";\nimport { Spin } from 'antd';\nimport { LoadingOutlined } from '@ant-design/icons';\nimport 'antd/dist/antd.css';\n\n// Main Component ===============================================\nexport default function Loading ({ isLoading }) {\n    \n    if ( isLoading ){\n        return (\n            <LoadingWrap className=\"Loading\">\n                <Backdrop></Backdrop>\n                <Spin spinning={isLoading} size=\"large\" indicator={<LoadingOutlined style={{ fontSize: 64 }} spin />} />\n            </LoadingWrap>\n        );\n    } else {\n        return <div className=\"Loading\"></div>;\n    }\n   \n}\n\n// style ========================================================\nconst LoadingWrap = styled.div`\n    position : fixed;\n    top : 0; \n    left : 0;\n\n    display : flex;\n    justify-content : center;\n    align-items : center;\n\n    width : 100%; \n    height : 100%;\n    `;\n\nconst Backdrop = styled.div`\n    position : fixed;\n    top : 0; \n    left : 0;\n\n    width : 100%;\n    height : 100%;\n\n    background-color : rgba(0,0,0, 0.75);\n    `;","// imported Modules =============================================\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport axios from \"axios\";\nimport moment from \"moment\";\n\nimport { Modal, Input, TimePicker, Button, Divider, Select, message } from 'antd';\nimport { PlusOutlined, MinusOutlined } from \"@ant-design/icons\"\n\n// imported components\nimport Loading from \"../../atoms/Loading\";\n\n/* ******************************************* */\n// [경고] 임시적인 사용자설정 보관소 - 나중에 다른 방법으로 대체필요\nimport DataStorage from \"../../../DataStorage\";\nconst NYAM_TYPES = DataStorage(\"NYAM_TYPES\");\nconst NYAM_TYPES_KEY = DataStorage(\"NYAM_TYPES_KEY\");\nconst NYAM_LIST_SOURCE = DataStorage(\"NYAM_LIST_SOURCE\");\n// [경고] 임시적인 사용자설정 보관소 - 나중에 다른 방법으로 대체필요\n/* ******************************************* */\n\n// Main Component ===============================================\n\nconst SUMMARY_INIT_VALUE = { name: null, description: null, open: null, close: null, type: null, lat: null, lng: null, comment: null };\nconst MENUITEM_INIT_VALUE = [{ name: null, price: null }];\n\nexport default function NyamEditor({ pickCoord, taskType, defaultNyamValue, refreshMaps, setIsPickmode, setMapsModalVisible, nyamEditorModalVisible, setNyamEditorModalVisible }) {\n    const [isLoading, setIsLoading] = useState(false);\n    const [resetLock, setResetLock] = useState(false); // 냠에디터를 닫았다 열었을 때, selectedNyam의 내용으로 초기화시킬지. ( false : 초기화함, true : 초기화 안함 )\n\n    const [summary, setSummary] = useState(SUMMARY_INIT_VALUE);\n    const [menuItems, setMenuItems] = useState(MENUITEM_INIT_VALUE);\n\n    const title = ( taskType===\"create\" ? \"새로운 냠 만들기\" : \"냠 수정하기\" );\n\n    useEffect(() => {\n        if (resetLock===false && taskType === \"edit\" && defaultNyamValue != null) {\n            // '냠 수정하기'일 때, 기존 내용들 summary, menuItems상태에 반영해주기.\n            // apply default value to \"summary\"\n            let tempSummary = {};\n            Object.assign(tempSummary, defaultNyamValue);\n            delete tempSummary.menu;\n            setSummary(tempSummary);\n\n            // apply default value to \"menuItems\"\n            let tempMenuItems = [];\n            tempMenuItems = (JSON.parse(defaultNyamValue.menu)).menu;\n            setMenuItems(tempMenuItems);\n        } \n    }, [resetLock, defaultNyamValue, taskType]);\n\n    useEffect( () => {\n        if (nyamEditorModalVisible===true && resetLock===true) {\n            setSummary({...summary, lat:pickCoord.y, lng:pickCoord.x});\n            setResetLock(null);\n        }\n        \n    }, [pickCoord, nyamEditorModalVisible, resetLock, summary])\n\n    // about onChange\n    function summaryOnChange(target, value) {\n        setSummary({ ...summary, [target]: value });\n    }\n    function menuItemOnChange(index, type, value) {\n        setMenuItems([...menuItems.slice(0, index), { ...menuItems[index], [type]: value }, ...menuItems.slice(index + 1)]);\n    }\n\n    // add/remove menu item\n    function addNewMenuItem(index) { setMenuItems([...menuItems.slice(0, index), { name: '', price: '' }, ...menuItems.slice(index)]) }\n    function removeMenuItem(index) { setMenuItems([...menuItems.slice(0, index), ...menuItems.slice(index + 1)]); }\n\n    // about footer buttons.\n    function clearAll(e) {\n        setSummary(SUMMARY_INIT_VALUE);\n        setMenuItems(MENUITEM_INIT_VALUE);\n    }\n\n    async function onSubmit(e) {\n        setIsLoading(true);\n\n        const data = {};\n        Object.assign(data, summary);\n\n        // 요청 데이터 준비\n        if (taskType === \"create\") {\n            Object.assign(data, { \"comment\": JSON.stringify({ \"comment\": [] }) });\n        } //else if (taskType === \"edit\") { }\n        Object.assign(data, { \"menu\": JSON.stringify({ \"menu\": menuItems }) });\n\n        // 검증\n        const keys = Object.keys(data);\n        for (let i = 0; i < keys.length; i++) {\n            if (data[keys[i]] === null || data[keys[i]] === \"\") {\n                message.warning(\"비어있는 정보를 채워넣어주세요!\");\n                setIsLoading(false);\n                return;\n            }\n        }\n\n        try {\n            // 요청\n            const strData = JSON.stringify(data);\n            const url = `${NYAM_LIST_SOURCE}?taskTarget=nyam&taskType=${taskType}`;\n            await axios.post(url, strData);\n\n            // 리프레시\n            await refreshMaps();\n            setNyamEditorModalVisible(false);\n            setIsLoading(false);\n\n            // 완료메시지\n            if (taskType === \"create\") { message.success(\"새로운 냠을 만들었습니다!\"); }\n            else if (taskType === \"edit\") { message.success(\"냠이 수정되었습니다!\"); }\n        } catch {\n            setIsLoading(false);\n            message.error(\"앗, 뭔가 잘못됐습니다. 다시 시도해주세요\", 2.0);\n        }\n    }\n\n    function onClose(e){\n        setNyamEditorModalVisible(false);\n        setResetLock(false);\n        if(taskType===\"edit\"){\n            setMapsModalVisible(true);\n        }\n    }\n\n    function onCoordEdit(e){\n        setResetLock(true);\n        setNyamEditorModalVisible(false);\n        setIsPickmode(true); \n    }\n\n    return (\n        <NyamEditorWrap className=\"NyamEditor\">\n            <Modal\n                title={title}\n                visible={nyamEditorModalVisible}\n                onCancel={onClose}\n                footer={null}\n            >\n                <SummaryWrap>\n                    <Divider>개요</Divider>\n\n                    <div style={{ marginLeft: \"auto\", marginBottom: SPACE }}>\n                        <span style={{marginRight:\"8px\"}}>{`위도 ${summary.lat} 경도 ${summary.lng}`}</span>\n                        <Button onClick={onCoordEdit} >위치 수정</Button>\n                    </div>\n                    <StyledInput name=\"name\" placeholder=\"가게 이름\" value={summary.name} onChange={(e) => { summaryOnChange(e.target.name, e.target.value) }} />\n                    <StyledInput name=\"description\" placeholder=\"설명\" value={summary.description} onChange={(e) => { summaryOnChange(e.target.name, e.target.value) }} />\n\n                    <TimePickersWrap>\n                        <TimePicker\n                            name=\"openTime\" format=\"HH:mm\" placeholder=\"문 여는 시간\" value={summary.open ? moment(summary.open, \"HH:mm\") : null}\n                            onChange={(time, timeString) => { summaryOnChange(\"open\", timeString); }} style={{ flexGrow: \"1\", marginRight: SPACE }}\n                            minuteStep={5}\n                        />\n                        <TimePicker\n                            name=\"closeTime\" format=\"HH:mm\" placeholder=\"문 닫는 시간\" value={summary.close ? moment(summary.close, \"HH:mm\") : null}\n                            onChange={(time, timeString) => { summaryOnChange(\"close\", timeString); }} style={{ flexGrow: \"1\" }}\n                            minuteStep={5}\n                        />\n                    </TimePickersWrap>\n\n                    <Select placeholder=\"유형을 골라주세요\" value={summary.type} onChange={(value) => { summaryOnChange(\"type\", value); }}>\n                        {NYAM_TYPES_KEY.map((key, index) => (<Select.Option value={key} key={index}>{NYAM_TYPES[key]}</Select.Option>))}\n                    </Select>\n                </SummaryWrap>\n\n                <MenusWrap>\n                    <Divider>메뉴</Divider>\n\n                    {menuItems.map((item, index) => MenuItem(index, item.name, item.price, addNewMenuItem, removeMenuItem, menuItemOnChange))}\n                    <StyledButton shape=\"circle\" icon={<PlusOutlined />} style={{}} onClick={(e) => { addNewMenuItem(menuItems.length) }} />\n\n                    <Divider />\n                </MenusWrap>\n\n                <ButtonsWrap>\n                    <Button type=\"link\" onClick={clearAll}>모두 지우기</Button>\n                    <Button onClick={onSubmit} style={{ marginLeft: \"auto\" }}>가즈아</Button>\n                </ButtonsWrap>\n\n                <Loading isLoading={isLoading} />\n            </Modal>\n        </NyamEditorWrap>\n    );\n}\n\n// style ========================================================\nconst SPACE = \"4px\";\n\n// -- antd redefined style\nconst StyledInput = styled(Input)`\n    margin-bottom : ${SPACE};\n    `;\n\nconst StyledButton = styled(Button)`\n    margin-right : ${SPACE};\n    `;\n\n// -- user defined style\nconst NyamEditorWrap = styled.div``;\n\nconst SummaryWrap = styled.div`\n    display : flex;\n    flex-direction : column;\n    align-items : stretch;\n    `;\n\nconst TimePickersWrap = styled.div`\n    display : flex;\n    margin-bottom : ${SPACE}\n    `;\n\nconst MenusWrap = styled.div``;\n\nconst MenuItemWrap = styled.div`\n    display : flex;\n    `;\n\nconst ButtonsWrap = styled.div`\n    display : flex;\n    `;\n\n// function =====================================================\n// *\n\n// 유사 컴포넌트 ================================================\nfunction MenuItem(index, name, price, addNewMenuItem, removeMenuItem, menuItemOnChange) {\n    return (\n        <MenuItemWrap key={index}>\n            <StyledButton shape=\"circle\" icon={<PlusOutlined />} style={{}} onClick={(e) => { addNewMenuItem(index); }} />\n            <StyledButton shape=\"circle\" icon={<MinusOutlined />} onClick={(e) => { removeMenuItem(index) }} />\n\n            <StyledInput placeholder=\"메뉴 이름\" value={name} style={{ marginRight: SPACE }} onChange={(e) => { menuItemOnChange(index, \"name\", e.target.value); }} />\n            <StyledInput placeholder=\"메뉴 가격\" value={price} onChange={(e) => { menuItemOnChange(index, \"price\", e.target.value); }} />\n        </MenuItemWrap>\n    )\n}\n","// imported Modules =============================================\nimport React from 'react';\nimport styled from 'styled-components';\n\n// imported components ==========================================\n// *\n\n// Main Component ===============================================\nexport default function ContentsTable({ desc, dataOrder, data }) {\n    // desc (문자열 Array) : thead에 표시할 텍스트를 차례로 나열한 문자열 배열\n    // dataOrder (객체 Array) : tbody의 각 row에서 [data]객체의 요소를 표시할 순서를 나열한 문자열 배열 \n    // data (객체 Array) : 원본데이터\n\n    return (\n        <ContentsTableWrap className=\"ContentsTable\">\n            <Table>\n                <tbody>\n                    <Row style={{borderWidth:\"2px\"}}>\n                    {\n                        desc.map( (el, index) => (\n                            <Th key={index}>{ el }</Th>\n                        ))\n                    }\n                    </Row>\n                </tbody>\n                \n                <tbody>\n                {\n                    data.map( (rowItem,index) => (\n                        <Row key={index}>\n                        {\n                            dataOrder.map( (colItem, index) => (\n                                <Td key={index}>{ rowItem[colItem] }</Td>\n                            ))\n                        }\n                        </Row>\n                    ))\n                }\n                </tbody>\n            </Table>\n        </ContentsTableWrap>\n    );\n}\n\n// style ========================================================\n//const SPACE = \"4px\";\nconst CELL_PADDING = \"8px\";\nconst BORDER_COLOR = \"#dbdbdb\";\n\nconst ContentsTableWrap = styled.div`\n    width : 100%;\n    border : 1px solid ${BORDER_COLOR};\n    border-bottom : 12px solid ${BORDER_COLOR};\n    border-radius : 8px;\n    `;\n\nconst Table = styled.table`\n    width : 100%;\n    text-align : center;\n    `;\n\nconst Row = styled.tr`\n    padding : ${CELL_PADDING};\n    border-bottom : 1px solid ${BORDER_COLOR};\n    `;\n\nconst Th = styled.th`\n    padding : ${CELL_PADDING};\n    `;\n\nconst Td = styled.td`\n    padding : ${CELL_PADDING};\n    `;\n// function =====================================================\n// *\n\n                ","// imported Modules =============================================\nimport React, { useState } from 'react';\nimport axios from \"axios\";\n\nimport styled from 'styled-components';\nimport { Button, message, Tooltip } from \"antd\";\nimport { FormOutlined, DeleteOutlined, QuestionCircleOutlined } from \"@ant-design/icons\"\n\n// imported components ==========================================\nimport NyamEditor from \"./NyamEditor\";\nimport ContentsTable from \"../../atoms/ContentsTable\";\n\n// Main Component ===============================================\nexport default function MapsModalInfo({ nyamListSource, selectedNyam, refreshMaps, setIsLoading, setMapsModalVisible, setNyamEditorModalVisible, setNyamEditorTaskType }) {\n    //const [nyamEditorModalVisible, setNyamEditorModalVisible] = useState(false);\n\n    const { open, close, description, menu } = selectedNyam;\n    const parsedMenu = JSON.parse(menu).menu;\n\n    async function handleDelete() {\n        setIsLoading(true);\n\n        const url = `${nyamListSource}?taskTarget=nyam&taskType=delete`;\n        const data = JSON.stringify(selectedNyam);\n\n        await axios.post(url, data);\n\n        await refreshMaps();\n        setMapsModalVisible(false);\n        setIsLoading(false);\n\n        message.success(\"냠이 역사의 뒤안길로 사라졌습니다\");\n    }\n\n    return (\n        <MapsModalInfoWrap className=\"MapsModalInfo\">\n            {/* 우측 상단 도구 */}\n            <Tools>\n                <a href={`https://map.naver.com/v5/search/${removeSpace(selectedNyam.name)}`} target=\"_blank\" rel=\"noreferrer\">\n                    <Tooltip title=\"네이버지도\" placement=\"top\">\n                        <Button shape=\"circle\" icon={<QuestionCircleOutlined />} size=\"normal\" style={{ marginRight: SPACE }} />\n                    </Tooltip>\n                </a>\n                <Tooltip title=\"수정\" placement=\"top\">\n                    {/* <Button shape=\"circle\" icon={<FormOutlined />} size=\"normal\" style={{ marginRight: SPACE }} onClick={(e) => { setNyamEditorModalVisible(true); }} /> */}\n                    <Button shape=\"circle\" icon={<FormOutlined />} size=\"normal\" style={{ marginRight: SPACE }} onClick={(e) => { setNyamEditorTaskType(\"edit\"); setMapsModalVisible(false); setNyamEditorModalVisible(true); }} />\n                    \n                </Tooltip>\n                <Tooltip title=\"삭제\" placement=\"top\">\n                    <Button shape=\"circle\" icon={<DeleteOutlined />} size=\"normal\" onClick={(e) => { handleDelete(); }} />\n                </Tooltip>\n            </Tools>\n\n            {/* 개요 */}\n            <Summary>\n                <div>\n                    <Title>영업시간</Title>\n                    <p>{open}~{close}</p>\n                </div>\n                <p style={{ marginLeft: \"8px\" }}>{description}</p>\n            </Summary>\n\n            {/* 메뉴목록 */}\n            <ContentsTable desc={[\"메뉴\", \"가격\"]} dataOrder={[\"name\", \"price\"]} data={parsedMenu} />\n\n            {/* 냠 수정용 에디터 :: 우측상단도구의 '수정'을 클릭하면 표시 */}\n            {/* <NyamEditor\n                title=\"냠 수정하기\" pickCoord={null} taskType=\"edit\" defaultNyamValue={selectedNyam}\n                refreshMaps={refreshMaps} nyamEditorModalVisible={nyamEditorModalVisible} setNyamEditorModalVisible={setNyamEditorModalVisible}\n            /> */}\n        </MapsModalInfoWrap>\n    );\n}\n\n// style ========================================================\nconst SPACE = \"4px\";\n\nconst MapsModalInfoWrap = styled.div`\n    display : flex;\n    flex-direction : column;\n\n    flex : 1;\n    margin-right : ${\"8px\"}; \n\n    @media(max-width : 768px){\n        margin-right : 0;\n        margin-bottom : 8px;\n    }\n    `;\nconst Tools = styled.div`\n    display : flex;\n    justify-content : flex-end;\n    margin-bottom : ${SPACE};\n    `;\n\nconst Summary = styled.div`\n    display : flex;\n    `;\n\nconst Title = styled.p`\n    margin : 0;\n    font-weight : bold;\n    `;\n\n// function =====================================================\nfunction removeSpace(string) {\n    const str = string.split(' ').join('');\n    return str;\n}","// imported Modules =============================================\nimport React from 'react';\nimport styled from 'styled-components';\n\nimport { Button, Tooltip } from \"antd\";\nimport { DeleteOutlined } from \"@ant-design/icons\"\n\n// Main Component ===============================================\nexport default function Comment ({ index, content, onDelete }) {\n    return (\n        <CommentWrap className=\"Comment\">\n            <Content>{content}</Content>\n            <Tooltip className=\"deleteComment\" title=\"크큭..없.앤.다.\" placement=\"right\">\n                <Button index={index} shape=\"circle\" icon={<DeleteOutlined />} style={{}} onClick={(e)=>{onDelete(index)}} />\n            </Tooltip>\n        </CommentWrap>\n    );\n}\n\n// style ========================================================\nconst SPACE = \"4px\";\n\nconst CommentWrap = styled.div`\n    display : flex;\n    justify-content : flex-end;\n\n    margin-top : ${SPACE};\n    `;\n\nconst Content = styled.p`\n    padding : ${SPACE};\n    border : 1px solid #DCDCDC;\n    border-radius : 8px;\n    margin : 0;\n    max-width : 100%;\n    margin-right : ${SPACE};\n    \n    word-break: break-all;\n    overflow-wrap: break-word;\n    `;\n\n// function =====================================================\n// *","// imported Modules =============================================\nimport React, { useCallback, useState } from 'react';\nimport axios from \"axios\";\n\nimport styled from 'styled-components';\n\nimport { Button, Tooltip, Input } from \"antd\";\nimport { EditOutlined } from \"@ant-design/icons\"\n\n// imported components ==========================================\nimport Comment from \"../../atoms/Comment\";\n\n// Main Component ===============================================\nexport default function MapsModalComment({ nyamListSource, selectedNyam, refreshMaps, setIsLoading }) {\n    const [newComment, setNewComment] = useState(null);\n    const commentsData = JSON.parse(selectedNyam.comment).comment;\n\n    async function onCreate(e) {\n        setIsLoading(true);\n\n        // 검증\n        if (newComment == null || newComment === '') {\n            setIsLoading(false);\n            return;\n        }\n\n        // 요청 데이터 준비`\n        const url = `${nyamListSource}?taskTarget=comment&taskType=edit`;\n        const data = JSON.stringify({\n            id: selectedNyam.id,\n            comment: JSON.stringify({ comment: [newComment, ...commentsData] })\n        });\n\n        // 요청\n        //console.log(data);\n        await axios.post(url, data);\n\n        // 리프레시\n        await refreshMaps();\n        setNewComment(null);\n        setIsLoading(false);\n    }\n\n    const onDelete = useCallback(async (index) => {\n        setIsLoading(true);\n\n        // 요청 데이터 준비\n        const url = `${nyamListSource}?taskTarget=comment&taskType=edit`;\n        const data = JSON.stringify({\n            id: selectedNyam.id,\n            comment: JSON.stringify({ comment: [...commentsData.slice(0, index), ...commentsData.slice(index + 1)] })\n        });\n\n        // 요청\n        //console.log(data);\n        await axios.post(url, data);\n\n        // 리프레시\n        await refreshMaps();\n        setIsLoading(false);\n    }, [nyamListSource, selectedNyam, commentsData, setIsLoading, refreshMaps]);\n\n    return (\n        <MapsModalCommentWrap className=\"MapsModalComment\">\n            <Form>\n                <Input placeholder=\"새로운 의견을 적어주세요\" value={newComment} onChange={(e) => { setNewComment(e.target.value); }} style={{ borderRadius: \"8px\", marginRight: \"4px\" }} />\n                <Tooltip className=\"deleteComment\" title=\"쓰기\" placement=\"right\">\n                    <Button type=\"primary\" shape=\"circle\" icon={<EditOutlined />} size=\"normal\" onClick={onCreate} />\n                </Tooltip>\n            </Form>\n\n            <Comments>\n                {\n                    commentsData.map((item, index) => (\n                        <Comment key={index} index={index} content={item} onDelete={onDelete} />\n                    ))\n                }\n            </Comments>\n        </MapsModalCommentWrap>\n    );\n}\n\n// style ========================================================\nconst BORDER_COLOR = \"#dbdbdb\";\n\nconst MapsModalCommentWrap = styled.div`\n    display : flex;\n    flex-direction : column;\n\n    width : 40%;\n\n    margin-left : auto;\n    padding : 16px;\n\n    border : 1px solid ${BORDER_COLOR};\n    border-bottom : 12px solid ${BORDER_COLOR};\n    border-radius : 8px;\n\n    @media(max-width : 768px){\n        width : 100%;\n    }\n    `;\n\nconst Comments = styled.div`\n    display : flex;\n    flex-direction : column;\n    align-content : flex-end;\n    justify-content : flex-start;\n\n    height : 100%;\n\n    overflow-y: auto;\n    `;\n\nconst Form = styled.div`\n    display :flex;\n    align-items : center;\n    `;\n\n// function =====================================================\n// *","// imported Modules =============================================\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\n\nimport { Modal } from 'antd';\n\n// imported components ==========================================\nimport MapsModalInfo from \"../followers/MapsModalInfo\";\nimport MapsModalComment from \"../followers/MapsModalComment\";\nimport Loading from \"../../atoms/Loading\";\n\n// Main Component ===============================================\nexport default function MapsModal ({nyamListSource, selectedNyam, refreshMaps, mapsModalVisible, setMapsModalVisible, setNyamEditorModalVisible, setNyamEditorTaskType}) {\n    const [ isLoading, setIsLoading ] = useState(false);\n\n    return (\n        selectedNyam != null\n            ?\n                <MapsModalWrap className=\"MapsModal\">\n                    <StyledModal\n                        title={selectedNyam.name}\n                        visible={mapsModalVisible}\n                        onCancel={() => { setMapsModalVisible(false) }}\n                        footer={null}\n                    >\n                        <ModalContentsWrap>\n                            <MapsModalInfo \n                                nyamListSource={nyamListSource} selectedNyam={selectedNyam} refreshMaps={refreshMaps} \n                                setIsLoading={setIsLoading} setMapsModalVisible={setMapsModalVisible} setNyamEditorModalVisible={setNyamEditorModalVisible} setNyamEditorTaskType={setNyamEditorTaskType}\n                            />\n                            <MapsModalComment nyamListSource={nyamListSource} selectedNyam={selectedNyam} refreshMaps={refreshMaps} setIsLoading={setIsLoading} />\n                        </ModalContentsWrap>\n\n                        <Loading isLoading={isLoading} />\n                    </StyledModal>\n                </MapsModalWrap>\n    \n            :   \n                <div></div>\n    );\n}\n\n// style ========================================================\nconst MapsModalWrap = styled.div`\n\n    `;\n\nconst ModalContentsWrap = styled.div`\n    display : flex;\n\n    @media(max-width : 768px){\n        flex-direction : column;\n    }\n`;\nconst StyledModal = styled(Modal)`\n    min-width : 50%;\n`;\n// function =====================================================\n// *","export default function naverMapsinit (mapValues) {\n    // set naver.maps.Map\n    const { center, zoom } = mapValues;\n\n    const mapOptions = {\n        center: new window.naver.maps.LatLng(center.lat, center.lng),\n        zoom: zoom,\n    };\n    const map = new window.naver.maps.Map(\"map\", mapOptions);\n\n    return map;\n}","import axios from \"axios\";\nimport {message } from \"antd\";\n\nexport default async function naverMapsSetNyams (map, mapValues, setMarkers, setNyams, setMapsModalVisible, setSelectedNyam) {\n    // initialize temp variable for states\n    const tempNyams = initWithNyamtype(mapValues.nyamTypes);\n    const tempMarkers = initWithNyamtype(mapValues.nyamTypes);\n\n    // read nyamList\n    const nyamList = await readNyamList(mapValues.nyamListSource);\n    if (nyamList===null){\n        message.error(\"문제가 생겨 데이터를 받아오지 못했습니다. 새로고침을 시도해주세요\", 0);\n        return;\n    }\n\n    // set markers\n        // organization item\n    const org = nyamList.shift(); \n    const org_marker = new window.naver.maps.Marker({\n        position: new window.naver.maps.LatLng(org.lat, org.lng),\n        map: map,\n        icon: {\n          url : `img/icons/${org.type}.png`,\n          size: new window.naver.maps.Size(48, 48),\n          origin: new window.naver.maps.Point(0, 0),\n        }\n    });\n\n        // nyam items\n    let cnt = 0;\n    nyamList.forEach( item => { \n        const marker = new window.naver.maps.Marker({\n            position : new window.naver.maps.LatLng(item.lat, item.lng),\n            map : map,\n            icon : {\n                content: [\n                    '<div>',\n                        '<div style=\"background-color:rgba(255,255,255,0.8); padding:5px; border-radius:16px; border:1px solid #d9d9d9;\">',\n                            `<span style=\"white-space:nowrap;\">${item.name}</span>`,\n                        '</div>',\n                        `<img src=\"img/icons/svg/${item.type}.svg\">`,\n                    '</div>'\n                ].join(''),\n                size : new window.naver.maps.Size(1,500),\n                scaledSize: new window.naver.maps.Size(395, 79),\n\n                anchor: new window.naver.maps.Point(16, 48),\n                \n            }\n        });\n\n        marker.addListener(\"click\", (e) => {\n            const targetid = e.overlay[\"_nmarker_id\"];\n            const types = mapValues.nyamTypes;\n\n            for( let i = 0; i<types.length; i++){\n                const type = types[i];\n                let chk = false;\n                for( let j=0; j<tempMarkers[type].length; j++ ){\n                    if ( targetid === tempMarkers[type][j][\"_nmarker_id\"] ){\n                        setSelectedNyam(tempNyams[type][j]);\n                        setMapsModalVisible(true);\n                        chk = true;\n                        break;\n                    }\n                }\n                if (chk) { break; }\n            }\n        });\n\n        tempNyams[item.type].push(item);\n        tempMarkers[item.type].push(marker);\n\n        cnt++;\n    });\n    \n    org_marker.setZIndex(cnt); // 회사 마커가 가장 위로 올라오도록\n\n    setNyams(tempNyams);\n    setMarkers(tempMarkers);\n}\n\nasync function readNyamList (src) {\n        try {\n            const { data } = await axios.get(src);\n            //console.log(\"readNyams\", data);\n            return data;\n        } catch {\n            return null;\n        }\n        \n        \n\n        \n}\n\nfunction initWithNyamtype (types) {\n    let obj = {};\n    types.forEach( category => {\n        obj[category] = [];\n    });\n\n    return obj;\n}","// imported Modules =============================================\nimport { React, useState, useEffect } from \"react\";\nimport ScriptTag from \"react-script-tag\";\nimport styled from \"styled-components\";\n\n// [경고] 임시적인 사용자설정 보관소 - 나중에 다른 방법으로 대체필요\nimport DataStorage from \"../../DataStorage\"; // [경고] 임시적인 사용자설정 보관소 - 나중에 다른 방법으로 대체필요\n// [경고] 임시적인 사용자설정 보관소 - 나중에 다른 방법으로 대체필요\n\n// imported components ==========================================\nimport MapsModal from \"./leaders/MapsModal\";\nimport NyamEditor from \"./followers/NyamEditor\";\nimport Loading from \"../atoms/Loading\";\n\n// imported supporters\nimport naverMapsinit from \"../supporters/naverMapsInit\";\nimport naverMapsSetNyams from \"../supporters/naverMapsSetNyams\";\n\n// Main Component ===============================================\nlet map = null;\n\nconst mapValues = {\n    nyamListSource: DataStorage(\"NYAM_LIST_SOURCE\"),\n    nyamTypes: DataStorage(\"NYAM_TYPES_KEY\"),\n    mapSource: \"https://openapi.map.naver.com/openapi/v3/maps.js?ncpClientId=ont9t74d67\",\n    center: {\n        lat: 37.552472,\n        lng: 127.076665,\n    },\n    zoom: 16,\n};\n\nexport default function Maps({ filters, isPickmode, nyamEditorTaskType, setIsPickmode, setNyamEditorTaskType }) {\n    const [nyams, setNyams] = useState(null);\n    const [markers, setMarkers] = useState(null);\n\n    const [isLoading, setIsLoading] = useState(false);\n    const [selectedNyam, setSelectedNyam] = useState(null);\n    const [pickCoord, setPickCoord] = useState({ x: 0, y: 0 }); // 새로 추가할 냠의 좌표값. { x : 123, y : 123 }\n\n    const [mapsModalVisible, setMapsModalVisible] = useState(false);\n    const [nyamEditorModalVisible, setNyamEditorModalVisible] = useState(false);\n\n\n    useEffect(() => {\n        if (markers !== null) {\n            setMarkersVisible(filters, setIsLoading, markers);\n        }\n    }, [filters, markers]);\n\n    useEffect(() => {\n        if (map != null) {\n            if (isPickmode === true) {\n                map.setCursor(\"Crosshair\");\n                const listener = window.naver.maps.Event.addListener(map, 'click', function (e) {\n                    if (isPickmode === true) {\n                        const { x, y } = e.coord;\n                        setPickCoord({ x, y });\n                        setIsPickmode(false);\n                        setNyamEditorModalVisible(true);\n                        window.naver.maps.Event.removeListener(listener);\n                    }\n                });\n            } else if (isPickmode === false) {\n                map.setCursor(\"Move\");\n            }\n        }\n    }, [isPickmode, setIsPickmode]);\n\n    useEffect(() => {\n        // 모달이 켜있었다면 모달내용 바꿔주기\n        if (selectedNyam != null) {\n            const { type, id } = selectedNyam;\n            const index = nyams[type].findIndex(nyam => nyam.id === id)\n            setSelectedNyam(nyams[type][index]);\n        }\n    }, [nyams, selectedNyam]);\n\n    async function refreshMaps() {\n        // 기존의 마커 모두 삭제하기\n        for (let arr of Object.values(markers)) {\n            arr.forEach(marker => {\n                marker.setMap(null);\n            });\n        }\n\n        // 다시 만들기\n        await naverMapsSetNyams(map, mapValues, setMarkers, setNyams, setMapsModalVisible, setSelectedNyam);\n\n        // 이후 useEffect에서 selectedNyam 내용 갱신.\n    }\n\n    return (\n        <MapsWrap className=\"Maps\">\n            <ScriptTag\n                type=\"text/javascript\" src={mapValues.mapSource}\n                onLoad={async () => {\n                    setIsLoading(true);\n                    map = naverMapsinit(mapValues);\n                    await naverMapsSetNyams(map, mapValues, setMarkers, setNyams, setMapsModalVisible, setSelectedNyam);\n                    setIsLoading(false);\n                }}\n            />\n            <Map id=\"map\"></Map>\n\n            <MapsModal\n                nyamListSource={mapValues.nyamListSource} selectedNyam={selectedNyam} refreshMaps={refreshMaps} mapsModalVisible={mapsModalVisible}\n                setMapsModalVisible={setMapsModalVisible} setNyamEditorModalVisible={setNyamEditorModalVisible} setNyamEditorTaskType={setNyamEditorTaskType}\n            />\n\n            <NyamEditor\n                pickCoord={pickCoord} taskType={nyamEditorTaskType} defaultNyamValue={selectedNyam}\n                refreshMaps={refreshMaps} setIsPickmode={setIsPickmode} setMapsModalVisible={setMapsModalVisible}\n                nyamEditorModalVisible={nyamEditorModalVisible} setNyamEditorModalVisible={setNyamEditorModalVisible}\n            />\n\n            <Loading isLoading={isLoading} />\n        </MapsWrap>\n    );\n}\n\n// style ========================================================\nconst MapsWrap = styled.div`\n    display : flex;\n    flex : 1;\n    `;\n\nconst Map = styled.div`\n    width: 100%;\n    height : 100%;\n    `;\n\n// function =====================================================\nconst setMarkersVisible = (filters, setIsLoading, markers) => {\n    setIsLoading(true);\n\n    const types = mapValues.nyamTypes; // 정의되어있는 type배열 불러오기\n\n    types.forEach(type => {\n        const target = markers[type]; // markers의 한 type을 대상으로 정함\n        if (target.length === 0) { return; } // 대상이 비어있으면 바로 함수종료\n\n        const dest = filters[type]; // 업데이트 하려고 하는 값\n        if (target[0].getVisible() !== dest) { // target안의 첫번째 마커의 visible속성과, 업데이트 하려고 하는 값이 다르면\n            target.forEach(marker => { marker.setVisible(dest); }); // 업데이트!\n            return;\n        }\n    });\n\n    setIsLoading(false);\n}","// imported Modules =============================================\nimport { React } from 'react';\nimport styled from 'styled-components';\n\n// imported components ==========================================\n// *\n\n// Main Component ===============================================\nexport default function Footer () {\n    return (\n        <FooterWrap className=\"Footer\">\n            <Group>\n                <Item>Wonjin Yi</Item>\n                <Item><strong>Contact </strong>studioplug17@gmail.com</Item>\n            </Group>\n            <Group style={{marginLeft : \"auto\",}}>\n                <Item><strong>냠냠램 TEST </strong>조직내부의 폐쇄적인 냠냠거리 공유 서비스</Item>\n            </Group>\n        </FooterWrap>\n    );\n}\n\n// style ========================================================\nconst FooterWrap = styled.div`\n    display : flex;\n \n    width : 100%;\n    padding : 20px 30px;\n\n    background-color : #333333;\n    color : #a1a1a1;\n    `; \n\nconst Group = styled.div`\n\n    `;\n\nconst Item = styled.p`\n    margin : 0;\n    `;\n\n// function =====================================================\n// *","// imported Modules =============================================\nimport { React, useEffect, useState } from 'react';\nimport styled from \"styled-components\";\nimport {notification} from \"antd\";\n\n// imported components ==========================================\nimport Header from \"./components/Header/Header\";\nimport Maps from \"./components/Maps/Maps\";\nimport Footer from \"./components/Footer/Footer\";\n\n// Main Component ===============================================\nexport default function App() {\n  const [filters, setFilters] = useState({});\n  const [isPickmode, setIsPickmode] = useState(false); // 현재 '새로운 냠'버튼을 눌러 새로운 위치를 찍는 상태인지\n  const [nyamEditorTaskType, setNyamEditorTaskType] = useState(\"create\"); // 냠에디터 taskType : create / edit\n\n  // temp temp temp temp temp temp temp temp temp temp\n  useEffect( () => {\n    notification.open({\n      message: '안녕히계세요여러분저는이세상의모든굴레와...',\n      description:\n        \"여기(nyam.wonj.in)는 멀지않은 미래에 모든 사람의 '냠 연구소'로 통하는 대문으로 바뀔 예정입니다. 대문에서 'datalab_gorani'를 입력하시면 현재와 같은 페이지를 열람하실 수 있습니다. 데이터연구소의 '냠 연구소'는 구글시트가 망하기 전까지는 유지됩니다.\",\n      duration : 10\n    });\n  }, []);\n  // temp temp temp temp temp temp temp temp temp temp\n\n  return (\n    <AppWrap className=\"App\" style={{ cursor : (isPickmode ? 'Crosshair' : 'auto') }}>\n      <Header setFilters={setFilters} setIsPickmode={setIsPickmode} setNyamEditorTaskType={setNyamEditorTaskType} />\n      <Maps filters={filters} isPickmode={isPickmode} nyamEditorTaskType={nyamEditorTaskType} setIsPickmode={setIsPickmode} setNyamEditorTaskType={setNyamEditorTaskType} />\n      <Footer />\n    </AppWrap>\n  );\n}\n\n// style ========================================================\nconst AppWrap = styled.div`\n  display : flex;\n  flex-direction : column;\n  height : 100%;\n`;\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    // <React.StrictMode>\n    //   <App />\n    // </React.StrictMode>,\n    \n    <App />,\n    document.getElementById('root')\n);"],"sourceRoot":""}