{"version":3,"sources":["../node_modules/yargs-parser sync","DataStorage.js","components/followers/Header/Menu.js","components/Header.js","components/atoms/Loading.js","components/followers/Maps/MapsModalInfo.js","components/atoms/Comment.js","components/followers/Maps/MapsModalComment.js","components/followers/Maps/MapsModal.js","components/Maps.js","components/Footer.js","App.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","DataStorage","key","NYAM_TYPES","meal","fastfood","cvs","cafe","NYAM_TYPES_KEY","NYAM_LIST_SOURCE","Menu","setFilters","useState","arr","obj","forEach","el","initChecked","checked","setChecked","useEffect","MenuWrap","className","placement","title","content","filterContent","target","nyamType","trigger","MenuButton","shape","icon","FilterOutlined","PlusOutlined","style","marginLeft","onChange","map","styled","div","Button","Header","HeaderWrap","Logo","h1","Loading","isLoading","LoadingWrap","Backdrop","spinning","size","indicator","LoadingOutlined","fontSize","spin","MapsModalInfo","nyamListSource","selectedNyam","open","close","description","menu","parsedMenu","JSON","parse","MapsModalInfoWrap","Summary","Title","header","footer","bordered","dataSource","item","name","price","renderItem","Item","borderRadius","p","ul","Comment","onDelete","CommentWrap","Content","DeleteOutlined","onClick","SPACE","MapsModalComment","nyamListSoruce","commentsData","comment","MapsModalCommentWrap","Comments","Form","placeholder","marginRight","EditOutlined","onCreate","console","log","MapsModal","mapsModalVisible","setMapsModalVisible","MapsModalWrap","StyledModal","visible","onCancel","ModalContentsWrap","Modal","mapValues","nyamTypes","mapSource","center","lat","lng","zoom","nyams","markersInit","markers","Maps","filters","setIsLoading","setSelectedNyam","setMarkersVisible","MapsWrap","type","onLoad","init","src","Map","reqNyamList","read","a","axios","get","data","length","dest","getVisible","marker","setVisible","mapOptions","window","naver","maps","LatLng","nyamList","org","shift","Marker","position","url","Size","origin","Point","temp","join","anchor","addListener","targetid","overlay","types","i","chk","j","push","latlng","coord","category","Footer","FooterWrap","Group","App","AppWrap","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.291c89d0.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 257;","// [경고] 임시적인 사용자설정 보관소 - 나중에 다른 방법으로 대체필요\nexport default function DataStorage (key) {\n    const data = {\n        NYAM_TYPES : {\n            meal : \"밥\",\n            fastfood : \"패스트푸드\",\n            cvs : \"편의점\",\n            cafe : \"카페\",\n        }, \n        NYAM_TYPES_KEY : [\"meal\", \"fastfood\", \"cvs\", \"cafe\"],\n        NYAM_LIST_SOURCE : \"https://script.google.com/macros/s/AKfycbyuACrtmBSgcaehSnfbDVhSAMeScTP455Z44h4jtjxRGxJ5UNeVdOEh/exec\",\n    }\n\n    return data[key];\n}","// imported Modules =============================================\nimport { React, useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Checkbox, Popover, Button, Tooltip } from \"antd\";\nimport { FilterOutlined, PlusOutlined } from \"@ant-design/icons\"\nimport 'antd/dist/antd.css';\n\nimport DataStorage from \"../../../DataStorage\"; // [경고] 임시적인 사용자설정 보관소 - 나중에 다른 방법으로 대체필요\n\n// Main Component ===============================================\nconst NYAM_TYPES = DataStorage(\"NYAM_TYPES\"); // [경고] 임시적인 사용자설정 보관소 - 나중에 다른 방법으로 대체필요\nconst NYAM_TYPES_KEY = DataStorage(\"NYAM_TYPES_KEY\");\n\nexport default function Menu ({ setFilters }) {\n    const [checked, setChecked] = useState( initChecked(NYAM_TYPES_KEY) );\n    useEffect ( () => { \n        setFilters(checked); \n    }, [checked, setFilters]);\n\n    function onChange(e) { setChecked({ ...checked, [e.target.nyamType] : e.target.checked }) }\n\n    return (\n        <MenuWrap className=\"Menu\">\n            <Popover className=\"filter\" placement=\"bottom\" title={\"냠 필터링\"} content={filterContent(onChange, checked)} trigger=\"click\">\n                <Tooltip title=\"냠 필터링\">\n                    <MenuButton shape=\"circle\" icon={<FilterOutlined />} />\n                </Tooltip>\n            </Popover>\n\n            <Tooltip className=\"create\" title=\"새로운 냠\">\n                <MenuButton shape=\"circle\" icon={<PlusOutlined />} style={{marginLeft:\"8px\"}} />\n            </Tooltip>\n        </MenuWrap>\n    );\n}\n\nfunction filterContent(onChange, checked) {\n    return (\n        <div className=\"filterContent\">\n        {\n            NYAM_TYPES_KEY.map( key => (\n                <Checkbox onChange={onChange} checked={checked[key]} nyamType={key} key={key}>{NYAM_TYPES[key]}</Checkbox>\n            ))\n        }\n        </div>\n    )\n}\n    \n// style ========================================================\nconst MenuWrap = styled.div`\n    display : flex;\n    justify-contents : center;\n    align-items : center;\n\n    padding : 10px 0px;\n\n    background-color : #333333;\n    color : #FFFFFF;\n    `;\n\nconst MenuButton = styled(Button)`\n    border : 0;\n    `;\n\n// function =====================================================\nfunction initChecked(arr) {\n    let obj = {};\n    arr.forEach( el => {\n        obj[el] = true;\n    });\n\n    return obj;\n}","// imported Modules =============================================\nimport { React } from 'react';\nimport styled from 'styled-components';\n\n// imported components ==========================================\nimport Menu from \"./followers/Header/Menu\";\n\n// Main Component ===============================================\nexport default function Header ({ setFilters }) {\n    return (\n        <HeaderWrap className=\"Header\">\n            <Logo>냠냠랩(TEST)</Logo>\n            <Menu setFilters={setFilters} />\n        </HeaderWrap>\n    );\n}\n\n// style ========================================================\nconst HeaderWrap = styled.div`\n    display : flex;\n    align-items : center;\n\n    padding : 10px 0px;\n\n    background-color : #333333;\n    color : #FFFFFF;\n    `;\n\nconst Logo = styled.h1`\n    margin : 0;\n    padding : 10px 20px;\n    color : #FFFFFF;\n    font-family: 'Poor Story', cursive;\n    `;\n\n// function =====================================================\n// *","// imported Modules =============================================\nimport { React } from \"react\";\n\nimport styled from \"styled-components\";\nimport { Spin } from 'antd';\nimport { LoadingOutlined } from '@ant-design/icons';\nimport 'antd/dist/antd.css';\n\n// Main Component ===============================================\nexport default function Loading ({ isLoading }) {\n    \n    if ( isLoading ){\n        return (\n            <LoadingWrap className=\"Loading\">\n                <Backdrop></Backdrop>\n                <Spin spinning={isLoading} size=\"large\" indicator={<LoadingOutlined style={{ fontSize: 64 }} spin />} />\n            </LoadingWrap>\n        );\n    } else {\n        return <div className=\"Loading\"></div>;\n    }\n   \n}\n\n// style ========================================================\nconst LoadingWrap = styled.div`\n    position : fixed;\n    top : 0; \n    left : 0;\n\n    display : flex;\n    justify-content : center;\n    align-items : center;\n\n    width : 100%; \n    height : 100%;\n    `;\n\nconst Backdrop = styled.div`\n    position : fixed;\n    top : 0; \n    left : 0;\n\n    width : 100%;\n    height : 100%;\n\n    background-color : rgba(0,0,0, 0.75);\n    `;","// imported Modules =============================================\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\n\nimport { Modal, Button, List } from \"antd\";\nimport axios from \"axios\";\nimport parser from \"yargs-parser\";\n\n// imported components ==========================================\nimport Loading from \"../../atoms/Loading\";\n\n// Main Component ===============================================\nexport default function MapsModalInfo ({ nyamListSource, selectedNyam }) {\n    const { open, close, description, menu } = selectedNyam;\n    const parsedMenu = JSON.parse(menu).menu;\n\n    return (\n        <MapsModalInfoWrap className=\"MapsModalInfo\">\n            <Summary>\n                <div>\n                    <Title>영업시간</Title> \n                    <p>{open}~{close}</p>\n                </div>\n                <p style={{marginLeft:\"8px\"}}>{description}</p>\n            </Summary>\n            <MenuWrap>\n                <Title>메뉴</Title>\n                <List\n                    size=\"small\"\n                    header={null}\n                    footer={null}\n                    bordered\n                    dataSource={parsedMenu.map( item => ( `${item.name} ${item.price}` ) )}\n                    renderItem={item => <List.Item>{item}</List.Item>}\n                    style={{borderRadius:\"8px\"}}\n                />\n                \n            </MenuWrap>\n        </MapsModalInfoWrap>\n    );\n}\n\n// style ========================================================\nconst MapsModalInfoWrap = styled.div`\n    display : flex;\n    flex-direction : column;\n\n    padding-right : 8px; \n    `;\n\nconst Summary = styled.div`\n    display : flex;\n    `;\n\nconst MenuWrap = styled.div`\n    display : flex;\n    flex-direction : column;\n    `;\n\nconst Title = styled.p`\n    margin : 0;\n    font-weight : bold;\n    `;\n\nconst Menus = styled.ul`\n\n`;\n\n// function =====================================================\n// *","// imported Modules =============================================\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\n\nimport { Button, Tooltip } from \"antd\";\nimport { DeleteOutlined } from \"@ant-design/icons\"\n\n// Main Component ===============================================\nexport default function Comment ({ content, onDelete }) {\n    return (\n        <CommentWrap className=\"Comment\">\n            <Content>{content}</Content>\n            <Tooltip className=\"deleteComment\" title=\"크큭..없.앤.다.\" placement=\"right\">\n                <Button shape=\"circle\" icon={<DeleteOutlined />} style={{}} onClick={onDelete} />\n            </Tooltip>\n        </CommentWrap>\n    );\n}\n\n// style ========================================================\nconst SPACE = \"4px\";\n\nconst CommentWrap = styled.div`\n    display : flex;\n    justify-content : flex-end;\n    \n    margin-bottom : ${SPACE};\n    `;\n\nconst Content = styled.p`\n    padding : ${SPACE};\n    border : 1px solid #DCDCDC;\n    border-radius : 8px;\n    margin : 0;\n    margin-right : ${SPACE};\n    `;\n\n// function =====================================================\n// *","// imported Modules =============================================\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\n\nimport { Button, Tooltip, Input } from \"antd\";\nimport { EditOutlined } from \"@ant-design/icons\"\n\n// imported components ==========================================\nimport Comment from \"../../atoms/Comment\";\n\n// Main Component ===============================================\nexport default function MapsModalComment ({ nyamListSoruce, selectedNyam }) {\n    const commentsData = JSON.parse(selectedNyam.comment).comment;\n\n    return (\n        <MapsModalCommentWrap className=\"MapsModalComment\">\n            \n            <Comments>\n            {\n                commentsData.map( item => (\n                    <Comment content={item} onDelete={onDelete} />\n                ))\n            }\n            </Comments>\n\n            <Form>\n                <Input placeholder=\"새로운 의견을 적어주세요\" style={{borderRadius:\"8px\", marginRight:\"4px\"}}></Input>\n                <Tooltip className=\"deleteComment\" title=\"새로운 의견적기\" placement=\"right\">\n                    <Button shape=\"circle\" icon={<EditOutlined />} size=\"normal\" style={{}} onClick={onCreate} />\n                </Tooltip>\n            </Form>\n            \n        </MapsModalCommentWrap>\n    );\n}\n\n// style ========================================================\nconst MapsModalCommentWrap = styled.div`\n    display : flex;\n    flex-direction : column;\n\n    width : 40%;\n\n    margin-left : auto;\n    padding : 16px;\n    border : 1px solid #dbdbdb;\n    border-radius : 8px;\n    `;\n\nconst Comments = styled.div`\n    display : flex;\n    flex-direction : column;\n    align-content : flex-end;\n    justify-content : flex-start;\n   \n    overflow-y: auto;\n`;\n\nconst Form = styled.div`\n    display :flex;\n    align-items : center;\n`;\n\n// function =====================================================\nfunction onCreate() {\n    console.log(\"새로쓰기\")\n}\nfunction onDelete() {\n    console.log(\"삭제삭제\");\n}","// imported Modules =============================================\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\n\nimport { Modal } from 'antd';\n\n// imported components ==========================================\nimport MapsModalInfo from \"./MapsModalInfo\";\nimport MapsModalComment from \"./MapsModalComment\";\n\n// Main Component ===============================================\nexport default function MapsModal ({nyamListSource, selectedNyam, mapsModalVisible, setMapsModalVisible}) {\n    return (\n        selectedNyam !== null\n            ?\n                <MapsModalWrap className=\"MapsModal\">\n                    <StyledModal\n                        title={selectedNyam.name}\n                        visible={mapsModalVisible}\n                        onCancel={() => { setMapsModalVisible(false) }}\n                        footer={null}\n                    >\n                        <ModalContentsWrap>\n                            <MapsModalInfo nyamListSource={nyamListSource} selectedNyam={selectedNyam} />\n                            <MapsModalComment nyamListSource={nyamListSource} selectedNyam={selectedNyam} />\n                        </ModalContentsWrap>\n                        \n                    </StyledModal>\n                </MapsModalWrap>\n    \n            :   \n                <div></div>\n    );\n}\n\n// style ========================================================\nconst MapsModalWrap = styled.div`\n\n    `;\n\nconst ModalContentsWrap = styled.div`\n    display : flex;\n`;\nconst StyledModal = styled(Modal)`\n    min-width : 50%;\n`;\n// function =====================================================\n// *","// imported Modules =============================================\nimport { React, useState, useEffect } from \"react\";\nimport ScriptTag from \"react-script-tag\";\nimport axios from \"axios\";\n\nimport styled from \"styled-components\";\n\nimport DataStorage from \"../DataStorage\"; // [경고] 임시적인 사용자설정 보관소 - 나중에 다른 방법으로 대체필요\n\n// imported components ==========================================\nimport MapsModal from \"./followers/Maps/MapsModal\";\n\nimport Loading from \"./atoms/Loading\";\n\n// Main Component ===============================================\nconsole.log(\"map\");\nlet map = null;\nconst mapValues = {\n    nyamListSource : DataStorage(\"NYAM_LIST_SOURCE\"),\n    nyamTypes : DataStorage(\"NYAM_TYPES_KEY\"),\n    mapSource : \"https://openapi.map.naver.com/openapi/v3/maps.js?ncpClientId=ont9t74d67\",\n    center : {\n        lat : 37.552472, \n        lng : 127.076665,\n    },\n    zoom : 16,\n};\n\nconst nyams = markersInit();\nconst markers = markersInit();\n\nexport default function Maps ({ filters }) {\n    //const [markers, setMarkers] = useState(null);\n    const [isLoading, setIsLoading] = useState(false);\n    const [mapsModalVisible, setMapsModalVisible] = useState(false);\n    const [selectedNyam, setSelectedNyam] = useState(null);\n\n    useEffect( () => {\n        if ( markers !== null ) {\n            setMarkersVisible(filters, setIsLoading);\n        }\n    }, [filters]);\n\n    return (\n        <MapsWrap className=\"Maps\">\n            <ScriptTag type=\"text/javascript\" onLoad={() => { init(setIsLoading, setMapsModalVisible, setSelectedNyam); }} src={mapValues.mapSource} />\n\n            <Map id=\"map\"></Map>\n            <MapsModal nyamListSource={mapValues.nyamListSource} selectedNyam={selectedNyam} mapsModalVisible={mapsModalVisible} setMapsModalVisible={setMapsModalVisible} />\n            <Loading isLoading={isLoading} />\n        </MapsWrap>\n    );\n}\n\n// style ========================================================\nconst MapsWrap = styled.div`\n    display : flex;\n    flex : 1;\n    `;\n\nconst Map = styled.div`\n    width: 100%;\n    height : 100%;\n    `;\n\n// function =====================================================\nconst reqNyamList = {\n    read : async () => {\n        const { data } = await axios.get(mapValues.nyamListSource);\n        console.log(\"readNyams\", data);\n\n        return data;\n    },\n}\n\nconst setMarkersVisible = (filters, setIsLoading) => {\n    setIsLoading(true);\n\n    const types = mapValues.nyamTypes; // 정의되어있는 type배열 불러오기\n\n    types.forEach( type => {\n        const target = markers[type]; // markers의 한 type을 대상으로 정함\n        if (target.length === 0) { return; } // 대상이 비어있으면 바로 함수종료\n\n        const dest = filters[type]; // 업데이트 하려고 하는 값\n        if ( target[0].getVisible() !== dest ){ // target안의 첫번째 마커의 visible속성과, 업데이트 하려고 하는 값이 다르면\n            target.forEach( marker => { marker.setVisible(dest); }); // 업데이트!\n            return;\n        }\n    });\n\n    setIsLoading(false);\n}\n\nconst init = async(setIsLoading, setMapsModalVisible, setSelectedNyam) => {\n    setIsLoading(true);\n\n    // set naver.maps.Map\n    const { center, zoom } = mapValues;\n\n    const mapOptions = {\n        center: new window.naver.maps.LatLng(center.lat, center.lng),\n        zoom: zoom,\n    };\n    map = new window.naver.maps.Map(\"map\", mapOptions);   \n\n    // read nyamList\n    const nyamList = await reqNyamList.read();\n\n    // set markers\n    const org = nyamList.shift(); // organization\n    /*const org_marker = */ new window.naver.maps.Marker({\n        position: new window.naver.maps.LatLng(org.lat, org.lng),\n        map: map,\n        icon: {\n          url : `img/icons/${org.type}.png`,\n          size: new window.naver.maps.Size(48, 48),\n          origin: new window.naver.maps.Point(0, 0),\n        }\n    });\n\n    nyamList.forEach( item => { // nyam items\n        const temp = new window.naver.maps.Marker({\n            position : new window.naver.maps.LatLng(item.lat, item.lng),\n            map : map,\n            icon : {\n                content: [\n                    '<div>',\n                        '<div style=\"background-color:rgba(255,255,255,0.8); padding:5px; border-radius:16px; border:1px solid #d9d9d9;\">',\n                            `<span>${item.name}</span>`,\n                        '</div>',\n                        `<img src=\"img/icons/${item.type}.png\">`,\n                    '</div>'\n                ].join(''),\n                anchor: new window.naver.maps.Point(16, 48),\n            }\n        });\n\n        temp.addListener(\"click\", (e) => {\n            const targetid = e.overlay[\"_nmarker_id\"];\n            const types = mapValues.nyamTypes;\n\n            for( let i = 0; i<types.length; i++){\n                const type = types[i];\n                let chk = false;\n\n                for( let j=0; j<markers[type].length; j++ ){\n                    if ( targetid === markers[type][j][\"_nmarker_id\"] ){\n                        setSelectedNyam(nyams[type][j]);\n                        setMapsModalVisible(true);\n                        chk = true;\n                        break;\n                    }\n                }\n\n                if (chk) { break; }\n            }\n        });\n\n        nyams[item.type].push(item);\n        markers[item.type].push(temp);\n    });\n\n    // set eventListener\n    map.addListener(\"click\", (e) => {\n        const latlng = e.coord;\n        console.log(\"lat lng : \", latlng);\n    });\n    \n\n    setIsLoading(false);\n}\n\nfunction markersInit () {\n    let obj = {};\n    (mapValues.nyamTypes).forEach( category => {\n        obj[category] = [];\n    });\n\n    return obj;\n}","// imported Modules =============================================\nimport { React } from 'react';\nimport styled from 'styled-components';\n\n// imported components ==========================================\n// *\n\n// Main Component ===============================================\nexport default function Footer () {\n    return (\n        <FooterWrap className=\"Footer\">\n            <Group>\n                <Item>Wonjin Yi</Item>\n                <Item><strong>Contact </strong>studioplug17@gmail.com</Item>\n            </Group>\n            <Group style={{marginLeft : \"auto\",}}>\n                <Item><strong>냠냠램 TEST </strong>조직내부의 폐쇄적인 냠냠거리 공유 서비스</Item>\n            </Group>\n        </FooterWrap>\n    );\n}\n\n// style ========================================================\nconst FooterWrap = styled.div`\n    display : flex;\n \n    width : 100%;\n    padding : 20px 30px;\n\n    background-color : #333333;\n    color : #a1a1a1;\n    `; \n\nconst Group = styled.div`\n\n    `;\n\nconst Item = styled.p`\n    margin : 0;\n    `;\n\n// function =====================================================\n// *","// imported Modules =============================================\nimport { React, useState } from 'react';\nimport styled from \"styled-components\";\n\n// imported components ==========================================\nimport Header from \"./components/Header\";\nimport Maps from \"./components/Maps\";\nimport Footer from \"./components/Footer\";\n\n// Main Component ===============================================\nexport default function App() {\n  const [filters, setFilters] = useState({});\n\n  return (\n    <AppWrap className=\"App\">\n      <Header setFilters={setFilters} />\n      <Maps filters={filters} />\n      <Footer />\n    </AppWrap>\n  );\n}\n\n// style ========================================================\nconst AppWrap = styled.div`\n  display : flex;\n  flex-direction : column;\n\n  height : 100%;\n`;\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    // <React.StrictMode>\n    //   <App />\n    // </React.StrictMode>,\n    \n    <App />,\n    document.getElementById('root')\n);"],"sourceRoot":""}