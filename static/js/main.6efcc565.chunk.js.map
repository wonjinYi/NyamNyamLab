{"version":3,"sources":["components/Header/followers/UpdateNoteRaw.md","components/Header/followers/UpdateNote.js","DataStorage.js","components/Header/followers/Tools.js","components/Header/Header.js","components/atoms/ContentsTable.js","components/atoms/DeleteBtn.js","components/Maps/followers/MapsModalInfo.js","components/Maps/followers/Comment.js","components/Maps/followers/MapsModalComment.js","components/atoms/Loading.js","components/Maps/leaders/MapsModal.js","components/Maps/followers/NyamEditor.js","components/supporters/initNaverMaps.js","components/supporters/readContents.js","components/supporters/createNyamMarkers.js","components/supporters/createCenterMarker.js","components/Maps/Maps.js","components/Footer/Footer.js","App.js","index.js"],"names":["UpdateNote","updateNoteModalVisible","setUpdateNoteModalVisible","useState","markdown","setMarkdown","useEffect","a","fetch","mdSource","then","res","text","str","init","UpdateNoteWrap","className","title","visible","onCancel","footer","style","minWidth","children","styled","div","DataStorage","key","NYAM_TYPES","korea","china","japan","asian","schoolfood","fastfood","cafe","bakery","pub","cvs","NYAM_TYPES_KEY","CONTENT_SOURCE","MAP_SOURCE","Tools","setFilters","setIsPickmode","setNyamEditorTaskType","arr","obj","forEach","el","initChecked","checked","setChecked","ToolsWrap","placement","content","filterContent","e","target","nyamType","trigger","MenuButton","shape","icon","FilterOutlined","createNyamContent","PlusOutlined","marginLeft","onClick","BookOutlined","onChange","styld","display","flexDirection","map","type","index","margin","Button","Header","HeaderWrap","Logo","h1","ContentsTable","desc","dataOrder","data","ContentsTableWrap","Table","Row","borderWidth","Th","rowItem","colItem","Td","CELL_PADDING","BORDER_COLOR","table","tr","th","td","DeleteBtn","setDeleteConfirm","setVisible","formContent","justifyContent","marginRight","DeleteBtnWrap","onVisibleChange","DeleteOutlined","MapsModalInfo","nyamListSource","selectedNyam","refreshMaps","setIsLoading","setMapsModalVisible","setNyamEditorModalVisible","deleteConfirm","open","close","description","menu","parsedMenu","JSON","parse","url","stringify","axios","post","message","success","onDelete","MapsModalInfoWrap","href","removeSpace","name","rel","QuestionCircleOutlined","size","SPACE","FormOutlined","Summary","Title","p","string","split","join","Comment","CommentWrap","Content","MapsModalComment","newComment","setNewComment","commentsData","comment","id","useCallback","slice","MapsModalCommentWrap","Form","placeholder","value","borderRadius","suffix","onEmojiClick","emoji","SmileOutlined","EditOutlined","Comments","item","Loading","isLoading","LoadingWrap","Backdrop","spinning","indicator","LoadingOutlined","fontSize","spin","MapsModal","mapsModalVisible","MapsModalWrap","StyledModal","ModalContentsWrap","Modal","NYAM_LIST_SOURCE","SUMMARY_INIT_VALUE","lat","lng","MENUITEM_INIT_VALUE","price","NyamEditor","taskType","pickCoord","defaultNyamValue","nyamEditorModalVisible","resetLock","setResetLock","summary","setSummary","menuItems","setMenuItems","initFormData","tempSummary","tempMenuItems","y","x","onChangeSummary","onChangeMenuItems","addNewMenuItem","removeMenuItem","Object","assign","keys","property","warning","strData","console","error","NyamEditorWrap","SummaryWrap","Coord","textAlign","info","StyledInput","TimePickersWrap","format","moment","time","timeString","flexGrow","minuteStep","Option","MenusWrap","MenuItemWrap","StyledButton","MinusOutlined","MenuItem","length","ButtonsWrap","summaryReplace","Input","naverMapsinit","setting","zoom","mapOptions","center","window","naver","maps","LatLng","Map","readContents","src","get","log","rawNyamList","nyamList","createNyamMarkers","nyamTypes","setMarkers","setNyams","setSelectedNyam","tempNyams","initWithNyamtype","tempMarkers","marker","Marker","position","anchor","Point","addListener","targetid","overlay","types","i","chk","j","push","err","category","createCenterMarker","Size","origin","Maps","filters","isPickmode","nyamEditorTaskType","nyams","markers","setPickCoord","values","setMap","setMarkersVisible","setCursor","listener","Event","coord","removeListener","findIndex","nyam","MapsWrap","onLoad","initNaverMaps","dest","getVisible","Footer","FooterWrap","Group","Item","App","notification","duration","AppWrap","cursor","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6efcc565.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/UpdateNoteRaw.7146b144.md\";","// imported Modules =============================================\nimport React, { useEffect, useState } from 'react';\nimport { Modal } from \"antd\";\nimport styled from 'styled-components';\nimport ReactMarkdown from 'react-markdown';\n\n// imported components ==========================================\n// *\n\n// Main Component ===============================================\nimport mdSource from \"./UpdateNoteRaw.md\";\n\nexport default function UpdateNote({ updateNoteModalVisible, setUpdateNoteModalVisible}) {\n    const [markdown, setMarkdown] = useState('');\n\n    useEffect( () => {\n        async function init() {\n            const str = await fetch(mdSource)\n            .then( res => res.text() );\n\n            setMarkdown(str);\n        }\n        init();\n    }, [markdown]);\n\n    return (\n        <UpdateNoteWrap className=\"UpdateNote\">\n            <Modal\n                title={\"업데이트 노트\"}\n                visible={updateNoteModalVisible}\n                onCancel={() => { setUpdateNoteModalVisible(false) }}\n                footer={null}\n                style={{minWidth:\"50%\"}}\n            >\n                <ReactMarkdown children={markdown} />\n            </Modal>\n        </UpdateNoteWrap>\n    );\n}\n\n// style ========================================================\nconst UpdateNoteWrap = styled.div`\n\n    `;\n\n// function =====================================================\n// *","// [경고] 임시적인 사용자설정 보관소 - 나중에 다른 방법으로 대체필요\nexport default function DataStorage (key) {\n    const data = {\n        NYAM_TYPES : {\n            korea : \"한식\",\n            china : \"중식\",\n            japan : \"일식\",\n            asian : \"아시안\",\n            schoolfood : \"분식\",\n            fastfood : \"패스트푸드\",\n            cafe : \"카페\",\n            bakery : \"베이커리\",\n            pub : \"술집\",\n            cvs : \"편의점\",\n        }, \n        NYAM_TYPES_KEY : [\"korea\", \"china\", \"japan\", \"fastfood\", \"cvs\", \"cafe\", \"asian\", \"schoolfood\", \"bakery\", \"pub\"],\n        CONTENT_SOURCE : \"https://script.google.com/macros/s/AKfycbwpvR56TiSzf5Rejfz9eqEm_QbvKTnu8b2m40grhbCWbNhycWsij8j3WtNY_P47-0mz/exec\",\n        MAP_SOURCE: \"https://openapi.map.naver.com/openapi/v3/maps.js?ncpClientId=ont9t74d67\",\n    }\n\n    return data[key];\n}","// imported Modules =============================================\nimport { React, useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Checkbox, Popover, Button, Tooltip } from \"antd\";\nimport { FilterOutlined, PlusOutlined, BookOutlined } from \"@ant-design/icons\"\nimport 'antd/dist/antd.css';\n\n// imported Components ==========================================\nimport UpdateNote from \"./UpdateNote\";\n\n/* ******************************************* */\n// [경고] 임시적인 사용자설정 보관소 - 나중에 다른 방법으로 대체필요\nimport DataStorage from \"../../../DataStorage\"; \nconst NYAM_TYPES = DataStorage(\"NYAM_TYPES\");\nconst NYAM_TYPES_KEY = DataStorage(\"NYAM_TYPES_KEY\");\n// [경고] 임시적인 사용자설정 보관소 - 나중에 다른 방법으로 대체필요\n/* ******************************************* */\n\n// Main Component ===============================================\nexport default function Tools ({ setFilters, setIsPickmode, setNyamEditorTaskType }) {\n    const [checked, setChecked] = useState( initChecked(NYAM_TYPES_KEY) );\n    const [updateNoteModalVisible, setUpdateNoteModalVisible] = useState(false);\n\n    useEffect ( () => { \n        setFilters(checked); \n    }, [checked, setFilters]);\n\n    function onChange(e) { setChecked({ ...checked, [e.target.nyamType] : e.target.checked }) }\n\n    return (\n        <ToolsWrap className=\"Tools\">\n            <div className=\"LeftDiv\">\n                {/* 냠 필터링 */}\n                <Popover placement=\"bottom\" title={\"냠 필터링\"} content={filterContent(onChange, checked)} trigger=\"click\">\n                    <Tooltip title=\"냠 필터링\" placement=\"left\">\n                        <MenuButton shape=\"circle\" icon={<FilterOutlined />} />\n                    </Tooltip>\n                </Popover>\n\n                {/* 새로운 냠 */}\n                <Popover placement=\"bottom\" title={\"새로운 냠 만들기\"} content={createNyamContent} trigger=\"click\">\n                    <Tooltip title=\"새로운 냠\" placement=\"right\">\n                        <MenuButton shape=\"circle\" icon={<PlusOutlined />} style={{marginLeft:\"8px\"}} \n                            onClick={ () => { \n                                setNyamEditorTaskType(\"create\"); \n                                setIsPickmode(true); \n                            }} \n                        />\n                    </Tooltip>\n                </Popover>\n            </div>\n\n            <div className=\"RightDiv\" style={{marginLeft:\"auto\"}} >\n                <Tooltip title=\"업데이트 노트\" placement=\"right\">\n                    <MenuButton shape=\"circle\" icon={<BookOutlined />}  onClick={ () => { setUpdateNoteModalVisible(true); }} />\n                    <UpdateNote updateNoteModalVisible={updateNoteModalVisible} setUpdateNoteModalVisible={setUpdateNoteModalVisible} />\n                </Tooltip>\n            </div>\n        </ToolsWrap>\n    );\n}\n\nfunction filterContent(onChange, checked) {\n    return (\n        <div className=\"filterContent\" styld={{display:\"flex\", flexDirection:\"column\"}}>\n        {\n            NYAM_TYPES_KEY.map( (type, index) => (\n                <div key={index}><Checkbox onChange={onChange} checked={checked[type]} nyamType={type}>{NYAM_TYPES[type]}</Checkbox></div>\n            ))\n        }\n        </div>\n    )\n}\n\nconst createNyamContent = (\n    <div>\n        <p style={{margin:\"0\"}}><strong>지도에서 새로운 남의 위치를 찍어주세요</strong></p>\n        {/* <p style={{margin:\"0\"}}>버튼을 다시누르면 '새로운 냠 만들기'가 취소됩니다</p> */}\n    </div>\n);\n    \n// style ========================================================\nconst ToolsWrap = styled.div`\n    display : flex;\n    flex : 1;\n\n    justify-contents : center;\n    align-items : center;\n\n    padding : 10px 10px;\n\n    background-color : #333333;\n    color : #FFFFFF;\n    `;\n\nconst MenuButton = styled(Button)`\n    border : 0;\n    `;\n\n// function =====================================================\nfunction initChecked(arr) {\n    let obj = {};\n    arr.forEach( el => {\n        obj[el] = true;\n    });\n\n    return obj;\n}","// imported Modules =============================================\nimport { React } from 'react';\nimport styled from 'styled-components';\n\n// imported components ==========================================\nimport Tools from \"./followers/Tools\";\n\n// Main Component ===============================================\nexport default function Header ({ setFilters, setIsPickmode, setNyamEditorTaskType }) {\n    return (\n        <HeaderWrap className=\"Header\">\n            <Logo>냠냠랩(TEST)</Logo>\n            <Tools setFilters={setFilters} setIsPickmode={setIsPickmode} setNyamEditorTaskType={setNyamEditorTaskType} />\n        </HeaderWrap>\n    );\n}\n\n// style ========================================================\nconst HeaderWrap = styled.div`\n    display : flex;\n    align-items : center;\n\n    padding : 10px 0px;\n\n    background-color : #333333;\n    color : #FFFFFF;\n    `;\n\nconst Logo = styled.h1`\n    margin : 0;\n    padding : 10px 20px;\n    color : #FFFFFF;\n    font-family: 'Poor Story', cursive;\n    `;\n\n// function =====================================================\n// *","// imported Modules =============================================\nimport React from 'react';\nimport styled from 'styled-components';\n\n// imported components ==========================================\n// *\n\n// Main Component ===============================================\nexport default function ContentsTable({ desc, dataOrder, data }) {\n    // desc (문자열 Array) : thead에 표시할 텍스트를 차례로 나열한 문자열 배열\n    // dataOrder (객체 Array) : tbody의 각 row에서 [data]객체의 요소를 표시할 순서를 나열한 문자열 배열 \n    // data (객체 Array) : 원본데이터\n\n    return (\n        <ContentsTableWrap className=\"ContentsTable\">\n            <Table>\n                <tbody>\n                    <Row style={{borderWidth:\"2px\"}}>\n                    {\n                        desc.map( (el, index) => (\n                            <Th key={index}>{ el }</Th>\n                        ))\n                    }\n                    </Row>\n                </tbody>\n                \n                <tbody>\n                {\n                    data.map( (rowItem,index) => (\n                        <Row key={index}>\n                        {\n                            dataOrder.map( (colItem, index) => (\n                                <Td key={index}>{ rowItem[colItem] }</Td>\n                            ))\n                        }\n                        </Row>\n                    ))\n                }\n                </tbody>\n            </Table>\n        </ContentsTableWrap>\n    );\n}\n\n// style ========================================================\n//const SPACE = \"4px\";\nconst CELL_PADDING = \"8px\";\nconst BORDER_COLOR = \"#dbdbdb\";\n\nconst ContentsTableWrap = styled.div`\n    width : 100%;\n    border : 1px solid ${BORDER_COLOR};\n    border-bottom : 12px solid ${BORDER_COLOR};\n    border-radius : 8px;\n    `;\n\nconst Table = styled.table`\n    width : 100%;\n    text-align : center;\n    `;\n\nconst Row = styled.tr`\n    padding : ${CELL_PADDING};\n    border-bottom : 1px solid ${BORDER_COLOR};\n    `;\n\nconst Th = styled.th`\n    padding : ${CELL_PADDING};\n    `;\n\nconst Td = styled.td`\n    padding : ${CELL_PADDING};\n    `;\n// function =====================================================\n// *\n\n                ","// imported Modules =============================================\nimport { React, useState } from 'react';\nimport styled from 'styled-components';\n\nimport { Popover, Button } from \"antd\"\nimport { DeleteOutlined } from \"@ant-design/icons\"\n\n// imported components ==========================================\n// *\n\n// Main Component ===============================================\nconst POPOVER_TITLE = \"정말로 지울까요?\";\n\nexport default function DeleteBtn({ setDeleteConfirm }) {\n    const [visible, setVisible] = useState(false);\n\n    const formContent = (\n        <div className=\"confirmContent\" style={{ display: \"flex\", justifyContent: \"center\" }}>\n            <Button onClick={onConfirm} type=\"primary\" style={{ marginRight: \"4px\" }}>네</Button>\n            <Button onClick={onCancle}>아니요</Button>\n        </div>\n    );\n\n    function onConfirm() {\n        setDeleteConfirm(true);\n        setVisible(false);\n    }\n\n    function onCancle() {\n        setVisible(false);\n    }\n\n    return (\n        <DeleteBtnWrap className=\"DeleteBtn\">\n            <Popover\n                trigger=\"click\" visible={visible} onVisibleChange={(visible)=>{setVisible(visible)}}\n                placement=\"right\" title={POPOVER_TITLE} content={formContent} onClick={(e) => { setVisible(true); }}\n            >\n                <Button shape=\"circle\" icon={<DeleteOutlined />} />\n            </Popover>\n        </DeleteBtnWrap>\n    );\n}\n\n// style ========================================================\nconst DeleteBtnWrap = styled.div`\n\n    `;\n\n// function =====================================================\n// *","// imported Modules =============================================\nimport React, {useState, useEffect} from 'react';\nimport axios from \"axios\";\n\nimport styled from 'styled-components';\nimport { Button, message, Tooltip } from \"antd\";\nimport { FormOutlined, DeleteOutlined, QuestionCircleOutlined } from \"@ant-design/icons\"\n\n// imported components ==========================================\nimport ContentsTable from \"../../atoms/ContentsTable\";\nimport DeleteBtn from \"../../atoms/DeleteBtn\";\n\n// Main Component ===============================================\nexport default function MapsModalInfo({ nyamListSource, selectedNyam, refreshMaps, setIsLoading, setMapsModalVisible, setNyamEditorModalVisible, setNyamEditorTaskType }) {\n    const [deleteConfirm, setDeleteConfirm] = useState(false);\n    const { open, close, description, menu } = selectedNyam;\n    const parsedMenu = JSON.parse(menu).menu;\n\n    useEffect( () => {\n        if(deleteConfirm === true){\n            onDelete();\n            setDeleteConfirm(false);\n        }\n    }, [deleteConfirm]);\n\n    async function onDelete() {\n        setIsLoading(true);\n\n        const url = `${nyamListSource}?taskTarget=nyam&taskType=delete`;\n        const data = JSON.stringify(selectedNyam);\n\n        await axios.post(url, data);\n\n        await refreshMaps();\n        setMapsModalVisible(false);\n        setIsLoading(false);\n\n        message.success(\"냠이 역사의 뒤안길로 사라졌습니다\");\n    }\n\n    function openNyamEditor(e) {\n        setNyamEditorTaskType(\"edit\"); \n        setMapsModalVisible(false); \n        setNyamEditorModalVisible(true);\n    }\n\n    return (\n        <MapsModalInfoWrap className=\"MapsModalInfo\">\n            {/* 우측 상단 도구 */}\n            <Tools>\n                <a href={`https://map.naver.com/v5/search/${removeSpace(selectedNyam.name)}`} target=\"_blank\" rel=\"noreferrer\">\n                    <Tooltip title=\"네이버지도\" placement=\"top\">\n                        <Button shape=\"circle\" icon={<QuestionCircleOutlined />} size=\"normal\" style={{ marginRight: SPACE }} />\n                    </Tooltip>\n                </a>\n                <Tooltip title=\"수정\" placement=\"top\">\n                    <Button shape=\"circle\" icon={<FormOutlined />} size=\"normal\" style={{ marginRight: SPACE }} onClick={openNyamEditor} />\n                \n                </Tooltip>\n                \n                <Tooltip title=\"삭제\" placement=\"top\">\n                    <DeleteBtn setDeleteConfirm={setDeleteConfirm} />\n                    {/* <Button shape=\"circle\" icon={<DeleteOutlined />} size=\"normal\" onClick={(e) => { onDelete(); }} /> */}\n                </Tooltip>\n            </Tools>\n\n            {/* 개요 */}\n            <Summary>\n                <div>\n                    <Title>영업시간</Title>\n                    <p>{open}~{close}</p>\n                </div>\n                <p style={{ marginLeft: \"8px\" }}>{description}</p>\n            </Summary>\n\n            {/* 메뉴목록 */}\n            <ContentsTable desc={[\"메뉴\", \"가격\"]} dataOrder={[\"name\", \"price\"]} data={parsedMenu} />\n        </MapsModalInfoWrap>\n    );\n}\n\n// style ========================================================\nconst SPACE = \"4px\";\n\nconst MapsModalInfoWrap = styled.div`\n    display : flex;\n    flex-direction : column;\n\n    flex : 1;\n    margin-right : ${\"8px\"}; \n\n    @media(max-width : 768px){\n        margin-right : 0;\n        margin-bottom : 8px;\n    }\n    `;\nconst Tools = styled.div`\n    display : flex;\n    justify-content : flex-end;\n    margin-bottom : ${SPACE};\n    `;\n\nconst Summary = styled.div`\n    display : flex;\n    `;\n\nconst Title = styled.p`\n    margin : 0;\n    font-weight : bold;\n    `;\n\n// function =====================================================\nfunction removeSpace(string) {\n    const str = string.split(' ').join('');\n    return str;\n}","// imported Modules =============================================\nimport React, {useState, useEffect} from 'react';\nimport styled from 'styled-components';\n\n// imported Components \nimport DeleteBtn from \"../../atoms/DeleteBtn\";\n\n// Main Component ===============================================\nexport default function Comment ({ index, content, onDelete }) {\n    const [deleteConfirm, setDeleteConfirm] = useState(false);\n    useEffect( () => {\n        if(deleteConfirm === true){\n            onDelete(index);\n            setDeleteConfirm(false);\n        }\n    }, [deleteConfirm]);\n\n    return (\n        <CommentWrap className=\"Comment\">\n            <Content>{content}</Content>\n            <DeleteBtn setDeleteConfirm={setDeleteConfirm} />\n        </CommentWrap>\n    );\n}\n\n// style ========================================================\nconst SPACE = \"4px\";\n\nconst CommentWrap = styled.div`\n    display : flex;\n    justify-content : flex-end;\n\n    margin-top : ${SPACE};\n    `;\n\nconst Content = styled.p`\n    padding : ${SPACE};\n    border : 1px solid #DCDCDC;\n    border-radius : 8px;\n    margin : 0;\n    max-width : 100%;\n    margin-right : ${SPACE};\n    \n    word-break: break-all;\n    overflow-wrap: break-word;\n    `;\n\n// function =====================================================\n// *","// imported Modules =============================================\nimport React, { useCallback, useState } from 'react';\nimport axios from \"axios\";\n\nimport styled from 'styled-components';\n\nimport { Button, Tooltip, Input, Popover, message } from \"antd\";\nimport { EditOutlined, SmileOutlined } from \"@ant-design/icons\"\n\nimport Picker from 'emoji-picker-react';\n\n// imported components ==========================================\nimport Comment from \"./Comment\";\n\n// Main Component ===============================================\nexport default function MapsModalComment({ nyamListSource, selectedNyam, refreshMaps, setIsLoading }) {\n    const [newComment, setNewComment] = useState('');\n    const commentsData = JSON.parse(selectedNyam.comment).comment;\n\n    async function onCreate(e) {\n        setIsLoading(true);\n\n        // 검증\n        if (newComment == null || newComment === '') {\n            setIsLoading(false);\n            return;\n        }\n\n        // 요청 데이터 준비`\n        const url = `${nyamListSource}?taskTarget=comment&taskType=edit`;\n        const data = JSON.stringify({\n            id: selectedNyam.id,\n            comment: JSON.stringify({ comment: [newComment, ...commentsData] })\n        });\n\n        // 요청\n        //console.log(data);\n        await axios.post(url, data);\n\n        // 리프레시\n        await refreshMaps();\n        setNewComment('');\n        message.success(\"의견이 작성되었습니다\")\n        setIsLoading(false);\n    }\n\n    const onDelete = useCallback(async (index) => {\n        setIsLoading(true);\n\n        // 요청 데이터 준비\n        const url = `${nyamListSource}?taskTarget=comment&taskType=edit`;\n        const data = JSON.stringify({\n            id: selectedNyam.id,\n            comment: JSON.stringify({ comment: [...commentsData.slice(0, index), ...commentsData.slice(index + 1)] })\n        });\n\n        // 요청\n        //console.log(data);\n        await axios.post(url, data);\n\n        // 리프레시\n        await refreshMaps();\n        message.success(\"의견이 삭제되었습니다\")\n        setIsLoading(false);\n    }, [nyamListSource, selectedNyam, commentsData, setIsLoading, refreshMaps]);\n\n    return (\n        <MapsModalCommentWrap className=\"MapsModalComment\">\n            <Form>\n                <Input \n                    placeholder=\"새로운 의견을 적어주세요\" \n                    value={newComment} onChange={(e) => { setNewComment(e.target.value); }} \n                    style={{ borderRadius: \"8px\", marginRight: \"4px\" }} \n                    suffix={\n                        <Popover placement=\"bottom\" title={null} content={<Picker onEmojiClick={(e,obj) => {setNewComment(newComment+obj.emoji)}} />} trigger=\"click\">\n                            <Tooltip title=\"이모지\" placement=\"top\">\n                                <SmileOutlined />\n                            </Tooltip>\n                        </Popover>\n                    }\n                />\n                \n                <Tooltip className=\"deleteComment\" title=\"쓰기\" placement=\"right\">\n                    <Button type=\"primary\" shape=\"circle\" icon={<EditOutlined />} size=\"normal\" onClick={onCreate} />\n                </Tooltip>\n            </Form>\n\n            <Comments>\n                {\n                    commentsData.map((item, index) => (\n                        <Comment key={index} index={index} content={item} onDelete={onDelete} />\n                    ))\n                }\n            </Comments>\n        </MapsModalCommentWrap>\n    );\n}\n\n// style ========================================================\nconst BORDER_COLOR = \"#dbdbdb\";\n\nconst MapsModalCommentWrap = styled.div`\n    display : flex;\n    flex-direction : column;\n\n    width : 40%;\n\n    margin-left : auto;\n    padding : 16px;\n\n    border : 1px solid ${BORDER_COLOR};\n    border-bottom : 12px solid ${BORDER_COLOR};\n    border-radius : 8px;\n\n    @media(max-width : 768px){\n        width : 100%;\n    }\n    `;\n\n const Form = styled.div`\n    display :flex;\n    align-items : center;\n    `;\n\nconst Comments = styled.div`\n    display : flex;\n    flex-direction : column;\n    align-content : flex-end;\n    justify-content : flex-start;\n\n    height : 100%;\n\n    overflow-y: auto;\n    `;\n\n// function =====================================================\n// *","// imported Modules =============================================\nimport { React } from \"react\";\n\nimport styled from \"styled-components\";\nimport { Spin } from 'antd';\nimport { LoadingOutlined } from '@ant-design/icons';\nimport 'antd/dist/antd.css';\n\n// Main Component ===============================================\nexport default function Loading ({ isLoading }) {\n    \n    if ( isLoading ){\n        return (\n            <LoadingWrap className=\"Loading\">\n                <Backdrop></Backdrop>\n                <Spin spinning={isLoading} size=\"large\" indicator={<LoadingOutlined style={{ fontSize: 64 }} spin />} />\n            </LoadingWrap>\n        );\n    } else {\n        return <div className=\"Loading\"></div>;\n    }\n   \n}\n\n// style ========================================================\nconst LoadingWrap = styled.div`\n    position : fixed;\n    top : 0; \n    left : 0;\n\n    display : flex;\n    justify-content : center;\n    align-items : center;\n\n    width : 100%; \n    height : 100%;\n    `;\n\nconst Backdrop = styled.div`\n    position : fixed;\n    top : 0; \n    left : 0;\n\n    width : 100%;\n    height : 100%;\n\n    background-color : rgba(0,0,0, 0.75);\n    `;","// imported Modules =============================================\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\n\nimport { Modal } from 'antd';\n\n// imported components ==========================================\nimport MapsModalInfo from \"../followers/MapsModalInfo\";\nimport MapsModalComment from \"../followers/MapsModalComment\";\nimport Loading from \"../../atoms/Loading\";\n\n// Main Component ===============================================\nexport default function MapsModal ({nyamListSource, selectedNyam, refreshMaps, mapsModalVisible, setMapsModalVisible, setNyamEditorModalVisible, setNyamEditorTaskType}) {\n    const [ isLoading, setIsLoading ] = useState(false);\n\n    return (\n        selectedNyam != null\n            ?\n                <MapsModalWrap className=\"MapsModal\">\n                    <StyledModal\n                        title={selectedNyam.name}\n                        visible={mapsModalVisible}\n                        onCancel={() => { setMapsModalVisible(false) }}\n                        footer={null}\n                    >\n                        <ModalContentsWrap>\n                            <MapsModalInfo \n                                nyamListSource={nyamListSource} selectedNyam={selectedNyam} refreshMaps={refreshMaps} \n                                setIsLoading={setIsLoading} setMapsModalVisible={setMapsModalVisible} setNyamEditorModalVisible={setNyamEditorModalVisible} setNyamEditorTaskType={setNyamEditorTaskType}\n                            />\n                            <MapsModalComment nyamListSource={nyamListSource} selectedNyam={selectedNyam} refreshMaps={refreshMaps} setIsLoading={setIsLoading} />\n                        </ModalContentsWrap>\n\n                        <Loading isLoading={isLoading} />\n                    </StyledModal>\n                </MapsModalWrap>\n    \n            :   \n                <div></div>\n    );\n}\n\n// style ========================================================\nconst MapsModalWrap = styled.div`\n\n    `;\n\nconst ModalContentsWrap = styled.div`\n    display : flex;\n\n    @media(max-width : 768px){\n        flex-direction : column;\n    }\n`;\nconst StyledModal = styled(Modal)`\n    min-width : 50%;\n`;\n// function =====================================================\n// *","// imported Modules =============================================\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport styled from \"styled-components\";\nimport axios from \"axios\";\nimport moment from \"moment\";\n\nimport { Modal, Input, TimePicker, Button, Divider, Select, message } from 'antd';\nimport { PlusOutlined, MinusOutlined } from \"@ant-design/icons\"\n\n// imported components\nimport Loading from \"../../atoms/Loading\";\n\n// Main Component ===============================================\nimport DataStorage from \"../../../DataStorage\";\nconst NYAM_TYPES = DataStorage(\"NYAM_TYPES\");\nconst NYAM_TYPES_KEY = DataStorage(\"NYAM_TYPES_KEY\");\nconst NYAM_LIST_SOURCE = DataStorage(\"CONTENT_SOURCE\");\n\nconst SUMMARY_INIT_VALUE = { name: null, description: null, open: null, close: null, type: null, lat: null, lng: null, comment: null };\nconst MENUITEM_INIT_VALUE = [{ name: '', price: '' }];\n\nexport default function NyamEditor({ taskType, pickCoord, defaultNyamValue, refreshMaps, nyamEditorModalVisible, setNyamEditorModalVisible, setIsPickmode, setMapsModalVisible }) {\n    const [isLoading, setIsLoading] = useState(false);\n    const [resetLock, setResetLock] = useState(false); // 냠에디터를 닫았다 열었을 때, selectedNyam의 내용으로 초기화시킬지. ( false : 초기화함, true : 초기화 안함, null : 폼 업데이트됨 )\n\n    const [summary, setSummary] = useState(SUMMARY_INIT_VALUE);\n    const [menuItems, setMenuItems] = useState(MENUITEM_INIT_VALUE);\n\n    const title = (taskType === \"create\" ? \"새로운 냠 만들기\" : \"냠 수정하기\");\n\n    const initFormData = useCallback(() => {\n        if (taskType === \"edit\" && defaultNyamValue != null) {\n            // apply default value to \"summary\"\n            const tempSummary = { ...defaultNyamValue };\n            delete tempSummary.menu;\n            setSummary(tempSummary);\n\n            // apply default value to \"menuItems\"\n            let tempMenuItems = [];\n            tempMenuItems = (JSON.parse(defaultNyamValue.menu)).menu;\n            setMenuItems(tempMenuItems);\n\n        } else if (taskType === \"create\") {\n            setSummary({ ...SUMMARY_INIT_VALUE, lat: pickCoord.y, lng: pickCoord.x, comment: JSON.stringify({ \"comment\": [] }) });\n            setMenuItems(MENUITEM_INIT_VALUE)\n        }\n\n        setResetLock(null);\n    }, [defaultNyamValue, taskType, pickCoord]);\n\n    // 폼 초기값 지정.\n    useEffect(() => {\n        if (resetLock === false && nyamEditorModalVisible === true) {\n            initFormData();\n            setResetLock(null);\n        }\n    }, [resetLock, nyamEditorModalVisible, initFormData]);\n\n    // 좌표 수정 업데이트.\n    useEffect(() => {\n        if (nyamEditorModalVisible === true && resetLock === true) {\n            setSummary({ ...summary, lat: pickCoord.y, lng: pickCoord.x });\n            setResetLock(null);\n        }\n\n    }, [pickCoord, nyamEditorModalVisible, resetLock, summary])\n\n\n\n    // about onChange\n    function onChangeSummary(target, value) {\n        setSummary({ ...summary, [target]: value });\n    }\n    function onChangeMenuItems(index, type, value) {\n        setMenuItems([...menuItems.slice(0, index), { ...menuItems[index], [type]: value }, ...menuItems.slice(index + 1)]);\n    }\n\n    // add/remove menu item\n    function addNewMenuItem(index) { setMenuItems([...menuItems.slice(0, index), { name: '', price: '' }, ...menuItems.slice(index)]) }\n    function removeMenuItem(index) { setMenuItems([...menuItems.slice(0, index), ...menuItems.slice(index + 1)]); }\n\n    // about footer buttons.\n    function clearAll(e) {\n        const summaryReplace = {...SUMMARY_INIT_VALUE, id:summary.id, lat:summary.lat, lng:summary.lng, comment:summary.comment};\n\n        setSummary(summaryReplace);\n        setMenuItems(MENUITEM_INIT_VALUE);\n    }\n\n    async function onSubmit(e) {\n        setIsLoading(true);\n\n        const data = {};\n        Object.assign(data, summary);\n\n        // 검증\n        for (let property of Object.keys(data)) {\n            if (data[property] === null || data[property] === \"\") {\n                message.warning(\"비어있는 정보를 채워넣어주세요!\");\n                setIsLoading(false);\n                return;\n            }\n        }\n\n        for (let item of menuItems) {\n            if (item.name === '' || item.price === '') {\n                message.warning(\"비어있는 정보를 채워넣어주세요!\");\n                setIsLoading(false);\n                return;\n            }\n        }\n\n        // 요청 데이터 준비\n        Object.assign(data, { \"menu\": JSON.stringify({ \"menu\": menuItems }) });\n\n        try {\n            // 요청\n            const strData = JSON.stringify(data);\n            const url = `${NYAM_LIST_SOURCE}?taskTarget=nyam&taskType=${taskType}`;\n            await axios.post(url, strData);\n\n            // 리프레시\n            await refreshMaps();\n            setNyamEditorModalVisible(false);\n            setResetLock(false);\n            setIsLoading(false);\n\n            // 완료메시지\n            if (taskType === \"create\") { message.success(\"새로운 냠을 만들었습니다!\"); }\n            else if (taskType === \"edit\") { message.success(\"냠이 수정되었습니다!\"); }\n        } catch (err) {\n            setIsLoading(false);\n            console.error(err);\n            message.error(\"앗, 뭔가 잘못됐습니다. 다시 시도해주세요\", 2.0);\n        }\n    }\n\n    function onClose(e) {\n        setNyamEditorModalVisible(false);\n        setResetLock(false);\n        if (taskType === \"edit\") {\n            setMapsModalVisible(true);\n        }\n    }\n\n    function onCoordEdit(e) {\n        message.info(\"냠의 새로운 위치를 정해주세요\", 5);\n        setResetLock(true);\n        setNyamEditorModalVisible(false);\n        setIsPickmode(true);\n    }\n\n    return (\n        <NyamEditorWrap className=\"NyamEditor\">\n            <Modal\n                title={title}\n                visible={nyamEditorModalVisible}\n                onCancel={onClose}\n                footer={null}\n            >\n                <SummaryWrap>\n                    <Divider>개요</Divider>\n\n                    <Coord>\n                        <span style={{ marginRight: \"8px\", textAlign: \"center\" }}>{`위도 ${summary.lat}`}</span>\n                        <span style={{ marginRight: \"8px\", textAlign: \"center\" }}>{`경도 ${summary.lng}`}</span>\n                        <Button onClick={onCoordEdit} >위치 수정</Button>\n                    </Coord>\n\n                    <StyledInput name=\"name\" placeholder=\"가게 이름\" value={summary.name} onChange={(e) => { onChangeSummary(e.target.name, e.target.value) }} />\n                    <StyledInput name=\"description\" placeholder=\"설명\" value={summary.description} onChange={(e) => { onChangeSummary(e.target.name, e.target.value) }} />\n\n                    <TimePickersWrap>\n                        <TimePicker\n                            name=\"openTime\" format=\"HH:mm\" placeholder=\"문 여는 시간\" value={summary.open ? moment(summary.open, \"HH:mm\") : null}\n                            onChange={(time, timeString) => { onChangeSummary(\"open\", timeString); }} style={{ flexGrow: \"1\", marginRight: SPACE }}\n                            minuteStep={5}\n                        />\n                        <TimePicker\n                            name=\"closeTime\" format=\"HH:mm\" placeholder=\"문 닫는 시간\" value={summary.close ? moment(summary.close, \"HH:mm\") : null}\n                            onChange={(time, timeString) => { onChangeSummary(\"close\", timeString); }} style={{ flexGrow: \"1\" }}\n                            minuteStep={5}\n                        />\n                    </TimePickersWrap>\n\n                    <Select placeholder=\"유형을 골라주세요\" value={summary.type} onChange={(value) => { onChangeSummary(\"type\", value); }}>\n                        {NYAM_TYPES_KEY.map((key, index) => (<Select.Option value={key} key={index}>{NYAM_TYPES[key]}</Select.Option>))}\n                    </Select>\n                </SummaryWrap>\n\n                <MenusWrap>\n                    <Divider>메뉴</Divider>\n\n                    {menuItems.map((item, index) => MenuItem(index, item.name, item.price, addNewMenuItem, removeMenuItem, onChangeMenuItems))}\n                    <StyledButton shape=\"circle\" icon={<PlusOutlined />} style={{}} onClick={(e) => { addNewMenuItem(menuItems.length) }} />\n\n                    <Divider />\n                </MenusWrap>\n\n                <ButtonsWrap>\n                    <Button type=\"link\" onClick={clearAll}>모두 지우기</Button>\n                    <Button onClick={onSubmit} style={{ marginLeft: \"auto\" }}>저장</Button>\n                </ButtonsWrap>\n\n                <Loading isLoading={isLoading} />\n            </Modal>\n        </NyamEditorWrap>\n    );\n}\n\n// style ========================================================\nconst SPACE = \"4px\";\n\n// -- antd redefined style\nconst StyledInput = styled(Input)`\n    margin-bottom : ${SPACE};\n    `;\n\nconst StyledButton = styled(Button)`\n    margin-right : ${SPACE};\n    `;\n\n// -- user defined style\nconst NyamEditorWrap = styled.div``;\n\nconst SummaryWrap = styled.div`\n    display : flex;\n    flex-direction : column;\n    align-items : stretch;\n    `;\n\nconst Coord = styled.div`\n    display : flex;\n    justify-content : flex-end;\n    align-items : center;\n\n    margin-bottom : ${SPACE}\n    `;\n\nconst TimePickersWrap = styled.div`\n    display : flex;\n    margin-bottom : ${SPACE}\n    `;\n\nconst MenusWrap = styled.div``;\n\nconst MenuItemWrap = styled.div`\n    display : flex;\n    `;\n\nconst ButtonsWrap = styled.div`\n    display : flex;\n    `;\n\n// function =====================================================\n// *\n\n// 유사 컴포넌트 ================================================\nfunction MenuItem(index, name, price, addNewMenuItem, removeMenuItem, onChangeMenuItems) {\n    return (\n        <MenuItemWrap key={index}>\n            <StyledButton shape=\"circle\" icon={<PlusOutlined />} style={{}} onClick={(e) => { addNewMenuItem(index); }} />\n            <StyledButton shape=\"circle\" icon={<MinusOutlined />} onClick={(e) => { removeMenuItem(index) }} />\n\n            <StyledInput placeholder=\"메뉴 이름\" value={name} style={{ marginRight: SPACE }} onChange={(e) => { onChangeMenuItems(index, \"name\", e.target.value); }} />\n            <StyledInput placeholder=\"메뉴 가격\" value={price} onChange={(e) => { onChangeMenuItems(index, \"price\", e.target.value); }} />\n        </MenuItemWrap>\n    )\n}\n","export default function naverMapsinit(setting) {\n    const { lat, lng, zoom } = setting;\n    \n    const mapOptions = {\n        center: new window.naver.maps.LatLng(lat, lng),\n        zoom: zoom,\n    };\n    const map = new window.naver.maps.Map(\"map\", mapOptions);\n\n    return map;\n}","import axios from \"axios\";\nimport { message } from \"antd\";\n\nexport default async function readContents(src) {\n    try {\n        const { data } = await axios.get(src);\n        console.log(data);\n        return { \n            rawNyamList : data.nyamList,\n            setting : data.setting[0],\n        };\n    } catch (e) {\n        message.error(\"문제가 생겨 데이터를 받아오지 못했습니다. 새로고침을 시도해주세요\", 0);\n        return;\n    }\n}","import { message } from \"antd\";\n\nexport default function createNyamMarkers (map, nyamTypes, nyamList, setMarkers, setNyams, setMapsModalVisible, setSelectedNyam) {\n    // initialize temp variable for states\n    const tempNyams = initWithNyamtype(nyamTypes);\n    const tempMarkers = initWithNyamtype(nyamTypes);\n    \n    // create markers\n    try {\n        nyamList.forEach( item => { \n            const marker = new window.naver.maps.Marker({\n                position : new window.naver.maps.LatLng(item.lat, item.lng),\n                map : map,\n                icon : {\n                    content: [\n                        '<div>',\n                            '<div style=\"background-color:rgba(255,255,255,0.8); padding:5px; border-radius:16px; border:1px solid #d9d9d9;\">',\n                                `<span style=\"white-space:nowrap;\">${item.name}</span>`,\n                            '</div>',\n                            `<img src=\"img/icons/svg/${item.type}.svg\">`,\n                        '</div>'\n                    ].join(''),\n    \n                    anchor: new window.naver.maps.Point(16, 48),\n                }\n            });\n    \n            marker.addListener(\"click\", (e) => {\n                const targetid = e.overlay[\"_nmarker_id\"];\n                const types = nyamTypes;\n    \n                for( let i = 0; i<types.length; i++){\n                    const type = types[i];\n                    let chk = false;\n                    for( let j=0; j<tempMarkers[type].length; j++ ){\n                        if ( targetid === tempMarkers[type][j][\"_nmarker_id\"] ){\n                            setSelectedNyam(tempNyams[type][j]);\n                            setMapsModalVisible(true);\n                            chk = true;\n                            break;\n                        }\n                    }\n                    if (chk) { break; }\n                }\n            });\n    \n            tempNyams[item.type].push(item);\n            tempMarkers[item.type].push(marker);\n        });\n\n        setNyams(tempNyams);\n        setMarkers(tempMarkers);\n    } catch(err) {\n        console.error(err);\n        console.error(nyamList);\n        message.error(\"데이터를 표시하는 과정에 문제가 생겼습니다. 새로고침을 시도해주세요\", 0);\n    }\n}\n\n\nfunction initWithNyamtype (types) {\n    let obj = {};\n    types.forEach( category => {\n        obj[category] = [];\n    });\n\n    return obj;\n}","export default function createCenterMarker(map, setting) {\n    const { lat, lng } = setting;\n\n    const marker = new window.naver.maps.Marker({\n        position: new window.naver.maps.LatLng(lat, lng),\n        map: map,\n        icon: {\n          url : `img/icons/svg/center.svg`,\n          size: new window.naver.maps.Size(48, 48),\n          origin: new window.naver.maps.Point(0, 0),\n        }\n    });\n\n    return 0;\n}","// imported Modules =============================================\nimport { React, useState, useEffect } from \"react\";\nimport ScriptTag from \"react-script-tag\";\nimport styled from \"styled-components\";\n\n// imported components ==========================================\nimport MapsModal from \"./leaders/MapsModal\";\nimport NyamEditor from \"./followers/NyamEditor\";\nimport Loading from \"../atoms/Loading\";\n\n// imported supporters\nimport DataStorage from \"../../DataStorage\";\nimport initNaverMaps from \"../supporters/initNaverMaps\";\nimport readContents from \"../supporters/readContents\";\nimport createNyamMarkers from \"../supporters/createNyamMarkers\";\nimport createCenterMarker from \"../supporters/createCenterMarker\";\n\n// Main Component ===============================================\nlet map = null; // naver maps object\n\nconst CONTENT_SOURCE = DataStorage(\"CONTENT_SOURCE\");\nconst MAP_SOURCE = DataStorage(\"MAP_SOURCE\");\nconst NYAM_TYPES = DataStorage(\"NYAM_TYPES_KEY\");\n\nexport default function Maps({ filters, isPickmode, nyamEditorTaskType, setIsPickmode, setNyamEditorTaskType }) {\n    const [nyams, setNyams] = useState(null);\n    const [markers, setMarkers] = useState(null);\n\n    const [isLoading, setIsLoading] = useState(false);\n    const [selectedNyam, setSelectedNyam] = useState(null);\n    const [pickCoord, setPickCoord] = useState({ x: 0, y: 0 }); // 새로 추가할 냠의 좌표값. { x : 123, y : 123 }\n\n    const [mapsModalVisible, setMapsModalVisible] = useState(false);\n    const [nyamEditorModalVisible, setNyamEditorModalVisible] = useState(false);\n\n    // 마커 visible 속성 변경\n    useEffect(() => {\n        if (markers !== null) {\n            setMarkersVisible(filters, setIsLoading, markers);\n        }\n    }, [filters, markers]);\n\n    // 마커위치 선택\n    useEffect(() => {\n        if (map != null) {\n            if (isPickmode === true) {\n                map.setCursor(\"Crosshair\");\n                const listener = window.naver.maps.Event.addListener(map, 'click', function (e) { // 클릭이 들어왔으면\n                    if (isPickmode === true) {\n                        const { x, y } = e.coord;\n                        setPickCoord({ x, y }); // 좌표값 저장하고\n                        setIsPickmode(false); // 선택모드 끄고\n                        setNyamEditorModalVisible(true); // 냠에디터 켜\n                        window.naver.maps.Event.removeListener(listener);\n                    }\n                });\n            } else if (isPickmode === false) {\n                map.setCursor(\"Move\");\n            }\n        }\n    }, [isPickmode, setIsPickmode]);\n\n    // 지도 refreshMaps() 된다음, selectedNyam내용 업데이트\n    useEffect(() => {\n        if (selectedNyam != null) {\n            const { type, id } = selectedNyam;\n            const index = nyams[type].findIndex(nyam => nyam.id === id)\n            setSelectedNyam(nyams[type][index]);\n        }\n    }, [nyams, selectedNyam]);\n\n    async function refreshMaps() {\n        // 기존의 마커 모두 삭제하기\n        for (let arr of Object.values(markers)) {\n            arr.forEach(marker => {\n                marker.setMap(null);\n            });\n        }\n\n        // 다시 만들기\n        const { rawNyamList, setting } =  await readContents(CONTENT_SOURCE);\n        createNyamMarkers(map, NYAM_TYPES, rawNyamList, setMarkers, setNyams, setMapsModalVisible, setSelectedNyam);\n        createCenterMarker(map, setting);\n        // 이후 바로 위 useEffect에서 selectedNyam 내용 갱신.\n    }\n\n    return (\n        <MapsWrap className=\"Maps\">\n            <ScriptTag\n                type=\"text/javascript\" src={MAP_SOURCE}\n                onLoad={async () => {\n                    setIsLoading(true);\n\n                    const { rawNyamList, setting } = await readContents(CONTENT_SOURCE);\n                    map = initNaverMaps(setting);\n                    createNyamMarkers(map, NYAM_TYPES, rawNyamList, setMarkers, setNyams, setMapsModalVisible, setSelectedNyam);\n                    createCenterMarker(map, setting);\n\n                    setIsLoading(false);\n                }}\n            />\n            <Map id=\"map\"></Map>\n\n            <MapsModal\n                nyamListSource={CONTENT_SOURCE} selectedNyam={selectedNyam}\n                refreshMaps={refreshMaps}\n                mapsModalVisible={mapsModalVisible} setMapsModalVisible={setMapsModalVisible}\n                setNyamEditorModalVisible={setNyamEditorModalVisible} setNyamEditorTaskType={setNyamEditorTaskType}\n            />\n\n            <NyamEditor\n                taskType={nyamEditorTaskType} pickCoord={pickCoord} defaultNyamValue={selectedNyam}\n                refreshMaps={refreshMaps}\n                nyamEditorModalVisible={nyamEditorModalVisible} setNyamEditorModalVisible={setNyamEditorModalVisible}\n                setIsPickmode={setIsPickmode} setMapsModalVisible={setMapsModalVisible}\n            />\n\n            <Loading isLoading={isLoading} />\n        </MapsWrap>\n    );\n}\n\n// style ========================================================\nconst MapsWrap = styled.div`\n    display : flex;\n    flex : 1;\n    `;\n\nconst Map = styled.div`\n    width: 100%;\n    height : 100%;\n    `;\n\n// function =====================================================\nconst setMarkersVisible = (filters, setIsLoading, markers) => {\n    setIsLoading(true);\n\n    const types = NYAM_TYPES; // 정의되어있는 type배열 불러오기\n\n    types.forEach(type => {\n        const target = markers[type]; // markers의 한 type을 대상으로 정함\n        if (target.length === 0) { return; } // 대상이 비어있으면 바로 함수종료\n\n        const dest = filters[type]; // 업데이트 하려고 하는 값\n        if (target[0].getVisible() !== dest) { // target안의 첫번째 마커의 visible속성과, 업데이트 하려고 하는 값이 다르면 (어차피 첫번째 마커 visible값이랑, 전체 마커 visible값이랑 똑같을거기 때문)\n            target.forEach(marker => { marker.setVisible(dest); }); // 업데이트!\n            return;\n        }\n    });\n\n    setIsLoading(false);\n}","// imported Modules =============================================\nimport { React } from 'react';\nimport styled from 'styled-components';\n\n// imported components ==========================================\n// *\n\n// Main Component ===============================================\nexport default function Footer () {\n    return (\n        <FooterWrap className=\"Footer\">\n            <Group>\n                <Item>Wonjin Yi</Item>\n                <Item><strong>Contact </strong>studioplug17@gmail.com</Item>\n            </Group>\n            <Group style={{marginLeft : \"auto\",}}>\n                <Item><strong>냠냠램 TEST </strong>조직내부의 폐쇄적인 냠냠거리 공유 서비스</Item>\n            </Group>\n        </FooterWrap>\n    );\n}\n\n// style ========================================================\nconst FooterWrap = styled.div`\n    display : flex;\n \n    width : 100%;\n    padding : 20px 30px;\n\n    background-color : #333333;\n    color : #a1a1a1;\n    `; \n\nconst Group = styled.div`\n\n    `;\n\nconst Item = styled.p`\n    margin : 0;\n    `;\n\n// function =====================================================\n// *","// imported Modules =============================================\nimport { React, useEffect, useState } from 'react';\nimport styled from \"styled-components\";\nimport {notification} from \"antd\";\n\n// imported components ==========================================\nimport Header from \"./components/Header/Header\";\nimport Maps from \"./components/Maps/Maps\";\nimport Footer from \"./components/Footer/Footer\";\n\n// Main Component ===============================================\nexport default function App() {\n  const [filters, setFilters] = useState({});\n  const [isPickmode, setIsPickmode] = useState(false); // 현재 '새로운 냠'버튼을 눌러 새로운 위치를 찍는 상태인지\n  const [nyamEditorTaskType, setNyamEditorTaskType] = useState(null); // 냠에디터 taskType : create / edit\n\n  // temp temp temp temp temp temp temp temp temp temp\n  useEffect( () => {\n    notification.open({\n      message: '안녕히계세요여러분저는이세상의모든굴레와...',\n      description:\n        \"여기(nyam.wonj.in)는 멀지않은 미래에 모든 사람의 '냠 연구소'로 통하는 대문으로 바뀔 예정입니다. 대문에서 'datalab_gorani'를 입력하시면 현재와 같은 페이지를 열람하실 수 있습니다. 데이터연구소의 '냠 연구소'는 구글시트가 망하기 전까지는 유지됩니다.\",\n      duration : 10\n    });\n  }, []);\n  // temp temp temp temp temp temp temp temp temp temp\n\n  return (\n    <AppWrap className=\"App\" style={{ cursor : (isPickmode ? 'Crosshair' : 'auto') }}>\n      <Header setFilters={setFilters} setIsPickmode={setIsPickmode} setNyamEditorTaskType={setNyamEditorTaskType} />\n      <Maps filters={filters} isPickmode={isPickmode} nyamEditorTaskType={nyamEditorTaskType} setIsPickmode={setIsPickmode} setNyamEditorTaskType={setNyamEditorTaskType} />\n      <Footer />\n    </AppWrap>\n  );\n}\n\n// style ========================================================\nconst AppWrap = styled.div`\n  display : flex;\n  flex-direction : column;\n  height : 100%;\n`;\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    // <React.StrictMode>\n    //   <App />\n    // </React.StrictMode>,\n    \n    <App />,\n    document.getElementById('root')\n);"],"sourceRoot":""}