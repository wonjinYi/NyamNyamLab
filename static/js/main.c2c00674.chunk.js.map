{"version":3,"sources":["Home/components/LabCreator/drawerContents/SelectType.js","ShareComponents/atoms/Loading.js","ShareComponents/atoms/Confirm.js","DataStorage.js","Home/components/LabCreator/drawerContents/CenterPicker.js","Home/components/LabCreator/drawerContents/Movein.js","Home/components/LabCreator/drawerContents/Construct.js","Home/components/LabCreator/LabCreator.js","Home/LabFinder.js","ShareComponents/atoms/Footer.js","logo.svg","Home/Home.js","App/components/Header/followers/UpdateNoteRaw.md","App/components/Header/followers/UpdateNote.js","App/components/Header/followers/Tools.js","App/components/Header/Header.js","App/components/atoms/ContentsTable.js","App/components/atoms/DeleteBtn.js","App/components/Maps/followers/MapsModalInfo.js","App/components/Maps/followers/Comment.js","App/components/Maps/followers/MapsModalComment.js","App/components/Maps/leaders/MapsModal.js","App/components/Maps/followers/NyamEditor.js","App/components/supporters/initNaverMaps.js","App/components/supporters/readContents.js","App/components/supporters/createNyamMarkers.js","App/components/supporters/createCenterMarker.js","App/components/Maps/Maps.js","App/App.js","NyamNyamLab.js","index.js"],"names":["SelectType","setCurrentContent","contentsIndex","setLabCreatorVisible","SelectTypeWrap","className","onClick","e","shape","icon","LeftOutlined","ContentWrap","movein","size","style","marginRight","disabled","marginTop","color","styled","div","Loading","isLoading","LoadingWrap","Backdrop","spinning","indicator","LoadingOutlined","fontSize","spin","Confirm","pickedCenter","activatePickmode","closeCenterPicker","ConfirmWrap","ConfirmWindow","lat","lng","zoom","type","marginLeft","DataStorage","key","ROUTE","HOME","APP","NYAM_TYPES","korea","china","japan","asian","schoolfood","fastfood","cafe","bakery","pub","cvs","NYAM_TYPES_KEY","CREATE_NEWLAB_MOVEIN","CREATE_NEWLAB_CONSTRUCT","ACCESS_MANAGER","ROUTE_MANAGER","MAP_SOURCE","SEND_CHECK_MAIL","map","centerMarker","CENTER_INIT_VALUE","CENTER_DEFAULT_VALUE","CenterPicker","centerPickerVisible","setCenterPickerVisible","currentCenter","setCurrentCenter","useState","setPickedCenter","isPickmode","setIsPickmode","isLoadedPickedCenter","setIsLoadedPickedCenter","isLoadedMaps","setIsLoadedMaps","setMap","setOptions","setCursor","pickListener","window","naver","maps","Event","addListener","center","coord","y","x","getZoom","Marker","position","LatLng","url","Size","origin","Point","anchor","panTo","removeListener","deactivatePickmode","message","destroy","info","isConfirmed","useEffect","obj","keys","Object","isContains","containsNull","mapOptions","Map","CenterPickerWrap","src","onLoad","id","FORMDATA_INIT_VALUE","labName","customIcon","routePw","captainEmail","IS_VALIDATED_INIT_VALUE","all","Movein","formData","setFormData","isValidated","setIsValidated","btnLoading","setBtnLoading","setIsLoading","onChangeForm","target","value","validate","a","name","parentNode","warn","axios","post","JSON","stringify","data","status","error","console","isAvailableLabName","success","selectType","log","MoveinWrap","MultiInput","StyledInput","placeholder","onChange","loading","StyledPwInput","Input","Password","isAvailable","containsOnlySpace","get","str","res","i","length","Construct","ConstructWrap","construct","LabCreator","labCreatorVisible","currentContent","contentsProps","LabCreatorWrap","title","placement","closable","width","innerWidth","onClose","visible","FIND_OPTION","PLACE_HOLDER","first","second","LabFinder","setLabAccessInfo","findOption","setFindOption","firstInput","setFirstInput","secondInput","setSecondInput","TEMP_DATALAB_AUTOACCESS","SET_TEMP_DATALAB_AUTOACCESS","onSubmit","postData","taskType","labId","accessManagerUrl","content","duration","LabFinderWrap","SelectMenu","parseInt","selectedKeys","mode","SelectItem","FinderForm","FinderInput","onPressEnter","FinderInputPw","FinderButton","SearchOutlined","paddingRight","Menu","Item","Button","Footer","FooterWrap","Group","p","Home","setRoute","HomeWrap","MainSection","Header","borderRadius","href","GithubOutlined","Contents","Logo","LogoImage","alt","LogoText","DetailSection","margin","textAlign","h1","UpdateNote","updateNoteModalVisible","setUpdateNoteModalVisible","markdown","setMarkdown","fetch","mdSource","then","text","init","UpdateNoteWrap","onCancel","footer","minWidth","children","Tools","setFilters","setNyamEditorTaskType","arr","forEach","el","initChecked","checked","setChecked","ToolsWrap","filterContent","nyamType","trigger","MenuButton","FilterOutlined","createNyamContent","PlusOutlined","display","BookOutlined","SettingOutlined","styld","flexDirection","index","handleUnload","location","reload","HeaderWrap","LogoImg","LOGO_IMG","img","ContentsTable","desc","dataOrder","ContentsTableWrap","Table","Row","borderWidth","Th","rowItem","colItem","Td","CELL_PADDING","BORDER_COLOR","table","tr","th","td","DeleteBtn","setDeleteConfirm","setVisible","formContent","justifyContent","DeleteBtnWrap","onVisibleChange","DeleteOutlined","MapsModalInfo","labAccessInfo","selectedNyam","refreshMaps","setMapsModalVisible","setNyamEditorModalVisible","deleteConfirm","open","close","description","menu","parsedMenu","parse","onDelete","useCallback","nyam","MapsModalInfoWrap","removeSpace","rel","QuestionCircleOutlined","SPACE","FormOutlined","Summary","Title","string","split","join","Comment","CommentWrap","Content","MapsModalComment","newComment","setNewComment","commentsData","comment","onCreate","slice","MapsModalCommentWrap","Form","suffix","onEmojiClick","emoji","SmileOutlined","EditOutlined","Comments","item","MapsModal","mapsModalVisible","MapsModalWrap","StyledModal","ModalContentsWrap","Modal","SUMMARY_INIT_VALUE","MENUITEM_INIT_VALUE","price","NyamEditor","pickCoord","defaultNyamValue","nyamEditorModalVisible","resetLock","setResetLock","summary","setSummary","menuItems","setMenuItems","initFormData","tempSummary","tempMenuItems","onChangeSummary","onChangeMenuItems","addNewMenuItem","removeMenuItem","assign","property","warning","rawData","NyamEditorWrap","SummaryWrap","Coord","TimePickersWrap","format","moment","time","timeString","flexGrow","minuteStep","Option","MenusWrap","MenuItemWrap","StyledButton","MinusOutlined","MenuItem","ButtonsWrap","summaryReplace","naverMapsinit","setting","readContents","rawNyamList","nyamList","Error","createNyamMarkers","nyamTypes","setMarkers","setNyams","setSelectedNyam","tempNyams","initWithNyamtype","tempMarkers","marker","targetid","overlay","types","chk","j","push","err","category","createCenterMarker","Maps","filters","nyamEditorTaskType","nyams","markers","setPickCoord","values","dest","getVisible","setMarkersVisible","listener","findIndex","MapsWrap","contents","initNaverMaps","App","onbeforeunload","event","returnValue","onunload","AppWrap","cursor","NyamNyamLab","route","NyamNyamLabWrap","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c2c00674.chunk.js","sourcesContent":["// imported Modules =============================================\r\nimport { React } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Button } from \"antd\";\r\nimport { LeftOutlined } from \"@ant-design/icons\";\r\n// imported components ==========================================\r\n// *\r\n\r\n// Main Component ===============================================\r\nexport default function SelectType({ setCurrentContent, contentsIndex, setLabCreatorVisible }) {\r\n  return (\r\n    <SelectTypeWrap className=\"SelectType\">\r\n      <Button\r\n        onClick={(e) => setLabCreatorVisible(false)}\r\n        shape=\"circle\"\r\n        icon={<LeftOutlined />}\r\n      ></Button>\r\n      <ContentWrap>\r\n        <h2>냠냠랩에 연구소를 만들고 싶으신가요?</h2>\r\n        <p>🤔 어떤 유형을 선택하시겠어요?</p>\r\n\r\n        <div>\r\n          <Button\r\n            onClick={(e) => setCurrentContent(contentsIndex.movein)}\r\n            size=\"large\"\r\n            style={{ marginRight: \"16px\" }}\r\n          >\r\n            🏢 입주\r\n          </Button>\r\n          {/* <Button disabled onClick={(e) => setCurrentContent(contentsIndex.construct)} size=\"large\"> */}\r\n          <Button disabled size=\"large\">\r\n            🏗 건설\r\n          </Button>\r\n        </div>\r\n\r\n        <div style={{ marginTop: \"16px\" }}>\r\n          <p>\r\n            <strong>✍️ 공통 준비물 </strong>\r\n            새로운 연구소를 만들기 위해서는 <strong>구글 계정</strong>이 꼭 필요합니다. 냠냠랩이\r\n            구글서비스 기반으로 동작하기 때문에, 사용가능한 gmail을 하나 준비해주셔야 합니다. 물론\r\n            gmail이 아니더라도 연구소를 가질 수는 있지만, 추후 연구소 관리가 정말정말로 어려울 수\r\n            있어요.\r\n          </p>\r\n          <p>\r\n            <strong>🏢 입주 </strong>\r\n            간편하게 이용할 수 있어 가장 추천드리는 방법이에요. 냠냠랩이 이미 마련해둔 공간에\r\n            대장님의 연구소를 자동으로 준비해드려요. 냠냠랩에서 대장님의 연구내용을 관리하는 만큼,\r\n            비교적 빠른 시설보수와 연구지원을 받을 수 있어요.\r\n          </p>\r\n          <p style={{ color: \"lightgrey\" }}>\r\n            <strong>🏗 건설 </strong>\r\n            냠냠랩이 관리하지 않는 대장님만의 독립적인 연구소를 만들어드려요. 연구소 접근에 접근하는\r\n            과정이나 프로그램 업데이트를 따라오시는 일이 많이 까다로울 수 있어요. 하지만 원하신다면\r\n            저희가 성의껏 준비한 가이드를 따라 건설에 도전해보세요. 연구내용을 대장님, 그리고\r\n            함께하는 개척자 분들만 알 수 있는 특징이 있어요. 냠냠랩이 알면 안되는 내용이\r\n            들어가있거나, 본인이 연구소를 직접 관리하고 싶다면 선택해주세요.\r\n          </p>\r\n        </div>\r\n      </ContentWrap>\r\n    </SelectTypeWrap>\r\n  );\r\n}\r\n\r\n// style ========================================================\r\nconst SelectTypeWrap = styled.div``;\r\n\r\nconst ContentWrap = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  height: 100%;\r\n`;\r\n// function =====================================================\r\n// *\r\n","// imported Modules =============================================\r\nimport { React } from \"react\";\r\n\r\nimport styled from \"styled-components\";\r\nimport { Spin } from 'antd';\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\nimport 'antd/dist/antd.css';\r\n\r\n// Main Component ===============================================\r\nexport default function Loading ({ isLoading }) {\r\n    \r\n    if ( isLoading ){\r\n        return (\r\n            <LoadingWrap className=\"Loading\">\r\n                <Backdrop></Backdrop>\r\n                <Spin spinning={isLoading} size=\"large\" indicator={<LoadingOutlined style={{ fontSize: 64 }} spin />} />\r\n            </LoadingWrap>\r\n        );\r\n    } else {\r\n        return <div className=\"Loading\"></div>;\r\n    }\r\n   \r\n}\r\n\r\n// style ========================================================\r\nconst LoadingWrap = styled.div`\r\n    position : fixed;\r\n    top : 0; \r\n    left : 0;\r\n\r\n    display : flex;\r\n    justify-content : center;\r\n    align-items : center;\r\n\r\n    width : 100%; \r\n    height : 100%;\r\n    `;\r\n\r\nconst Backdrop = styled.div`\r\n    position : fixed;\r\n    top : 0; \r\n    left : 0;\r\n\r\n    width : 100%;\r\n    height : 100%;\r\n\r\n    background-color : rgba(0,0,0, 0.75);\r\n    `;","// imported Modules =============================================\r\nimport { React } from \"react\";\r\n\r\nimport styled from \"styled-components\";\r\nimport { Button } from 'antd';\r\n\r\n// Main Component ===============================================\r\nexport default function Confirm({ pickedCenter, activatePickmode, closeCenterPicker }) {\r\n    return (\r\n        <ConfirmWrap className=\"Confirm\">\r\n            <ConfirmWindow>\r\n                <p>연구소 위치와 배율을 결정할까요?</p>\r\n                <p><strong>위도 </strong>{pickedCenter.lat}</p>\r\n                <p><strong>경도 </strong>{pickedCenter.lng}</p>\r\n                <p><strong>지도 기본배율 </strong>{pickedCenter.zoom}</p>\r\n\r\n                <Button onClick={e => closeCenterPicker(true)} type=\"primary\">좋아요!</Button>\r\n                <Button onClick={activatePickmode} style={{ marginLeft: \"8px\" }}>다시!</Button>\r\n            </ConfirmWindow>\r\n        </ConfirmWrap>\r\n    );\r\n}\r\n\r\n// style ========================================================\r\nconst ConfirmWrap = styled.div`\r\n    \r\n    `;\r\n\r\nconst ConfirmWindow = styled.div`\r\n    position : fixed;\r\n    top : calc(50% + 48px);\r\n    left : 50%;\r\n    transform: translateX( -50% );\r\n    padding : 24px 48px;\r\n\r\n    background-color : white;\r\n    box-shadow : 0px 5px 15px 0px #BCBCBC;\r\n\r\n    @media(max-width:768px){\r\n        width : 80%;\r\n    }\r\n    `;\r\n\r\n// const TransparentBackdrop = styled.div`\r\n//     position : fixed;\r\n//     top : 0; \r\n//     left : 0;\r\n\r\n//     width : 100%;\r\n//     height : 100%;\r\n\r\n//     background-color : rgba(0,0,0,0);\r\n//     `;","// prettier-ignore\r\nexport default function DataStorage (key) {\r\n    const data = {\r\n        ROUTE : {\r\n            HOME : \"home\",\r\n            APP : \"app\",\r\n        },\r\n        NYAM_TYPES : {\r\n            korea : \"한식\",\r\n            china : \"중식\",\r\n            japan : \"일식\",\r\n            asian : \"아시안\",\r\n            schoolfood : \"분식\",\r\n            fastfood : \"패스트푸드\",\r\n            cafe : \"카페\",\r\n            bakery : \"베이커리\",\r\n            pub : \"술집\",\r\n            cvs : \"편의점\",\r\n        }, \r\n        NYAM_TYPES_KEY : [\"korea\", \"china\", \"japan\", \"fastfood\", \"cvs\", \"cafe\", \"asian\", \"schoolfood\", \"bakery\", \"pub\"],\r\n        CREATE_NEWLAB_MOVEIN : \"https://script.google.com/macros/s/AKfycbzw-9gkJRYErIWDpwWN71nnXZPviM5eYyQ_xbIpCD0cfHOR08TGPsDwF82UJ7bls2-tyQ/exec\",\r\n        CREATE_NEWLAB_CONSTRUCT : \"\",\r\n        ACCESS_MANAGER : \"https://script.google.com/macros/s/AKfycbw6AGu6_jOF9XXuI5F4z-Qh4JH3xgtopAioBhlHuyKKHCJ4balXR1UqRWd6fRtyicc44w/exec\",\r\n        ROUTE_MANAGER : \"https://script.google.com/macros/s/AKfycbz5iYlaH55WjYJSzvlEnM1ADaP5iwRD8gAbYhHgMtQDQLjHgEmlBi1XZRITl5u1AzZCLA/exec\",\r\n        MAP_SOURCE: \"https://openapi.map.naver.com/openapi/v3/maps.js?ncpClientId=ont9t74d67\",\r\n        \r\n        SEND_CHECK_MAIL : \"https://script.google.com/macros/s/AKfycbzOVLMzHMqGIAKzUZuUKDVtZsW11Kg_FmPJqffeLhXUw-PAOKychlChqSyQFxHwPebshQ/exec\",\r\n    }\r\n    \r\n    return data[key];\r\n}\r\n","// imported Modules =============================================\r\nimport { React, useState, useEffect } from 'react';\r\n\r\nimport styled from 'styled-components';\r\nimport { Input, Button, Modal, message } from 'antd';\r\n\r\nimport ScriptTag from 'react-script-tag';\r\n\r\n// imported components ==========================================\r\nimport Confirm from '../../../../ShareComponents/atoms/Confirm';\r\n\r\n// Main Component ===============================================\r\nimport DataStorage from '../../../../DataStorage.js';\r\nconst MAP_SOURCE = DataStorage('MAP_SOURCE');\r\n\r\nlet map = null;\r\nlet centerMarker = null;\r\n\r\nconst CENTER_INIT_VALUE = {\r\n    lat: null,\r\n    lng: null,\r\n    zoom: null,\r\n};\r\n\r\nconst CENTER_DEFAULT_VALUE = {\r\n    lat: 37.5250000,\r\n    lng: 127.0016985,\r\n    zoom: 13,\r\n};\r\n\r\nexport default function CenterPicker({ centerPickerVisible, setCenterPickerVisible, currentCenter, setCurrentCenter }) {\r\n    const [pickedCenter, setPickedCenter] = useState(CENTER_INIT_VALUE);\r\n    const [isPickmode, setIsPickmode] = useState(true);\r\n\r\n    const [isLoadedPickedCenter, setIsLoadedPickedCenter] = useState(false);\r\n    const [isLoadedMaps, setIsLoadedMaps] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (centerPickerVisible) {\r\n            if (containsNull(currentCenter)) {\r\n                setPickedCenter(CENTER_DEFAULT_VALUE);\r\n            } else {\r\n                setPickedCenter(currentCenter);\r\n            }\r\n            setIsLoadedPickedCenter(true);\r\n        }\r\n    }, [centerPickerVisible])\r\n\r\n    useEffect(() => {\r\n        if (isLoadedPickedCenter && isLoadedMaps) {\r\n            const mapOptions = {\r\n                center: new window.naver.maps.LatLng(pickedCenter.lat, pickedCenter.lng),\r\n                zoom: pickedCenter.zoom,\r\n            };\r\n            map = new window.naver.maps.Map('map', mapOptions);\r\n\r\n            /*const zoomListener =*/ window.naver.maps.Event.addListener(map, 'zoom_changed', function (e) {\r\n                setPickedCenter({ ...pickedCenter, zoom: map.getZoom(), });\r\n            });\r\n\r\n            activatePickmode();\r\n        }\r\n    }, [isLoadedMaps, isLoadedPickedCenter])\r\n\r\n    function activatePickmode() {\r\n        setIsPickmode(true);\r\n\r\n        if (centerMarker) { centerMarker.setMap(null); }\r\n        map.setOptions('draggable', true);\r\n        map.setOptions('zoomOrigin', null);\r\n        \r\n        map.setCursor('Crosshair');\r\n        const pickListener = window.naver.maps.Event.addListener(map, 'click', function (e) {\r\n            const center = {\r\n                lat: e.coord.y,\r\n                lng: e.coord.x,\r\n                zoom: map.getZoom(),\r\n            };\r\n            setPickedCenter(center);\r\n\r\n            centerMarker = new window.naver.maps.Marker({\r\n                position: new window.naver.maps.LatLng(center.lat, center.lng),\r\n                map: map,\r\n                icon: {\r\n                    url: `img/icons/svg/center.svg`,\r\n                    size: new window.naver.maps.Size(48, 48),\r\n                    origin: new window.naver.maps.Point(0, 0),\r\n                    anchor: new window.naver.maps.Point(24, 24),\r\n                }\r\n            });\r\n\r\n            const position = new window.naver.maps.LatLng(center.lat, center.lng);\r\n            map.panTo(position);\r\n            deactivatePickmode(pickListener, position);\r\n        });\r\n        message.destroy();\r\n        message.info('연구소의 위치를 선택해주세요');\r\n    }\r\n\r\n    function deactivatePickmode(pickListener, position) {\r\n        setIsPickmode(false);\r\n\r\n        map.setOptions('draggable', false);\r\n        map.setOptions('zoomOrigin', position);\r\n        map.setCursor('Move');\r\n        window.naver.maps.Event.removeListener(pickListener);\r\n    }\r\n\r\n    function closeCenterPicker(isConfirmed) {\r\n        if (isConfirmed) {\r\n            setCurrentCenter(pickedCenter);\r\n        }\r\n        map.destroy();\r\n        setCenterPickerVisible(false);\r\n    }\r\n\r\n    return (\r\n        <CenterPickerWrap className=\"CenterPicker\">\r\n            <Backdrop onClick={e => closeCenterPicker(false)} />\r\n\r\n            <ScriptTag type=\"text/javascript\" src={MAP_SOURCE} onLoad={() => { setIsLoadedMaps(true); }} />\r\n            <Map id=\"map\"></Map>\r\n            {\r\n                !isPickmode\r\n                    ? <Confirm pickedCenter={pickedCenter} activatePickmode={activatePickmode} closeCenterPicker={closeCenterPicker} />\r\n                    : null\r\n            }\r\n        </CenterPickerWrap>\r\n    );\r\n}\r\n\r\n// style ========================================================\r\nconst CenterPickerWrap = styled.div`\r\n    position : absolute;\r\n    top : 0; \r\n    left : 0;\r\n    width : 100vw;\r\n    height : 100vh;  \r\n    \r\n    display : flex;\r\n    justify-content : center;\r\n    align-items : center;\r\n    `;\r\n\r\nconst Map = styled.div`\r\n    position : fixed !important;\r\n    top : 10%; \r\n    left : 5%;\r\n    width : 90%;\r\n    height : 80%;\r\n    `;\r\n\r\nconst Backdrop = styled.div`\r\n    position : fixed;\r\n    top : 0; \r\n    left : 0;\r\n\r\n    width : 100%;\r\n    height : 100%;\r\n\r\n    background-color : rgba(0,0,0, 0.75);\r\n    `;\r\n\r\n// function =====================================================\r\nfunction containsNull(obj) {\r\n    const keys = Object.keys(obj);\r\n    let isContains = false;\r\n\r\n    for (let key of keys) {\r\n        if (!obj[key]) {\r\n            isContains = true;\r\n            break;\r\n        }\r\n    }\r\n\r\n    return isContains;\r\n}","// imported Modules =============================================\r\nimport { React, useState, useEffect } from \"react\";\r\n\r\nimport axios from \"axios\";\r\n\r\nimport styled from \"styled-components\";\r\nimport { Input, Button, Divider, message } from \"antd\";\r\nimport { LeftOutlined } from \"@ant-design/icons\";\r\n\r\n// imported components ==========================================\r\nimport Loading from \"../../../../ShareComponents/atoms/Loading\";\r\n\r\nimport CenterPicker from \"./CenterPicker\";\r\n\r\n// Main Component ===============================================\r\nimport DataStorage from \"../../../../DataStorage\";\r\nconst SEND_CHECK_MAIL = DataStorage(\"SEND_CHECK_MAIL\");\r\nconst ROUTE_MANAGER = DataStorage(\"ROUTE_MANAGER\");\r\nconst CREATE_NEWLAB_MOVEIN = DataStorage(\"CREATE_NEWLAB_MOVEIN\");\r\n\r\nconst FORMDATA_INIT_VALUE = {\r\n  labName: null,\r\n  lat: null,\r\n  lng: null,\r\n  zoom: null,\r\n  customIcon: false,\r\n  // defaultPermission: null,\r\n  routePw: \"\",\r\n  captainEmail: null,\r\n  // captainPw: null,\r\n};\r\n\r\nconst IS_VALIDATED_INIT_VALUE = {\r\n  all: false,\r\n  labName: false,\r\n  captainEmail: false,\r\n};\r\n\r\nexport default function Movein({ setCurrentContent, contentsIndex, setLabCreatorVisible }) {\r\n  const [formData, setFormData] = useState(FORMDATA_INIT_VALUE);\r\n  const [isValidated, setIsValidated] = useState(IS_VALIDATED_INIT_VALUE);\r\n  const [btnLoading, setBtnLoading] = useState(IS_VALIDATED_INIT_VALUE);\r\n\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const [centerPickerVisible, setCenterPickerVisible] = useState(false);\r\n  const [currentCenter, setCurrentCenter] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (currentCenter) {\r\n      setFormData({\r\n        ...formData,\r\n        lat: currentCenter.lat,\r\n        lng: currentCenter.lng,\r\n        zoom: currentCenter.zoom,\r\n      });\r\n    }\r\n  }, [currentCenter]);\r\n\r\n  function onChangeForm(target, value) {\r\n    setFormData({ ...formData, [target]: value });\r\n  }\r\n\r\n  async function validate(e) {\r\n    // target 정하기\r\n    let target;\r\n    if (e.target.name) {\r\n      target = e.target.name;\r\n    } else {\r\n      // 버튼 내부의 글씨가 선택된 경우, 부모의 name받아오기\r\n      target = e.target.parentNode.name;\r\n    }\r\n\r\n    // target별 검증하기 : all, captainEmail, labName\r\n    if (target === \"all\") {\r\n      for (let key of Object.keys(formData)) {\r\n        if (key === \"routePw\" || key === \"customIcon\") continue;\r\n\r\n        if (formData[key] === null || formData[key] === \"\") {\r\n          message.warn(\"비어있는 곳을 채워주세요\");\r\n          setIsValidated({ ...isValidated, all: false });\r\n          return;\r\n        }\r\n      }\r\n\r\n      for (let key of Object.keys(isValidated)) {\r\n        if (key !== \"all\" && isValidated[key] === false) {\r\n          message.warn(\"대장이메일 또는 연구소이름이 사용 가능한지 확인해주세요\");\r\n          setIsValidated({ ...isValidated, all: false });\r\n          return;\r\n        }\r\n      }\r\n      setIsValidated({ ...isValidated, all: true });\r\n    } else if (target === \"captainEmail\") {\r\n      setBtnLoading({ ...btnLoading, captainEmail: true });\r\n      const { data } = await axios.post(\r\n        SEND_CHECK_MAIL,\r\n        JSON.stringify({ captainEmail: formData.captainEmail })\r\n      );\r\n      if (data.status === \"success\") {\r\n        setIsValidated({ ...isValidated, captainEmail: true });\r\n        message.info(\"확인메일을 보내드렸어요. 메일함을 꼭 확인해주세요!\");\r\n      } else {\r\n        message.error(\"문제가 생겨 메일을 보내지 못했습니다.\");\r\n        console.error(data);\r\n      }\r\n      setBtnLoading({ ...btnLoading, captainEmail: false });\r\n    } else if (target === \"labName\") {\r\n      setBtnLoading({ ...btnLoading, labName: true });\r\n\r\n      if (await isAvailableLabName(formData.labName)) {\r\n        setIsValidated({ ...isValidated, labName: true });\r\n        message.success(\"사용 가능한 연구소 이름입니다\");\r\n      } else {\r\n        message.error(\"사용할 수 없는 연구소 이름입니다\");\r\n      }\r\n      setBtnLoading({ ...btnLoading, labName: false });\r\n    } else {\r\n      console.error(\"예상하지 못한 검증요청\");\r\n    }\r\n  }\r\n\r\n  function pickCenter() {\r\n    setCurrentCenter({\r\n      lat: formData.lat,\r\n      lng: formData.lng,\r\n      zoom: formData.zoom,\r\n    });\r\n    setCenterPickerVisible(true);\r\n  }\r\n\r\n  async function onSubmit() {\r\n    setIsLoading(true);\r\n\r\n    const target = { target: { name: \"all\" } };\r\n    await validate(target);\r\n\r\n    if (isValidated.all) {\r\n      message.success(\"새 연구소를 열심히 준비하고있어요!\", 0);\r\n\r\n      const {\r\n        data: { data, status },\r\n      } = await axios.post(CREATE_NEWLAB_MOVEIN, JSON.stringify(formData));\r\n      message.destroy();\r\n      setIsLoading(false);\r\n\r\n      if (status === \"success\") {\r\n        setCurrentContent(contentsIndex.selectType);\r\n        setLabCreatorVisible(false);\r\n        message.success(\"새로운 연구소가 성공적으로 생성되었습니다\");\r\n        console.log(data);\r\n      } else {\r\n        message.error(\"무언가 잘못되었습니다\");\r\n        console.error(data);\r\n      }\r\n    } else {\r\n      setIsLoading(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <MoveinWrap className=\"Movein\">\r\n      <Button\r\n        onClick={(e) => setCurrentContent(contentsIndex.selectType)}\r\n        shape=\"circle\"\r\n        icon={<LeftOutlined />}\r\n      ></Button>\r\n      <ContentWrap>\r\n        <h2>🏢 입주</h2>\r\n        <p>몇 가지 사전정보를 알려주시면 바로 입주하실 수 있도록 도와드릴게요 👋</p>\r\n\r\n        <Divider>대장 정보</Divider>\r\n        <MultiInput>\r\n          <StyledInput\r\n            placeholder=\"대장님의 Email\"\r\n            name=\"captainEmail\"\r\n            value={formData.captainEmail}\r\n            onChange={(e) => onChangeForm(e.target.name, e.target.value)}\r\n            disabled={btnLoading.captainEmail || isValidated.captainEmail}\r\n          />\r\n\r\n          {isValidated.captainEmail ? (\r\n            <Button\r\n              name=\"captainEmail\"\r\n              onClick={(e) => setIsValidated({ ...isValidated, captainEmail: false })}\r\n            >\r\n              수정\r\n            </Button>\r\n          ) : (\r\n            <Button name=\"captainEmail\" loading={btnLoading.captainEmail} onClick={validate}>\r\n              확인\r\n            </Button>\r\n          )}\r\n        </MultiInput>\r\n\r\n        {/* <StyledPwInput placeholder=\"연구소 관리 비밀번호\" name=\"captainPw\" value={formData.captainPw} onChange={e => onChangeForm(e.target.name, e.target.value)} /> */}\r\n\r\n        <Divider>연구소 정보</Divider>\r\n        <MultiInput>\r\n          <StyledInput\r\n            placeholder=\"연구소 이름\"\r\n            name=\"labName\"\r\n            value={formData.labName}\r\n            onChange={(e) => onChangeForm(e.target.name, e.target.value)}\r\n            disabled={btnLoading.labName || isValidated.labName}\r\n          />\r\n          {isValidated.labName ? (\r\n            <Button\r\n              name=\"labName\"\r\n              onClick={(e) => setIsValidated({ ...isValidated, labName: false })}\r\n            >\r\n              수정\r\n            </Button>\r\n          ) : (\r\n            <Button name=\"labName\" loading={btnLoading.labName} onClick={validate}>\r\n              확인\r\n            </Button>\r\n          )}\r\n        </MultiInput>\r\n\r\n        <StyledPwInput\r\n          placeholder=\"(선택) 연구소 출입 비밀번호\"\r\n          name=\"routePw\"\r\n          value={formData.routePw}\r\n          onChange={(e) => onChangeForm(e.target.name, e.target.value)}\r\n        />\r\n        <MultiInput>\r\n          <StyledInput disabled placeholder=\"연구소 위도\" name=\"lat\" value={formData.lat} />\r\n          <StyledInput disabled placeholder=\"연구소 경도\" name=\"lng\" value={formData.lng} />\r\n          <StyledInput disabled placeholder=\"지도 기본배율\" name=\"zoom\" value={formData.zoom} />\r\n          <Button onClick={pickCenter}>수정</Button>\r\n        </MultiInput>\r\n\r\n        {/* <Select\r\n          placeholder=\"연구소 기본 권한\"\r\n          name=\"defaultPermission\"\r\n          value={formData.defaultPermission}\r\n          onChange={(value) => onChangeForm(\"defaultPermission\", value)}\r\n        >\r\n          <Select.Option value={\"viewer\"} key={0}>\r\n            열람 가능\r\n          </Select.Option>\r\n          <Select.Option value={\"editor\"} key={1}>\r\n            편집 가능\r\n          </Select.Option>\r\n        </Select> */}\r\n\r\n        <Divider />\r\n        <Button onClick={onSubmit}>입주하기</Button>\r\n      </ContentWrap>\r\n\r\n      {centerPickerVisible ? (\r\n        <CenterPicker\r\n          centerPickerVisible={centerPickerVisible}\r\n          setCenterPickerVisible={setCenterPickerVisible}\r\n          currentCenter={currentCenter}\r\n          setCurrentCenter={setCurrentCenter}\r\n        />\r\n      ) : null}\r\n\r\n      <Loading isLoading={isLoading} />\r\n    </MoveinWrap>\r\n  );\r\n}\r\n\r\n// style ========================================================\r\nconst MoveinWrap = styled.div``;\r\n\r\nconst ContentWrap = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: stretch;\r\n  height: 100%;\r\n`;\r\n\r\nconst MultiInput = styled.div`\r\n  display: flex;\r\n\r\n  & > input {\r\n    margin-right: 4px;\r\n  }\r\n  & > .no-margin {\r\n    margin-right: 0;\r\n  }\r\n`;\r\n\r\nconst StyledInput = styled(Input)`\r\n  margin-bottom: 4px;\r\n`;\r\nconst StyledPwInput = styled(Input.Password)`\r\n  margin-bottom: 4px;\r\n`;\r\n\r\n// function =====================================================\r\nasync function isAvailableLabName(labName) {\r\n  let isAvailable = true;\r\n\r\n  if (labName === \"\" || labName === null) {\r\n    isAvailable = false;\r\n  } else if (containsOnlySpace(labName)) {\r\n    isAvailable = false;\r\n  } else {\r\n    const { data } = await axios.get(`${ROUTE_MANAGER}?labName=${labName}`); // 연구소 이름이 중복되는지 여부\r\n    console.log(data);\r\n    const isUnique = data.data;\r\n    if (!isUnique) {\r\n      isAvailable = false;\r\n    }\r\n  }\r\n\r\n  return isAvailable;\r\n}\r\n\r\nfunction containsOnlySpace(str) {\r\n  let res = true;\r\n\r\n  for (let i = 0; i < str.length; i++) {\r\n    if (str !== \" \") {\r\n      res = false;\r\n      break;\r\n    }\r\n  }\r\n\r\n  return res;\r\n}\r\n","// imported Modules =============================================\r\nimport { React } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Button } from \"antd\";\r\nimport { LeftOutlined } from \"@ant-design/icons\";\r\n// imported components ==========================================\r\n// *\r\n\r\n// Main Component ===============================================\r\nexport default function Construct({ setCurrentContent, contentsIndex }) {\r\n  return (\r\n    <ConstructWrap className=\"Construct\">\r\n      <Button\r\n        onClick={(e) => setCurrentContent(contentsIndex.selectType)}\r\n        shape=\"circle\"\r\n        icon={<LeftOutlined />}\r\n      ></Button>\r\n      <ContentWrap>\r\n        <h2>건설</h2>\r\n      </ContentWrap>\r\n    </ConstructWrap>\r\n  );\r\n}\r\n\r\n// style ========================================================\r\nconst ConstructWrap = styled.div``;\r\n\r\nconst ContentWrap = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  height: 100%;\r\n`;\r\n// function =====================================================\r\n// *\r\n","// imported Modules =============================================\r\nimport { React, useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport { Drawer } from 'antd';\r\n\r\n// imported components ==========================================\r\nimport SelectType from './drawerContents/SelectType';\r\nimport Movein from './drawerContents/Movein';\r\nimport Construct from './drawerContents/Construct';\r\n\r\n// Main Component ===============================================\r\nconst contentsIndex = {\r\n    selectType: 'selectType',\r\n    movein: 'movein',\r\n    construct: 'construct'\r\n};\r\n\r\nexport default function LabCreator({ labCreatorVisible, setLabCreatorVisible }) {\r\n    const [currentContent, setCurrentContent] = useState(contentsIndex.selectType);\r\n\r\n    const contentsProps = {\r\n        setCurrentContent : setCurrentContent, \r\n        contentsIndex : contentsIndex, \r\n        setLabCreatorVisible : setLabCreatorVisible,\r\n    };\r\n\r\n    return (\r\n        <LabCreatorWrap className=\"LabCreator\">\r\n            <Drawer\r\n                title={null}\r\n                placement=\"right\"\r\n                closable={false}\r\n                width={window.innerWidth > 768 ? '50%' : '90%'}\r\n                onClose={e => setLabCreatorVisible(false)}\r\n                visible={labCreatorVisible}\r\n            >\r\n                {\r\n                    (() => {\r\n                        switch(currentContent){\r\n                            case contentsIndex.selectType:\r\n                                return <SelectType {...contentsProps} />;\r\n                            case contentsIndex.movein:\r\n                                return <Movein {...contentsProps} />;\r\n                            case contentsIndex.construct:\r\n                                return <Construct {...contentsProps} />\r\n                            default :\r\n                                return <h1>무언가 잘못되었습니다</h1>\r\n                        }\r\n                    })()   \r\n                }\r\n            </Drawer>\r\n        </LabCreatorWrap>\r\n    );\r\n}\r\n\r\n// style ========================================================\r\nconst LabCreatorWrap = styled.div`\r\n    width : 100%;\r\n    `;\r\n\r\n\r\nconst ContentWrap = styled.div`\r\n    display : flex;\r\n    flex-direction : column;\r\n    justify-content : center;\r\n    align-items : center;\r\n\r\n    height : 100%;\r\n    `;\r\n\r\n// function =====================================================\r\n// *\r\n","// imported Modules =============================================\r\nimport { React, useState, useEffect } from \"react\";\r\n\r\nimport styled from \"styled-components\";\r\nimport { Input, Button, Menu, message } from \"antd\";\r\nimport { SearchOutlined } from \"@ant-design/icons\";\r\n\r\nimport axios from \"axios\";\r\n\r\n// imported components ==========================================\r\n\r\n// Main Component ===============================================\r\nimport DataStorage from \"../DataStorage\";\r\nconst ACCESS_MANAGER = DataStorage(\"ACCESS_MANAGER\");\r\nconst ROUTE_MANAGER = DataStorage(\"ROUTE_MANAGER\");\r\n\r\nconst FIND_OPTION = { route: 0, manual: 1 };\r\nconst PLACE_HOLDER = [\r\n  { first: \"연구소 이름을 알려주세요\", second: \"출입 비밀번호를 알려주세요\" },\r\n  { first: \"연구소 ID를 알려주세요\", second: \"연구소 접근제어장치 주소를 알려주세요\" },\r\n];\r\n\r\nexport default function LabFinder({ setIsLoading, setLabAccessInfo }) {\r\n  const [isReady, setIsReady] = useState(false); // app으로 라우팅할 준비가 되었는지\r\n\r\n  const [findOption, setFindOption] = useState(FIND_OPTION.route); // route, manual.\r\n\r\n  const [firstInput, setFirstInput] = useState(\"\");\r\n  const [secondInput, setSecondInput] = useState(\"\");\r\n\r\n  // ▼ 고라니의 연구소 접속을 위한 임시 기능 !! 고라니의 연구소 접속을 위한 임시 기능 !! 고라니의 연구소 접속을 위한 임시 기능 !! ▼\r\n  const [TEMP_DATALAB_AUTOACCESS, SET_TEMP_DATALAB_AUTOACCESS] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (TEMP_DATALAB_AUTOACCESS === true && firstInput === \"데이터연구소\") {\r\n      onSubmit();\r\n    }\r\n  }, [firstInput]);\r\n  // ▲ 고라니의 연구소 접속을 위한 임시 기능 !! 고라니의 연구소 접속을 위한 임시 기능 !! 고라니의 연구소 접속을 위한 임시 기능 !! ▲\r\n\r\n  async function onSubmit(e) {\r\n    switch (findOption) {\r\n      case FIND_OPTION.route:\r\n        setIsLoading(true);\r\n        const postData = {\r\n          taskType: \"doRoute\",\r\n          data: {\r\n            labName: firstInput,\r\n            routePw: secondInput,\r\n          },\r\n        };\r\n        const {\r\n          data: { status, data },\r\n        } = await axios.post(ROUTE_MANAGER, JSON.stringify(postData));\r\n\r\n        if (status === \"success\") {\r\n          setLabAccessInfo({\r\n            labId: data,\r\n            accessManagerUrl: ACCESS_MANAGER,\r\n          });\r\n          message.destroy();\r\n          message.success(\"연구소로 달려가고있어요!\");\r\n        } else {\r\n          console.log(\"에러!!에러!!!에러!!!\");\r\n          message.error({\r\n            content: \"앗.. 연구소를 찾지 못했어요...\",\r\n            duration: 0,\r\n            key: \"LabFinder_01\",\r\n            onClick: (e) => {\r\n              message.destroy(\"LabFinder_01\");\r\n            },\r\n          });\r\n        }\r\n\r\n        setIsLoading(false);\r\n        break;\r\n\r\n      case FIND_OPTION.manual:\r\n        break;\r\n      default:\r\n        console.error(\"예상하지 못한 FIND_OPTION입니다\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <LabFinderWrap className=\"LabFinder\">\r\n      <SelectMenu\r\n        onClick={(e) => {\r\n          setFindOption(parseInt(e.key));\r\n        }}\r\n        selectedKeys={`${findOption}`}\r\n        mode=\"horizontal\"\r\n      >\r\n        <SelectItem key={`${FIND_OPTION.route}`}>이름으로 찾기</SelectItem>\r\n        <SelectItem disabled key={`${FIND_OPTION.manual}`}>\r\n          직접 찾기\r\n        </SelectItem>\r\n      </SelectMenu>\r\n      <FinderForm>\r\n        <FinderInput\r\n          placeholder={PLACE_HOLDER[findOption].first}\r\n          size=\"large\"\r\n          value={firstInput}\r\n          onChange={(e) => {\r\n            setFirstInput(e.target.value);\r\n          }}\r\n          onPressEnter={onSubmit}\r\n        />\r\n        <FinderInputPw\r\n          placeholder={PLACE_HOLDER[findOption].second}\r\n          size=\"large\"\r\n          type=\"password\"\r\n          value={secondInput}\r\n          onChange={(e) => {\r\n            setSecondInput(e.target.value);\r\n          }}\r\n          onPressEnter={onSubmit}\r\n        />\r\n        <FinderButton icon={<SearchOutlined />} size=\"large\" onClick={onSubmit}>\r\n          내 연구소 찾기\r\n        </FinderButton>\r\n\r\n        <FinderButton\r\n          type=\"primary\"\r\n          size=\"large\"\r\n          style={{ marginTop: \"16px\" }}\r\n          onClick={(e) => {\r\n            setFirstInput(\"데이터연구소\");\r\n            SET_TEMP_DATALAB_AUTOACCESS(true);\r\n          }}\r\n        >\r\n          <span style={{ fontSize: \"10px\", paddingRight: \"4px\" }}>모두를 위한</span>\r\n          고라니 연구소\r\n        </FinderButton>\r\n      </FinderForm>\r\n    </LabFinderWrap>\r\n  );\r\n}\r\n\r\n// style ========================================================\r\nconst LabFinderWrap = styled.div`\r\n  display: flex;\r\n\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  margin-bottom: 32px;\r\n  width: 80%;\r\n`;\r\n\r\nconst SelectMenu = styled(Menu)`\r\n  border: none;\r\n  padding: 0px 8px;\r\n  margin-bottom: 16px;\r\n  background-color: #333333;\r\n`;\r\n\r\nconst SelectItem = styled(Menu.Item)`\r\n  color: white;\r\n`;\r\n\r\nconst FinderForm = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: flex-end;\r\n\r\n  width: 350px;\r\n\r\n  @media (max-width: 768px) {\r\n    width: 90%;\r\n  }\r\n`;\r\n\r\nconst FinderInput = styled(Input)`\r\n  width: 100%;\r\n  margin-bottom: 16px;\r\n\r\n  border-radius: 24px;\r\n\r\n  border-color: white;\r\n  &:hover {\r\n    border-color: white;\r\n  }\r\n  &:focus {\r\n    border-color: white;\r\n  }\r\n`;\r\n\r\nconst FinderInputPw = styled(Input.Password)`\r\n  width: 100%;\r\n  margin-bottom: 16px;\r\n\r\n  border-radius: 24px;\r\n\r\n  border-color: white;\r\n  &:hover {\r\n    border-color: white;\r\n  }\r\n  &:focus {\r\n    border-color: white;\r\n  }\r\n`;\r\n\r\nconst FinderButton = styled(Button)`\r\n  width: 100%;\r\n  border-radius: 24px;\r\n  vertical-align: middle;\r\n`;\r\n\r\n// const FindHistory = styled.div`\r\n//     display : flex;\r\n//     justify-content : flex-start;\r\n//     `;\r\n// const HistoryItem = styled.span`\r\n//     padding : 4px 8px;\r\n//     border-radius : 24px;\r\n//     background-color : #FFFFFF;\r\n//     color : #333333;\r\n//     `;\r\n\r\n// function =====================================================\r\n// *\r\n","// imported Modules =============================================\r\nimport { React } from 'react';\r\nimport styled from 'styled-components';\r\n\r\n// imported components ==========================================\r\n// *\r\n\r\n// Main Component ===============================================\r\nexport default function Footer () {\r\n    return (\r\n        <FooterWrap className=\"Footer\">\r\n            <Group>\r\n                <Item><strong>냠냠랩 </strong> 조직 내부의 냠냠거리 공유 서비스</Item>\r\n                <Item><strong>Contact </strong> goranimaster17@gmail.com</Item>\r\n            </Group>\r\n        </FooterWrap>\r\n    );\r\n}\r\n\r\n// style ========================================================\r\nconst FooterWrap = styled.div`\r\n    display : flex;\r\n    \r\n    justify-content : flex-end;\r\n\r\n    width : 100%;\r\n    padding : 10px 20px;\r\n\r\n    border-top : 1px solid #525252;\r\n    background-color : #333333;\r\n    color : #a1a1a1;\r\n    `; \r\n\r\nconst Group = styled.div`\r\n\r\n    `;\r\n\r\nconst Item = styled.p`\r\n    margin : 0;\r\n    `;\r\n\r\n// function =====================================================\r\n// *","export default __webpack_public_path__ + \"static/media/logo.30ac0175.svg\";","// imported Modules =============================================\r\nimport React, { useState } from \"react\";\r\n\r\nimport { Button } from \"antd\";\r\nimport { GithubOutlined } from \"@ant-design/icons\";\r\nimport styled from \"styled-components\";\r\n\r\n// imported components ==========================================\r\nimport LabCreator from \"./components/LabCreator/LabCreator\";\r\nimport LabFinder from \"./LabFinder\";\r\nimport Loading from \"../ShareComponents/atoms/Loading\";\r\nimport Footer from \"../ShareComponents/atoms/Footer\";\r\n\r\n// Main Component ===============================================\r\n\r\nimport LogoImage from \"../logo.svg\";\r\nexport default function Home({ setRoute, setLabAccessInfo }) {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [labCreatorVisible, setLabCreatorVisible] = useState(false);\r\n\r\n  return (\r\n    <HomeWrap className=\"Home\">\r\n      <MainSection>\r\n        <Header>\r\n          <Button\r\n            onClick={(e) => setLabCreatorVisible(true)}\r\n            style={{ borderRadius: \"16px\", marginRight: \"12px\" }}\r\n          >\r\n            연구소 만들기\r\n          </Button>\r\n          <a href=\"https://github.com/wonjinYi/NyamNyamLab\" target=\"_blank\">\r\n            <Button shape=\"circle\" icon={<GithubOutlined />} />\r\n          </a>\r\n        </Header>\r\n        <Contents>\r\n          <Logo>\r\n            <img src={LogoImage} alt=\"nyamnyamlab logo\" />\r\n            <LogoText>냠냠랩</LogoText>\r\n          </Logo>\r\n          <LabFinder\r\n            setIsLoading={setIsLoading}\r\n            setRoute={setRoute}\r\n            setLabAccessInfo={setLabAccessInfo}\r\n          />\r\n        </Contents>\r\n      </MainSection>\r\n      <LabCreator\r\n        labCreatorVisible={labCreatorVisible}\r\n        setLabCreatorVisible={setLabCreatorVisible}\r\n      />\r\n\r\n      <DetailSection>\r\n        <h1 style={{ margin: \"200px 0\", textAlign: \"center\" }}>소개가 들어갈 공간</h1>\r\n      </DetailSection>\r\n\r\n      <Footer />\r\n      <Loading isLoading={isLoading} />\r\n    </HomeWrap>\r\n  );\r\n}\r\n\r\n// style ========================================================\r\nconst HomeWrap = styled.div`\r\n  width: 100%;\r\n`;\r\n\r\nconst MainSection = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100vh;\r\n\r\n  background-color: #333333;\r\n  color: #ffffff;\r\n`;\r\n\r\nconst Header = styled.div`\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  margin: 12px;\r\n`;\r\n\r\nconst Contents = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst Logo = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  color: #ffffff;\r\n`;\r\n\r\nconst LogoText = styled.h1`\r\n  margin: 0;\r\n  margin-left: 8px;\r\n\r\n  font-size: 48px;\r\n  color: #ffffff;\r\n  font-family: \"Poor Story\", cursive;\r\n`;\r\n\r\nconst DetailSection = styled.div``;\r\n// function =====================================================\r\n// *\r\n","export default __webpack_public_path__ + \"static/media/UpdateNoteRaw.740d800c.md\";","// imported Modules =============================================\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Modal } from \"antd\";\r\nimport styled from 'styled-components';\r\nimport ReactMarkdown from 'react-markdown';\r\n\r\n// imported components ==========================================\r\n// *\r\n\r\n// Main Component ===============================================\r\nimport mdSource from \"./UpdateNoteRaw.md\";\r\n\r\nexport default function UpdateNote({ updateNoteModalVisible, setUpdateNoteModalVisible}) {\r\n    const [markdown, setMarkdown] = useState('');\r\n\r\n    useEffect( () => {\r\n        async function init() {\r\n            const str = await fetch(mdSource)\r\n            .then( res => res.text() );\r\n\r\n            setMarkdown(str);\r\n        }\r\n        init();\r\n    }, [markdown]);\r\n\r\n    return (\r\n        <UpdateNoteWrap className=\"UpdateNote\">\r\n            <Modal\r\n                title={\"업데이트 노트\"}\r\n                visible={updateNoteModalVisible}\r\n                onCancel={() => { setUpdateNoteModalVisible(false) }}\r\n                footer={null}\r\n                style={{minWidth:\"50%\"}}\r\n            >\r\n                <ReactMarkdown children={markdown} />\r\n            </Modal>\r\n        </UpdateNoteWrap>\r\n    );\r\n}\r\n\r\n// style ========================================================\r\nconst UpdateNoteWrap = styled.div`\r\n\r\n    `;\r\n\r\n// function =====================================================\r\n// *","// imported Modules =============================================\r\nimport { React, useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { Checkbox, Popover, Button, Tooltip } from \"antd\";\r\nimport { FilterOutlined, PlusOutlined, BookOutlined, SettingOutlined } from \"@ant-design/icons\"\r\nimport 'antd/dist/antd.css';\r\n\r\n// imported Components ==========================================\r\nimport UpdateNote from \"./UpdateNote\";\r\n\r\n/* ******************************************* */\r\n// [경고] 임시적인 사용자설정 보관소 - 나중에 다른 방법으로 대체필요\r\nimport DataStorage from \"../../../../DataStorage\"; \r\nconst NYAM_TYPES = DataStorage(\"NYAM_TYPES\");\r\nconst NYAM_TYPES_KEY = DataStorage(\"NYAM_TYPES_KEY\");\r\n// [경고] 임시적인 사용자설정 보관소 - 나중에 다른 방법으로 대체필요\r\n/* ******************************************* */\r\n\r\n// Main Component ===============================================\r\nexport default function Tools ({ setFilters, setIsPickmode, setNyamEditorTaskType }) {\r\n    const [checked, setChecked] = useState( initChecked(NYAM_TYPES_KEY) );\r\n    const [updateNoteModalVisible, setUpdateNoteModalVisible] = useState(false);\r\n\r\n    useEffect ( () => { \r\n        setFilters(checked); \r\n    }, [checked, setFilters]);\r\n\r\n    function onChange(e) { setChecked({ ...checked, [e.target.nyamType] : e.target.checked }) }\r\n\r\n    return (\r\n        <ToolsWrap className=\"Tools\">\r\n            <div className=\"LeftDiv\">\r\n                {/* 냠 필터링 */}\r\n                <Popover placement=\"bottom\" title={\"냠 필터링\"} content={filterContent(onChange, checked)} trigger=\"click\">\r\n                    <Tooltip title=\"냠 필터링\" placement=\"left\">\r\n                        <MenuButton shape=\"circle\" icon={<FilterOutlined />} />\r\n                    </Tooltip>\r\n                </Popover>\r\n\r\n                {/* 새로운 냠 */}\r\n                <Popover placement=\"bottom\" title={\"새로운 냠 만들기\"} content={createNyamContent} trigger=\"click\">\r\n                    <Tooltip title=\"새로운 냠\" placement=\"right\">\r\n                        <MenuButton shape=\"circle\" icon={<PlusOutlined />} style={{marginLeft:\"8px\"}} \r\n                            onClick={ () => { \r\n                                setNyamEditorTaskType(\"create\"); \r\n                                setIsPickmode(true); \r\n                            }} \r\n                        />\r\n                    </Tooltip>\r\n                </Popover>\r\n            </div>\r\n\r\n            <div className=\"RightDiv\" style={{marginLeft:\"auto\", display : 'flex'}} >\r\n                <Tooltip title=\"업데이트 노트\" placement=\"right\">\r\n                    <MenuButton shape=\"circle\" icon={<BookOutlined />}  onClick={ () => { setUpdateNoteModalVisible(true); }} />\r\n                    <UpdateNote updateNoteModalVisible={updateNoteModalVisible} setUpdateNoteModalVisible={setUpdateNoteModalVisible} />\r\n                </Tooltip>\r\n                <MenuButton shape=\"circle\" icon={<SettingOutlined />}  style={{marginLeft:\"8px\"}} disabled/>\r\n            </div>\r\n        </ToolsWrap>\r\n    );\r\n}\r\n\r\nfunction filterContent(onChange, checked) {\r\n    return (\r\n        <div className=\"filterContent\" styld={{display:\"flex\", flexDirection:\"column\"}}>\r\n        {\r\n            NYAM_TYPES_KEY.map( (type, index) => (\r\n                <div key={index}><Checkbox onChange={onChange} checked={checked[type]} nyamType={type}>{NYAM_TYPES[type]}</Checkbox></div>\r\n            ))\r\n        }\r\n        </div>\r\n    )\r\n}\r\n\r\nconst createNyamContent = (\r\n    <div>\r\n        <p style={{margin:\"0\"}}><strong>지도에서 새로운 남의 위치를 찍어주세요</strong></p>\r\n        {/* <p style={{margin:\"0\"}}>버튼을 다시누르면 '새로운 냠 만들기'가 취소됩니다</p> */}\r\n    </div>\r\n);\r\n    \r\n// style ========================================================\r\nconst ToolsWrap = styled.div`\r\n    display : flex;\r\n    flex : 1;\r\n\r\n    justify-contents : center;\r\n    align-items : center;\r\n\r\n    padding : 10px 10px;\r\n\r\n    background-color : #333333;\r\n    color : #FFFFFF;\r\n    `;\r\n\r\nconst MenuButton = styled(Button)`\r\n    border : 0;\r\n    `;\r\n\r\n// function =====================================================\r\nfunction initChecked(arr) {\r\n    let obj = {};\r\n    arr.forEach( el => {\r\n        obj[el] = true;\r\n    });\r\n\r\n    return obj;\r\n}","// imported Modules =============================================\r\nimport { React } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\n// imported components ==========================================\r\nimport Tools from \"./followers/Tools\";\r\n\r\n// imported etc resource ========================================\r\nimport LOGO_IMG from \"../../../logo.svg\";\r\n\r\n// Main Component ===============================================\r\n\r\nconst handleUnload = () => {\r\n  window.location.reload();\r\n};\r\n\r\nexport default function Header({ setFilters, setIsPickmode, setNyamEditorTaskType }) {\r\n  return (\r\n    <HeaderWrap className=\"Header\">\r\n      <Logo onClick={handleUnload}>\r\n        <LogoImg src={LOGO_IMG} alt=\"logo Image\"></LogoImg>\r\n        <LogoText>냠냠랩</LogoText>\r\n      </Logo>\r\n\r\n      <Tools\r\n        setFilters={setFilters}\r\n        setIsPickmode={setIsPickmode}\r\n        setNyamEditorTaskType={setNyamEditorTaskType}\r\n      />\r\n    </HeaderWrap>\r\n  );\r\n}\r\n\r\n// style ========================================================\r\nconst HeaderWrap = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  padding: 10px 0px;\r\n\r\n  background-color: #333333;\r\n  color: #ffffff;\r\n`;\r\n\r\nconst Logo = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-contents: center;\r\n  padding: 0px 10px;\r\n\r\n  cursor: pointer;\r\n`;\r\n\r\nconst LogoImg = styled.img`\r\n  width: 48px;\r\n  height: 48px;\r\n`;\r\nconst LogoText = styled.h1`\r\n  margin: 0;\r\n  margin-left: 8px;\r\n  color: #ffffff;\r\n  font-family: \"Poor Story\", cursive;\r\n`;\r\n\r\n// function =====================================================\r\n// *\r\n","// imported Modules =============================================\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\n\r\n// imported components ==========================================\r\n// *\r\n\r\n// Main Component ===============================================\r\nexport default function ContentsTable({ desc, dataOrder, data }) {\r\n    // desc (문자열 Array) : thead에 표시할 텍스트를 차례로 나열한 문자열 배열\r\n    // dataOrder (객체 Array) : tbody의 각 row에서 [data]객체의 요소를 표시할 순서를 나열한 문자열 배열 \r\n    // data (객체 Array) : 원본데이터\r\n\r\n    return (\r\n        <ContentsTableWrap className=\"ContentsTable\">\r\n            <Table>\r\n                <tbody>\r\n                    <Row style={{borderWidth:\"2px\"}}>\r\n                    {\r\n                        desc.map( (el, index) => (\r\n                            <Th key={index}>{ el }</Th>\r\n                        ))\r\n                    }\r\n                    </Row>\r\n                </tbody>\r\n                \r\n                <tbody>\r\n                {\r\n                    data.map( (rowItem,index) => (\r\n                        <Row key={index}>\r\n                        {\r\n                            dataOrder.map( (colItem, index) => (\r\n                                <Td key={index}>{ rowItem[colItem] }</Td>\r\n                            ))\r\n                        }\r\n                        </Row>\r\n                    ))\r\n                }\r\n                </tbody>\r\n            </Table>\r\n        </ContentsTableWrap>\r\n    );\r\n}\r\n\r\n// style ========================================================\r\n//const SPACE = \"4px\";\r\nconst CELL_PADDING = \"8px\";\r\nconst BORDER_COLOR = \"#dbdbdb\";\r\n\r\nconst ContentsTableWrap = styled.div`\r\n    width : 100%;\r\n    border : 1px solid ${BORDER_COLOR};\r\n    border-bottom : 12px solid ${BORDER_COLOR};\r\n    border-radius : 8px;\r\n    `;\r\n\r\nconst Table = styled.table`\r\n    width : 100%;\r\n    text-align : center;\r\n    `;\r\n\r\nconst Row = styled.tr`\r\n    padding : ${CELL_PADDING};\r\n    border-bottom : 1px solid ${BORDER_COLOR};\r\n    `;\r\n\r\nconst Th = styled.th`\r\n    padding : ${CELL_PADDING};\r\n    `;\r\n\r\nconst Td = styled.td`\r\n    padding : ${CELL_PADDING};\r\n    `;\r\n// function =====================================================\r\n// *\r\n\r\n                ","// imported Modules =============================================\r\nimport { React, useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport { Popover, Button } from \"antd\"\r\nimport { DeleteOutlined } from \"@ant-design/icons\"\r\n\r\n// imported components ==========================================\r\n// *\r\n\r\n// Main Component ===============================================\r\nconst POPOVER_TITLE = \"정말로 지울까요?\";\r\n\r\nexport default function DeleteBtn({ setDeleteConfirm }) {\r\n    const [visible, setVisible] = useState(false);\r\n\r\n    const formContent = (\r\n        <div className=\"confirmContent\" style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n            <Button onClick={onConfirm} type=\"primary\" style={{ marginRight: \"4px\" }}>네</Button>\r\n            <Button onClick={onCancle}>아니요</Button>\r\n        </div>\r\n    );\r\n\r\n    function onConfirm() {\r\n        setDeleteConfirm(true);\r\n        setVisible(false);\r\n    }\r\n\r\n    function onCancle() {\r\n        setVisible(false);\r\n    }\r\n\r\n    return (\r\n        <DeleteBtnWrap className=\"DeleteBtn\">\r\n            <Popover\r\n                trigger=\"click\" visible={visible} onVisibleChange={(visible)=>{setVisible(visible)}}\r\n                placement=\"right\" title={POPOVER_TITLE} content={formContent} onClick={(e) => { setVisible(true); }}\r\n            >\r\n                <Button shape=\"circle\" icon={<DeleteOutlined />} />\r\n            </Popover>\r\n        </DeleteBtnWrap>\r\n    );\r\n}\r\n\r\n// style ========================================================\r\nconst DeleteBtnWrap = styled.div`\r\n\r\n    `;\r\n\r\n// function =====================================================\r\n// *","// imported Modules =============================================\r\nimport React, { useState, useEffect, useCallback } from 'react';\r\nimport axios from \"axios\";\r\n\r\nimport styled from 'styled-components';\r\nimport { Button, message, Tooltip } from \"antd\";\r\nimport { FormOutlined, QuestionCircleOutlined } from \"@ant-design/icons\"\r\n\r\n// imported components ==========================================\r\nimport ContentsTable from \"../../atoms/ContentsTable\";\r\nimport DeleteBtn from \"../../atoms/DeleteBtn\";\r\n\r\n// Main Component ===============================================\r\nexport default function MapsModalInfo({ labAccessInfo, selectedNyam, refreshMaps, setIsLoading, setMapsModalVisible, setNyamEditorModalVisible, setNyamEditorTaskType }) {\r\n    const [deleteConfirm, setDeleteConfirm] = useState(false);\r\n\r\n    const { accessManagerUrl, labId } = labAccessInfo;\r\n\r\n    const { open, close, description, menu } = selectedNyam;\r\n    const parsedMenu = JSON.parse(menu).menu;\r\n\r\n    const onDelete = useCallback(async () => {\r\n        setIsLoading(true);\r\n\r\n\r\n        const url = `${accessManagerUrl}?taskTarget=nyam&taskType=delete`;\r\n        const data = JSON.stringify({\r\n            nyam: selectedNyam,\r\n            labId: labId,\r\n        });\r\n\r\n        await axios.post(url, data);\r\n\r\n        await refreshMaps();\r\n        setMapsModalVisible(false);\r\n        setIsLoading(false);\r\n\r\n        message.success(\"냠이 역사의 뒤안길로 사라졌습니다\");\r\n    }, [setIsLoading, accessManagerUrl, labId, refreshMaps, selectedNyam, setMapsModalVisible]);\r\n\r\n    useEffect(() => {\r\n        if (deleteConfirm === true) {\r\n            onDelete();\r\n            setDeleteConfirm(false);\r\n        }\r\n    }, [deleteConfirm, onDelete]);\r\n\r\n\r\n\r\n    function openNyamEditor(e) {\r\n        setNyamEditorTaskType(\"edit\");\r\n        setMapsModalVisible(false);\r\n        setNyamEditorModalVisible(true);\r\n    }\r\n\r\n    return (\r\n        <MapsModalInfoWrap className=\"MapsModalInfo\">\r\n            {/* 우측 상단 도구 */}\r\n            <Tools>\r\n                <a href={`https://map.naver.com/v5/search/${removeSpace(selectedNyam.name)}`} target=\"_blank\" rel=\"noreferrer\">\r\n                    <Tooltip title=\"네이버지도\" placement=\"top\">\r\n                        <Button shape=\"circle\" icon={<QuestionCircleOutlined />} size=\"normal\" style={{ marginRight: SPACE }} />\r\n                    </Tooltip>\r\n                </a>\r\n                <Tooltip title=\"수정\" placement=\"top\">\r\n                    <Button shape=\"circle\" icon={<FormOutlined />} size=\"normal\" style={{ marginRight: SPACE }} onClick={openNyamEditor} />\r\n\r\n                </Tooltip>\r\n\r\n                <Tooltip title=\"삭제\" placement=\"top\">\r\n                    <DeleteBtn setDeleteConfirm={setDeleteConfirm} />\r\n                    {/* <Button shape=\"circle\" icon={<DeleteOutlined />} size=\"normal\" onClick={(e) => { onDelete(); }} /> */}\r\n                </Tooltip>\r\n            </Tools>\r\n\r\n            {/* 개요 */}\r\n            <Summary>\r\n                <div>\r\n                    <Title>영업시간</Title>\r\n                    <p>{open}~{close}</p>\r\n                </div>\r\n                <p style={{ marginLeft: \"8px\" }}>{description}</p>\r\n            </Summary>\r\n\r\n            {/* 메뉴목록 */}\r\n            <ContentsTable desc={[\"메뉴\", \"가격\"]} dataOrder={[\"name\", \"price\"]} data={parsedMenu} />\r\n        </MapsModalInfoWrap>\r\n    );\r\n}\r\n\r\n// style ========================================================\r\nconst SPACE = \"4px\";\r\n\r\nconst MapsModalInfoWrap = styled.div`\r\n    display : flex;\r\n    flex-direction : column;\r\n\r\n    flex : 1;\r\n    margin-right : ${\"8px\"}; \r\n\r\n    @media(max-width : 768px){\r\n        margin-right : 0;\r\n        margin-bottom : 8px;\r\n    }\r\n    `;\r\nconst Tools = styled.div`\r\n    display : flex;\r\n    justify-content : flex-end;\r\n    margin-bottom : ${SPACE};\r\n    `;\r\n\r\nconst Summary = styled.div`\r\n    display : flex;\r\n    `;\r\n\r\nconst Title = styled.p`\r\n    margin : 0;\r\n    font-weight : bold;\r\n    `;\r\n\r\n// function =====================================================\r\nfunction removeSpace(string) {\r\n    const str = string.split(' ').join('');\r\n    return str;\r\n}","// imported Modules =============================================\r\nimport React, {useState, useEffect} from 'react';\r\nimport styled from 'styled-components';\r\n\r\n// imported Components \r\nimport DeleteBtn from \"../../atoms/DeleteBtn\";\r\n\r\n// Main Component ===============================================\r\nexport default function Comment ({ index, content, onDelete }) {\r\n    const [deleteConfirm, setDeleteConfirm] = useState(false);\r\n    useEffect( () => {\r\n        if(deleteConfirm === true){\r\n            onDelete(index);\r\n            setDeleteConfirm(false);\r\n        }\r\n    }, [deleteConfirm, onDelete, index]);\r\n\r\n    return (\r\n        <CommentWrap className=\"Comment\">\r\n            <Content>{content}</Content>\r\n            <DeleteBtn setDeleteConfirm={setDeleteConfirm} />\r\n        </CommentWrap>\r\n    );\r\n}\r\n\r\n// style ========================================================\r\nconst SPACE = \"4px\";\r\n\r\nconst CommentWrap = styled.div`\r\n    display : flex;\r\n    justify-content : flex-end;\r\n\r\n    margin-top : ${SPACE};\r\n    `;\r\n\r\nconst Content = styled.p`\r\n    padding : ${SPACE};\r\n    border : 1px solid #DCDCDC;\r\n    border-radius : 8px;\r\n    margin : 0;\r\n    max-width : 100%;\r\n    margin-right : ${SPACE};\r\n    \r\n    word-break: break-all;\r\n    overflow-wrap: break-word;\r\n    `;\r\n\r\n// function =====================================================\r\n// *","// imported Modules =============================================\r\nimport React, { useCallback, useState } from 'react';\r\nimport axios from \"axios\";\r\n\r\nimport styled from 'styled-components';\r\n\r\nimport { Button, Tooltip, Input, Popover, message } from \"antd\";\r\nimport { EditOutlined, SmileOutlined } from \"@ant-design/icons\"\r\n\r\nimport Picker from 'emoji-picker-react';\r\n\r\n// imported components ==========================================\r\nimport Comment from \"./Comment\";\r\n\r\n// Main Component ===============================================\r\nexport default function MapsModalComment({ labAccessInfo, selectedNyam, refreshMaps, setIsLoading }) {\r\n    const [newComment, setNewComment] = useState('');\r\n    const commentsData = JSON.parse(selectedNyam.comment).comment;\r\n    const { accessManagerUrl, labId } = labAccessInfo;\r\n\r\n    async function onCreate(e) {\r\n        setIsLoading(true);\r\n\r\n        // 검증\r\n        if (newComment == null || newComment === '') {\r\n            setIsLoading(false);\r\n            return;\r\n        }\r\n\r\n        // 요청 데이터 준비`\r\n        const url = `${accessManagerUrl}?taskTarget=comment&taskType=edit`;\r\n        const data = JSON.stringify({\r\n            nyam: {\r\n                id: selectedNyam.id,\r\n                comment: JSON.stringify({ comment: [newComment, ...commentsData] }),\r\n            },\r\n            labId: labId,\r\n        });\r\n\r\n        // 요청\r\n        await axios.post(url, data);\r\n\r\n        // 리프레시\r\n        await refreshMaps();\r\n        setNewComment('');\r\n        message.success(\"의견이 작성되었습니다\")\r\n        setIsLoading(false);\r\n    }\r\n\r\n    const onDelete = useCallback(async (index) => {\r\n        setIsLoading(true);\r\n\r\n        // 요청 데이터 준비\r\n        const url = `${accessManagerUrl}?taskTarget=comment&taskType=edit`;\r\n        const data = JSON.stringify({\r\n            nyam: {\r\n                id: selectedNyam.id,\r\n                comment: JSON.stringify({ comment: [...commentsData.slice(0, index), ...commentsData.slice(index + 1)] }),\r\n            },\r\n            labId: labId,\r\n        });\r\n\r\n        // 요청\r\n        await axios.post(url, data);\r\n\r\n        // 리프레시\r\n        await refreshMaps();\r\n        message.success(\"의견이 삭제되었습니다\")\r\n        setIsLoading(false);\r\n    }, [accessManagerUrl, labId, selectedNyam, commentsData, setIsLoading, refreshMaps]);\r\n\r\n    return (\r\n        <MapsModalCommentWrap className=\"MapsModalComment\">\r\n            <Form>\r\n                <Input\r\n                    placeholder=\"새로운 의견을 적어주세요\"\r\n                    value={newComment} \r\n                    onChange={(e) => { setNewComment(e.target.value); }}\r\n                    onPressEnter={onCreate}\r\n\r\n                    style={{ borderRadius: \"8px\", marginRight: \"4px\" }}\r\n                    suffix={\r\n                        <Popover placement=\"bottom\" title={null} content={<Picker onEmojiClick={(e, obj) => { setNewComment(newComment + obj.emoji) }} />} trigger=\"click\">\r\n                            <Tooltip title=\"이모지\" placement=\"top\">\r\n                                <SmileOutlined />\r\n                            </Tooltip>\r\n                        </Popover>\r\n                    }\r\n                />\r\n\r\n                <Tooltip className=\"deleteComment\" title=\"쓰기\" placement=\"right\">\r\n                    <Button type=\"primary\" shape=\"circle\" icon={<EditOutlined />} size=\"normal\" onClick={onCreate} />\r\n                </Tooltip>\r\n            </Form>\r\n\r\n            <Comments>\r\n                {\r\n                    commentsData.map((item, index) => (\r\n                        <Comment key={index} index={index} content={item} onDelete={onDelete} />\r\n                    ))\r\n                }\r\n            </Comments>\r\n        </MapsModalCommentWrap>\r\n    );\r\n}\r\n\r\n// style ========================================================\r\nconst BORDER_COLOR = \"#dbdbdb\";\r\n\r\nconst MapsModalCommentWrap = styled.div`\r\n    display : flex;\r\n    flex-direction : column;\r\n\r\n    width : 40%;\r\n\r\n    margin-left : auto;\r\n    padding : 16px;\r\n\r\n    border : 1px solid ${BORDER_COLOR};\r\n    border-bottom : 12px solid ${BORDER_COLOR};\r\n    border-radius : 8px;\r\n\r\n    @media(max-width : 768px){\r\n        width : 100%;\r\n    }\r\n    `;\r\n\r\nconst Form = styled.div`\r\n    display :flex;\r\n    align-items : center;\r\n    `;\r\n\r\nconst Comments = styled.div`\r\n    display : flex;\r\n    flex-direction : column;\r\n    align-content : flex-end;\r\n    justify-content : flex-start;\r\n\r\n    height : 100%;\r\n\r\n    overflow-y: auto;\r\n    `;\r\n\r\n// function =====================================================\r\n// *","// imported Modules =============================================\r\nimport React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport { Modal } from 'antd';\r\n\r\n// imported components ==========================================\r\nimport MapsModalInfo from \"../followers/MapsModalInfo\";\r\nimport MapsModalComment from \"../followers/MapsModalComment\";\r\nimport Loading from \"../../../../ShareComponents/atoms/Loading\";\r\n\r\n// Main Component ===============================================\r\nexport default function MapsModal ({labAccessInfo, selectedNyam, refreshMaps, mapsModalVisible, setMapsModalVisible, setNyamEditorModalVisible, setNyamEditorTaskType}) {\r\n    const [ isLoading, setIsLoading ] = useState(false);\r\n\r\n    return (\r\n        selectedNyam != null\r\n            ?\r\n                <MapsModalWrap className=\"MapsModal\">\r\n                    <StyledModal\r\n                        title={selectedNyam.name}\r\n                        visible={mapsModalVisible}\r\n                        onCancel={() => { setMapsModalVisible(false) }}\r\n                        footer={null}\r\n                    >\r\n                        <ModalContentsWrap>\r\n                            <MapsModalInfo \r\n                                labAccessInfo={labAccessInfo} selectedNyam={selectedNyam} refreshMaps={refreshMaps} \r\n                                setIsLoading={setIsLoading} setMapsModalVisible={setMapsModalVisible} setNyamEditorModalVisible={setNyamEditorModalVisible} setNyamEditorTaskType={setNyamEditorTaskType}\r\n                            />\r\n                            <MapsModalComment labAccessInfo={labAccessInfo} selectedNyam={selectedNyam} refreshMaps={refreshMaps} setIsLoading={setIsLoading} />\r\n                        </ModalContentsWrap>\r\n\r\n                        <Loading isLoading={isLoading} />\r\n                    </StyledModal>\r\n                </MapsModalWrap>\r\n    \r\n            :   \r\n                <div></div>\r\n    );\r\n}\r\n\r\n// style ========================================================\r\nconst MapsModalWrap = styled.div`\r\n\r\n    `;\r\n\r\nconst ModalContentsWrap = styled.div`\r\n    display : flex;\r\n\r\n    @media(max-width : 768px){\r\n        flex-direction : column;\r\n    }\r\n`;\r\nconst StyledModal = styled(Modal)`\r\n    min-width : 50%;\r\n`;\r\n// function =====================================================\r\n// *","// imported Modules =============================================\r\nimport React, { useState, useEffect, useCallback } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\n\r\nimport { Modal, Input, TimePicker, Button, Divider, Select, message } from 'antd';\r\nimport { PlusOutlined, MinusOutlined } from \"@ant-design/icons\"\r\n\r\n// imported components\r\nimport Loading from \"../../../../ShareComponents/atoms/Loading\";\r\n\r\n// Main Component ===============================================\r\nimport DataStorage from \"../../../../DataStorage\";\r\nconst NYAM_TYPES = DataStorage(\"NYAM_TYPES\");\r\nconst NYAM_TYPES_KEY = DataStorage(\"NYAM_TYPES_KEY\");\r\n\r\nconst SUMMARY_INIT_VALUE = { name: null, description: null, open: null, close: null, type: null, lat: null, lng: null, comment: null };\r\nconst MENUITEM_INIT_VALUE = [{ name: '', price: '' }];\r\n\r\nexport default function NyamEditor({ labAccessInfo, taskType, pickCoord, defaultNyamValue, refreshMaps, nyamEditorModalVisible, setNyamEditorModalVisible, setIsPickmode, setMapsModalVisible }) {\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [resetLock, setResetLock] = useState(false); // 냠에디터를 닫았다 열었을 때, selectedNyam의 내용으로 초기화시킬지. ( false : 초기화함, true : 초기화 안함, null : 폼 업데이트됨 )\r\n\r\n    const [summary, setSummary] = useState(SUMMARY_INIT_VALUE);\r\n    const [menuItems, setMenuItems] = useState(MENUITEM_INIT_VALUE);\r\n\r\n    const { accessManagerUrl, labId } = labAccessInfo;\r\n    const title = (taskType === \"create\" ? \"새로운 냠 만들기\" : \"냠 수정하기\");\r\n\r\n    const initFormData = useCallback(() => {\r\n        if (taskType === \"edit\" && defaultNyamValue != null) {\r\n            // apply default value to \"summary\"\r\n            const tempSummary = { ...defaultNyamValue };\r\n            delete tempSummary.menu;\r\n            setSummary(tempSummary);\r\n\r\n            // apply default value to \"menuItems\"\r\n            let tempMenuItems = [];\r\n            tempMenuItems = (JSON.parse(defaultNyamValue.menu)).menu;\r\n            setMenuItems(tempMenuItems);\r\n\r\n        } else if (taskType === \"create\") {\r\n            setSummary({ ...SUMMARY_INIT_VALUE, lat: pickCoord.y, lng: pickCoord.x, comment: JSON.stringify({ \"comment\": [] }) });\r\n            setMenuItems(MENUITEM_INIT_VALUE)\r\n        }\r\n\r\n        setResetLock(null);\r\n    }, [defaultNyamValue, taskType, pickCoord]);\r\n\r\n    // 폼 초기값 지정.\r\n    useEffect(() => {\r\n        if (resetLock === false && nyamEditorModalVisible === true) {\r\n            initFormData();\r\n            setResetLock(null);\r\n        }\r\n    }, [resetLock, nyamEditorModalVisible, initFormData]);\r\n\r\n    // 좌표 수정 업데이트.\r\n    useEffect(() => {\r\n        if (nyamEditorModalVisible === true && resetLock === true) {\r\n            setSummary({ ...summary, lat: pickCoord.y, lng: pickCoord.x });\r\n            setResetLock(null);\r\n        }\r\n\r\n    }, [pickCoord, nyamEditorModalVisible, resetLock, summary])\r\n\r\n\r\n\r\n    // about onChange\r\n    function onChangeSummary(target, value) {\r\n        setSummary({ ...summary, [target]: value });\r\n    }\r\n    function onChangeMenuItems(index, type, value) {\r\n        setMenuItems([...menuItems.slice(0, index), { ...menuItems[index], [type]: value }, ...menuItems.slice(index + 1)]);\r\n    }\r\n\r\n    // add/remove menu item\r\n    function addNewMenuItem(index) { setMenuItems([...menuItems.slice(0, index), { name: '', price: '' }, ...menuItems.slice(index)]) }\r\n    function removeMenuItem(index) { setMenuItems([...menuItems.slice(0, index), ...menuItems.slice(index + 1)]); }\r\n\r\n    // about footer buttons.\r\n    function clearAll(e) {\r\n        const summaryReplace = {...SUMMARY_INIT_VALUE, id:summary.id, lat:summary.lat, lng:summary.lng, comment:summary.comment};\r\n\r\n        setSummary(summaryReplace);\r\n        setMenuItems(MENUITEM_INIT_VALUE);\r\n    }\r\n\r\n    async function onSubmit(e) {\r\n        setIsLoading(true);\r\n\r\n        const nyam = {};\r\n        Object.assign(nyam, summary);\r\n        \r\n        // 검증\r\n        for (let property of Object.keys(nyam)) {\r\n            if (nyam[property] === null || nyam[property] === \"\") {\r\n                message.warning(\"비어있는 정보를 채워넣어주세요!\");\r\n                setIsLoading(false);\r\n                return;\r\n            }\r\n        }\r\n\r\n        for (let item of menuItems) {\r\n            if (item.name === '' || item.price === '') {\r\n                message.warning(\"비어있는 정보를 채워넣어주세요!\");\r\n                setIsLoading(false);\r\n                return;\r\n            }\r\n        }\r\n\r\n        // 요청 데이터 준비\r\n        Object.assign(nyam, { \"menu\": JSON.stringify({ \"menu\": menuItems }) });\r\n        \r\n        try {\r\n            // 요청\r\n            const rawData = {\r\n                nyam : nyam,\r\n                labId : labId,\r\n            };\r\n            const data = JSON.stringify(rawData);\r\n            const url = `${accessManagerUrl}?taskTarget=nyam&taskType=${taskType}`;\r\n            await axios.post(url, data);\r\n\r\n            // 리프레시\r\n            await refreshMaps();\r\n            setNyamEditorModalVisible(false);\r\n            setResetLock(false);\r\n            setIsLoading(false);\r\n\r\n            // 완료메시지\r\n            if (taskType === \"create\") { message.success(\"새로운 냠을 만들었습니다!\"); }\r\n            else if (taskType === \"edit\") { message.success(\"냠이 수정되었습니다!\"); }\r\n        } catch (err) {\r\n            setIsLoading(false);\r\n            console.error(err);\r\n            message.error(\"앗, 뭔가 잘못됐습니다. 다시 시도해주세요\", 2.0);\r\n        }\r\n    }\r\n\r\n    function onClose(e) {\r\n        setNyamEditorModalVisible(false);\r\n        setResetLock(false);\r\n        if (taskType === \"edit\") {\r\n            setMapsModalVisible(true);\r\n        }\r\n    }\r\n\r\n    function onCoordEdit(e) {\r\n        message.info(\"냠의 새로운 위치를 정해주세요\", 5);\r\n        setResetLock(true);\r\n        setNyamEditorModalVisible(false);\r\n        setIsPickmode(true);\r\n    }\r\n\r\n    return (\r\n        <NyamEditorWrap className=\"NyamEditor\">\r\n            <Modal\r\n                title={title}\r\n                visible={nyamEditorModalVisible}\r\n                onCancel={onClose}\r\n                footer={null}\r\n            >\r\n                <SummaryWrap>\r\n                    <Divider>개요</Divider>\r\n\r\n                    <Coord>\r\n                        <span style={{ marginRight: \"8px\", textAlign: \"center\" }}>{`위도 ${summary.lat}`}</span>\r\n                        <span style={{ marginRight: \"8px\", textAlign: \"center\" }}>{`경도 ${summary.lng}`}</span>\r\n                        <Button onClick={onCoordEdit} >위치 수정</Button>\r\n                    </Coord>\r\n\r\n                    <StyledInput name=\"name\" placeholder=\"가게 이름\" value={summary.name} onChange={(e) => { onChangeSummary(e.target.name, e.target.value) }} />\r\n                    <StyledInput name=\"description\" placeholder=\"설명\" value={summary.description} onChange={(e) => { onChangeSummary(e.target.name, e.target.value) }} />\r\n\r\n                    <TimePickersWrap>\r\n                        <TimePicker\r\n                            name=\"openTime\" format=\"HH:mm\" placeholder=\"문 여는 시간\" value={summary.open ? moment(summary.open, \"HH:mm\") : null}\r\n                            onChange={(time, timeString) => { onChangeSummary(\"open\", timeString); }} style={{ flexGrow: \"1\", marginRight: SPACE }}\r\n                            minuteStep={5}\r\n                        />\r\n                        <TimePicker\r\n                            name=\"closeTime\" format=\"HH:mm\" placeholder=\"문 닫는 시간\" value={summary.close ? moment(summary.close, \"HH:mm\") : null}\r\n                            onChange={(time, timeString) => { onChangeSummary(\"close\", timeString); }} style={{ flexGrow: \"1\" }}\r\n                            minuteStep={5}\r\n                        />\r\n                    </TimePickersWrap>\r\n\r\n                    <Select placeholder=\"유형을 골라주세요\" value={summary.type} onChange={(value) => { onChangeSummary(\"type\", value); }}>\r\n                        {NYAM_TYPES_KEY.map((key, index) => (<Select.Option value={key} key={index}>{NYAM_TYPES[key]}</Select.Option>))}\r\n                    </Select>\r\n                </SummaryWrap>\r\n\r\n                <MenusWrap>\r\n                    <Divider>메뉴</Divider>\r\n\r\n                    {menuItems.map((item, index) => MenuItem(index, item.name, item.price, addNewMenuItem, removeMenuItem, onChangeMenuItems))}\r\n                    <StyledButton shape=\"circle\" icon={<PlusOutlined />} style={{}} onClick={(e) => { addNewMenuItem(menuItems.length) }} />\r\n\r\n                    <Divider />\r\n                </MenusWrap>\r\n\r\n                <ButtonsWrap>\r\n                    <Button type=\"link\" onClick={clearAll}>모두 지우기</Button>\r\n                    <Button onClick={onSubmit} style={{ marginLeft: \"auto\" }}>저장</Button>\r\n                </ButtonsWrap>\r\n\r\n                <Loading isLoading={isLoading} />\r\n            </Modal>\r\n        </NyamEditorWrap>\r\n    );\r\n}\r\n\r\n// style ========================================================\r\nconst SPACE = \"4px\";\r\n\r\n// -- antd redefined style\r\nconst StyledInput = styled(Input)`\r\n    margin-bottom : ${SPACE};\r\n    `;\r\n\r\nconst StyledButton = styled(Button)`\r\n    margin-right : ${SPACE};\r\n    `;\r\n\r\n// -- user defined style\r\nconst NyamEditorWrap = styled.div``;\r\n\r\nconst SummaryWrap = styled.div`\r\n    display : flex;\r\n    flex-direction : column;\r\n    align-items : stretch;\r\n    `;\r\n\r\nconst Coord = styled.div`\r\n    display : flex;\r\n    justify-content : flex-end;\r\n    align-items : center;\r\n\r\n    margin-bottom : ${SPACE}\r\n    `;\r\n\r\nconst TimePickersWrap = styled.div`\r\n    display : flex;\r\n    margin-bottom : ${SPACE}\r\n    `;\r\n\r\nconst MenusWrap = styled.div``;\r\n\r\nconst MenuItemWrap = styled.div`\r\n    display : flex;\r\n    `;\r\n\r\nconst ButtonsWrap = styled.div`\r\n    display : flex;\r\n    `;\r\n\r\n// function =====================================================\r\n// *\r\n\r\n// 유사 컴포넌트 ================================================\r\nfunction MenuItem(index, name, price, addNewMenuItem, removeMenuItem, onChangeMenuItems) {\r\n    return (\r\n        <MenuItemWrap key={index}>\r\n            <StyledButton shape=\"circle\" icon={<PlusOutlined />} style={{}} onClick={(e) => { addNewMenuItem(index); }} />\r\n            <StyledButton shape=\"circle\" icon={<MinusOutlined />} onClick={(e) => { removeMenuItem(index) }} />\r\n\r\n            <StyledInput placeholder=\"메뉴 이름\" value={name} style={{ marginRight: SPACE }} onChange={(e) => { onChangeMenuItems(index, \"name\", e.target.value); }} />\r\n            <StyledInput placeholder=\"메뉴 가격\" value={price} onChange={(e) => { onChangeMenuItems(index, \"price\", e.target.value); }} />\r\n        </MenuItemWrap>\r\n    )\r\n}\r\n","export default function naverMapsinit(setting) {\r\n    const { lat, lng, zoom } = setting;\r\n    \r\n    const mapOptions = {\r\n        center: new window.naver.maps.LatLng(lat, lng),\r\n        zoom: zoom,\r\n    };\r\n    const map = new window.naver.maps.Map(\"map\", mapOptions);\r\n\r\n    return map;\r\n}","import axios from \"axios\";\r\nimport { message } from \"antd\";\r\n\r\nexport default async function readContents(labAccessInfo) {\r\n    try {\r\n        const {accessManagerUrl, labId} = labAccessInfo;\r\n\r\n        const { data : {data, status} } = await axios.get(`${accessManagerUrl}?labId=${labId}`);\r\n\r\n        if(status!=='error'){\r\n            return { \r\n                rawNyamList : data.nyamList,\r\n                setting : data.setting[0],\r\n            };\r\n        } else {\r\n            throw new Error(`응답 status가 ${status}입니다.`);\r\n        }\r\n        \r\n    } catch (err) {\r\n        message.error({\r\n            content : '문제가 생겨 데이터를 받아오지 못했습니다.',\r\n            duration : 0,\r\n            key : 'readContents_01',\r\n            onClick : (e)=>{message.destroy('readContents_01');},\r\n        });\r\n        console.error(err);\r\n        return null;\r\n    }\r\n}","import { message } from \"antd\";\r\n\r\nexport default function createNyamMarkers (map, nyamTypes, nyamList, setMarkers, setNyams, setMapsModalVisible, setSelectedNyam) {\r\n    // initialize temp variable for states\r\n    const tempNyams = initWithNyamtype(nyamTypes);\r\n    const tempMarkers = initWithNyamtype(nyamTypes);\r\n    \r\n    // create markers\r\n    try {\r\n        nyamList.forEach( item => { \r\n            const marker = new window.naver.maps.Marker({\r\n                position : new window.naver.maps.LatLng(item.lat, item.lng),\r\n                map : map,\r\n                icon : {\r\n                    content: [\r\n                        '<div>',\r\n                            '<div style=\"background-color:rgba(255,255,255,0.8); padding:5px; border-radius:16px; border:1px solid #d9d9d9;\">',\r\n                                `<span style=\"white-space:nowrap;\">${item.name}</span>`,\r\n                            '</div>',\r\n                            `<img src=\"img/icons/svg/${item.type}.svg\">`,\r\n                        '</div>'\r\n                    ].join(''),\r\n    \r\n                    anchor: new window.naver.maps.Point(16, 48),\r\n                }\r\n            });\r\n    \r\n            marker.addListener(\"click\", (e) => {\r\n                const targetid = e.overlay[\"_nmarker_id\"];\r\n                const types = nyamTypes;\r\n    \r\n                for( let i = 0; i<types.length; i++){\r\n                    const type = types[i];\r\n                    let chk = false;\r\n                    for( let j=0; j<tempMarkers[type].length; j++ ){\r\n                        if ( targetid === tempMarkers[type][j][\"_nmarker_id\"] ){\r\n                            setSelectedNyam(tempNyams[type][j]);\r\n                            setMapsModalVisible(true);\r\n                            chk = true;\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (chk) { break; }\r\n                }\r\n            });\r\n    \r\n            tempNyams[item.type].push(item);\r\n            tempMarkers[item.type].push(marker);\r\n        });\r\n\r\n        setNyams(tempNyams);\r\n        setMarkers(tempMarkers);\r\n    } catch(err) {\r\n        console.error(err);\r\n        console.error(nyamList);\r\n        message.error({\r\n            content : '데이터를 표시하는 과정에 문제가 생겼습니다. 새로고침을 시도해주세요',\r\n            duration : 0,\r\n            key : 'createNyamMakers_01',\r\n            onClick : (e)=>{message.destroy('createNyamMakers_01');},\r\n        });\r\n    }\r\n}\r\n\r\n\r\nfunction initWithNyamtype (types) {\r\n    let obj = {};\r\n    types.forEach( category => {\r\n        obj[category] = [];\r\n    });\r\n\r\n    return obj;\r\n}","export default function createCenterMarker(map, setting) {\r\n    const { lat, lng } = setting;\r\n\r\n    //const marker = \r\n    new window.naver.maps.Marker({\r\n        position: new window.naver.maps.LatLng(lat, lng),\r\n        map: map,\r\n        icon: {\r\n          url : `img/icons/svg/center.svg`,\r\n          size: new window.naver.maps.Size(48, 48),\r\n          origin: new window.naver.maps.Point(0, 0),\r\n        }\r\n    });\r\n\r\n    return 0;\r\n}","// imported Modules =============================================\r\nimport { React, useState, useEffect } from \"react\";\r\nimport ScriptTag from \"react-script-tag\";\r\nimport styled from \"styled-components\";\r\n\r\n// imported components ==========================================\r\nimport MapsModal from \"./leaders/MapsModal\";\r\nimport NyamEditor from \"./followers/NyamEditor\";\r\nimport Loading from \"../../../ShareComponents/atoms/Loading\";\r\n\r\n// imported supporters ==========================================\r\nimport DataStorage from \"../../../DataStorage\";\r\nimport initNaverMaps from \"../supporters/initNaverMaps\";\r\nimport readContents from \"../supporters/readContents\";\r\nimport createNyamMarkers from \"../supporters/createNyamMarkers\";\r\nimport createCenterMarker from \"../supporters/createCenterMarker\";\r\nimport { message } from \"antd\";\r\n\r\n// Main Component ===============================================\r\nlet map = null; // naver maps object\r\n\r\nconst MAP_SOURCE = DataStorage(\"MAP_SOURCE\");\r\nconst NYAM_TYPES = DataStorage(\"NYAM_TYPES_KEY\");\r\n\r\nexport default function Maps({ filters, isPickmode, nyamEditorTaskType, setIsPickmode, setNyamEditorTaskType, labAccessInfo }) {\r\n    const [nyams, setNyams] = useState(null);\r\n    const [markers, setMarkers] = useState(null);\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [selectedNyam, setSelectedNyam] = useState(null);\r\n    const [pickCoord, setPickCoord] = useState({ x: 0, y: 0 }); // 새로 추가할 냠의 좌표값. { x : 123, y : 123 }\r\n\r\n    const [mapsModalVisible, setMapsModalVisible] = useState(false);\r\n    const [nyamEditorModalVisible, setNyamEditorModalVisible] = useState(false);\r\n\r\n    // 마커 visible 속성 변경\r\n    useEffect(() => {\r\n        if (markers !== null) {\r\n            setMarkersVisible(filters, setIsLoading, markers);\r\n        }\r\n    }, [filters, markers]);\r\n\r\n    // 마커위치 선택\r\n    useEffect(() => {\r\n        if (map != null) {\r\n            if (isPickmode === true) {\r\n                map.setCursor(\"Crosshair\");\r\n                const listener = window.naver.maps.Event.addListener(map, 'click', function (e) { // 클릭이 들어왔으면\r\n                    if (isPickmode === true) {\r\n                        const { x, y } = e.coord;\r\n                        setPickCoord({ x, y }); // 좌표값 저장하고\r\n                        setIsPickmode(false); // 선택모드 끄고\r\n                        setNyamEditorModalVisible(true); // 냠에디터 켜\r\n                        window.naver.maps.Event.removeListener(listener);\r\n                    }\r\n                });\r\n            } else if (isPickmode === false) {\r\n                map.setCursor(\"Move\");\r\n            }\r\n        }\r\n    }, [isPickmode, setIsPickmode]);\r\n\r\n    // 지도 refreshMaps() 된다음, selectedNyam내용 업데이트\r\n    useEffect(() => {\r\n        if (selectedNyam != null) {\r\n            const { type, id } = selectedNyam;\r\n            const index = nyams[type].findIndex(nyam => nyam.id === id)\r\n            setSelectedNyam(nyams[type][index]);\r\n        }\r\n    }, [nyams, selectedNyam]);\r\n\r\n    async function refreshMaps() {\r\n        // 기존의 마커 모두 삭제하기\r\n        for (let arr of Object.values(markers)) {\r\n            arr.forEach(marker => {\r\n                marker.setMap(null);\r\n            });\r\n        }\r\n\r\n        // 다시 만들기\r\n        const { rawNyamList, setting } = await readContents(labAccessInfo);\r\n        createNyamMarkers(map, NYAM_TYPES, rawNyamList, setMarkers, setNyams, setMapsModalVisible, setSelectedNyam);\r\n        createCenterMarker(map, setting);\r\n        // 이후 바로 위 useEffect에서 selectedNyam 내용 갱신.\r\n    }\r\n\r\n    return (\r\n        <MapsWrap className=\"Maps\">\r\n            <ScriptTag\r\n                type=\"text/javascript\" src={MAP_SOURCE}\r\n                onLoad={async () => {\r\n                    setIsLoading(true);\r\n                    const contents = await readContents(labAccessInfo);\r\n                    if (!contents) {\r\n                        setIsLoading(false);\r\n                        return;\r\n                    }\r\n                    const { rawNyamList, setting } = contents;\r\n                    \r\n                    map = initNaverMaps(setting);\r\n                    createNyamMarkers(map, NYAM_TYPES, rawNyamList, setMarkers, setNyams, setMapsModalVisible, setSelectedNyam);\r\n                    createCenterMarker(map, setting);\r\n                    \r\n                    message.destroy();\r\n                    message.success('연구소의 모든 내용을 잘 불러왔어요!')\r\n                    setIsLoading(false);\r\n                }}\r\n            />\r\n            <Map id=\"map\"></Map>\r\n\r\n            <MapsModal\r\n                labAccessInfo={labAccessInfo} selectedNyam={selectedNyam}\r\n                refreshMaps={refreshMaps}\r\n                mapsModalVisible={mapsModalVisible} setMapsModalVisible={setMapsModalVisible}\r\n                setNyamEditorModalVisible={setNyamEditorModalVisible} setNyamEditorTaskType={setNyamEditorTaskType}\r\n            />\r\n\r\n            <NyamEditor\r\n                labAccessInfo={labAccessInfo} taskType={nyamEditorTaskType} pickCoord={pickCoord} defaultNyamValue={selectedNyam}\r\n                refreshMaps={refreshMaps}\r\n                nyamEditorModalVisible={nyamEditorModalVisible} setNyamEditorModalVisible={setNyamEditorModalVisible}\r\n                setIsPickmode={setIsPickmode} setMapsModalVisible={setMapsModalVisible}\r\n            />\r\n\r\n            <Loading isLoading={isLoading} />\r\n        </MapsWrap>\r\n    );\r\n}\r\n\r\n// style ========================================================\r\nconst MapsWrap = styled.div`\r\n    display : flex;\r\n    flex : 1;\r\n    `;\r\n\r\nconst Map = styled.div`\r\n    width: 100%;\r\n    height : 100%;\r\n    `;\r\n\r\n// function =====================================================\r\nfunction setMarkersVisible(filters, setIsLoading, markers) {\r\n    setIsLoading(true);\r\n\r\n    const types = NYAM_TYPES; // 정의되어있는 type배열 불러오기\r\n\r\n    types.forEach(type => {\r\n        const target = markers[type]; // markers의 한 type을 대상으로 정함\r\n        if (target.length === 0) { return; } // 대상이 비어있으면 바로 함수종료\r\n\r\n        const dest = filters[type]; // 업데이트 하려고 하는 값\r\n        if (target[0].getVisible() !== dest) { // target안의 첫번째 마커의 visible속성과, 업데이트 하려고 하는 값이 다르면 (어차피 첫번째 마커 visible값이랑, 전체 마커 visible값이랑 똑같을거기 때문)\r\n            target.forEach(marker => { marker.setVisible(dest); }); // 업데이트!\r\n            return;\r\n        }\r\n    });\r\n\r\n    setIsLoading(false);\r\n}","// imported Modules =============================================\r\nimport React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n//import {notification} from \"antd\";\r\n\r\n// imported components ==========================================\r\nimport Header from \"./components/Header/Header\";\r\nimport Maps from \"./components/Maps/Maps\";\r\nimport Footer from \"../ShareComponents/atoms/Footer\";\r\n\r\n// Main Component ===============================================\r\nimport DataStorage from \"../DataStorage\";\r\nconst ROUTE = DataStorage(\"ROUTE\"); // HOME, APP\r\n\r\nexport default function App({ labAccessInfo, setLabAccessInfo }) {\r\n  const [filters, setFilters] = useState({});\r\n  const [isPickmode, setIsPickmode] = useState(false); // 현재 '새로운 냠'버튼을 눌러 새로운 위치를 찍는 상태인지\r\n  const [nyamEditorTaskType, setNyamEditorTaskType] = useState(null); // 냠에디터 taskType : create / edit\r\n\r\n  window.onbeforeunload = (e) => {\r\n    var message = \"메인으로 돌아가시겠습니까?\";\r\n    if (typeof e == \"undefined\") {\r\n      e = window.event;\r\n    }\r\n    if (e) {\r\n      e.returnValue = message;\r\n    }\r\n    return message;\r\n  };\r\n\r\n  window.onunload = () => {\r\n    setLabAccessInfo(ROUTE.HOME);\r\n  };\r\n\r\n  return (\r\n    <AppWrap className=\"App\" style={{ cursor: isPickmode ? \"Crosshair\" : \"auto\" }}>\r\n      <Header\r\n        setFilters={setFilters}\r\n        setIsPickmode={setIsPickmode}\r\n        setNyamEditorTaskType={setNyamEditorTaskType}\r\n      />\r\n      <Maps\r\n        filters={filters}\r\n        isPickmode={isPickmode}\r\n        setIsPickmode={setIsPickmode}\r\n        nyamEditorTaskType={nyamEditorTaskType}\r\n        setNyamEditorTaskType={setNyamEditorTaskType}\r\n        labAccessInfo={labAccessInfo}\r\n      />\r\n      <Footer />\r\n    </AppWrap>\r\n  );\r\n}\r\n\r\n// style ========================================================\r\nconst AppWrap = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n`;\r\n","// imported Modules =============================================\r\nimport React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\n// imported components ==========================================\r\nimport Home from \"./Home/Home\";\r\nimport App from \"./App/App\";\r\n\r\n// Main Component ===============================================\r\nimport DataStorage from \"./DataStorage\";\r\nconst ROUTE = DataStorage(\"ROUTE\"); // HOME, APP\r\n\r\nexport default function NyamNyamLab() {\r\n  const [route, setRoute] = useState(ROUTE.HOME);\r\n  const [labAccessInfo, setLabAccessInfo] = useState(null); // labId, accessManagerUrl\r\n\r\n  useEffect(() => {\r\n    if (labAccessInfo) setRoute(ROUTE.APP);\r\n    else setRoute(ROUTE.HOME);\r\n  }, [labAccessInfo]);\r\n\r\n  return (\r\n    <NyamNyamLabWrap className=\"NyamNyamLab\">\r\n      {route === ROUTE.HOME && <Home setRoute={setRoute} setLabAccessInfo={setLabAccessInfo} />}\r\n      {route === ROUTE.APP && <App setRoute={setRoute} labAccessInfo={labAccessInfo} />}\r\n    </NyamNyamLabWrap>\r\n  );\r\n}\r\n\r\n// style ========================================================\r\nconst NyamNyamLabWrap = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\n// function =====================================================\r\n// *\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './index.css';\r\nimport NyamNyamLab from './NyamNyamLab';\r\n\r\nReactDOM.render(\r\n    // <React.StrictMode>\r\n    //   <App />\r\n    // </React.StrictMode>,\r\n    \r\n    <NyamNyamLab />,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}