{"version":3,"sources":["DataStorage.js","components/followers/Header/Menu.js","components/Header.js","components/atoms/Loading.js","components/followers/Maps/NyamEditor.js","components/followers/Maps/MapsModalInfo.js","components/atoms/Comment.js","components/followers/Maps/MapsModalComment.js","components/followers/Maps/MapsModal.js","components/suppoters/naverMapsInit.js","components/suppoters/naverMapsSetNyams.js","components/Maps.js","components/Footer.js","App.js","index.js"],"names":["DataStorage","key","NYAM_TYPES","korea","china","japan","fastfood","cvs","cafe","NYAM_TYPES_KEY","NYAM_LIST_SOURCE","Menu","setFilters","setIsPickmode","useState","arr","obj","forEach","el","initChecked","checked","setChecked","useEffect","MenuWrap","className","placement","title","content","filterContent","e","target","nyamType","trigger","MenuButton","shape","icon","FilterOutlined","createNyamContent","PlusOutlined","style","marginLeft","onClick","onChange","styld","display","flexDirection","map","margin","styled","div","Button","Header","isPickmode","HeaderWrap","Logo","h1","Loading","isLoading","LoadingWrap","Backdrop","spinning","size","indicator","LoadingOutlined","fontSize","spin","SUMMARY_INIT_VALUE","name","description","open","close","type","lat","lng","comment","MENUITEM_INIT_VALUE","price","NyamEditor","pickCoord","taskType","defaultNyamValue","refreshMaps","nyamEditorModalVisible","setNyamEditorModalVisible","setIsLoading","summary","setSummary","menuItems","setMenuItems","summaryOnChange","value","menuItemOnChange","index","slice","removeMenuItem","a","data","Object","assign","JSON","stringify","y","x","keys","i","length","console","log","strData","axios","post","tempSummary","menu","tempMenuItems","parse","NyamEditorWrap","visible","onCancel","footer","SummaryWrap","StyledInput","placeholder","TimePickersWrap","format","moment","time","timeString","flexGrow","marginRight","SPACE","minuteStep","Option","MenusWrap","item","MenuItemWrap","StyledButton","MinusOutlined","MenuItem","ButtonsWrap","Input","MapsModalInfo","nyamListSource","selectedNyam","setMapsModalVisible","parsedMenu","MapsModalInfoWrap","Tools","href","rel","QuestionCircleOutlined","FormOutlined","DeleteOutlined","handleDelete","Summary","Title","header","bordered","dataSource","renderItem","Item","borderRadius","p","url","Comment","onDelete","CommentWrap","Content","MapsModalComment","newComment","setNewComment","commentsData","id","MapsModalCommentWrap","Form","EditOutlined","Comments","EmptyNoti","MapsModal","mapsModalVisible","MapsModalWrap","StyledModal","ModalContentsWrap","Modal","naverMapsinit","mapValues","center","zoom","mapOptions","window","naver","maps","LatLng","Map","naverMapsSetNyams","setMarkers","setNyams","setSelectedNyam","tempNyams","initWithNyamtype","nyamTypes","tempMarkers","readNyamList","nyamList","org","shift","org_marker","Marker","position","Size","origin","Point","cnt","marker","join","scaledSize","anchor","addListener","targetid","overlay","types","chk","j","push","setZIndex","src","get","category","mapSource","Maps","filters","nyams","markers","setPickCoord","values","setMap","setMarkersVisible","setCursor","listener","Event","coord","removeListener","findIndex","nyam","MapsWrap","onLoad","dest","getVisible","setVisible","Footer","FooterWrap","Group","App","AppWrap","cursor","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2ce782d0.chunk.js","sourcesContent":["// [경고] 임시적인 사용자설정 보관소 - 나중에 다른 방법으로 대체필요\nexport default function DataStorage (key) {\n    const data = {\n        NYAM_TYPES : {\n            korea : \"한식\",\n            china : \"중식\",\n            japan : \"일식\",\n            fastfood : \"패스트푸드\",\n            cvs : \"편의점\",\n            cafe : \"카페\",\n        }, \n        NYAM_TYPES_KEY : [\"korea\", \"china\", \"japan\", \"fastfood\", \"cvs\", \"cafe\"],\n        NYAM_LIST_SOURCE : \"https://script.google.com/macros/s/AKfycbyuACrtmBSgcaehSnfbDVhSAMeScTP455Z44h4jtjxRGxJ5UNeVdOEh/exec\",\n    }\n\n    return data[key];\n}","// imported Modules =============================================\nimport { React, useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Checkbox, Popover, Button, Tooltip } from \"antd\";\nimport { FilterOutlined, PlusOutlined } from \"@ant-design/icons\"\nimport 'antd/dist/antd.css';\n\n// imported Components ==========================================\n// *\n\n/* ******************************************* */\n// [경고] 임시적인 사용자설정 보관소 - 나중에 다른 방법으로 대체필요\nimport DataStorage from \"../../../DataStorage\"; \nconst NYAM_TYPES = DataStorage(\"NYAM_TYPES\");\nconst NYAM_TYPES_KEY = DataStorage(\"NYAM_TYPES_KEY\");\n// [경고] 임시적인 사용자설정 보관소 - 나중에 다른 방법으로 대체필요\n/* ******************************************* */\n\n// Main Component ===============================================\nexport default function Menu ({ setFilters, setIsPickmode }) {\n    const [checked, setChecked] = useState( initChecked(NYAM_TYPES_KEY) );\n\n    useEffect ( () => { \n        setFilters(checked); \n    }, [checked, setFilters]);\n\n    function onChange(e) { setChecked({ ...checked, [e.target.nyamType] : e.target.checked }) }\n\n    return (\n        <MenuWrap className=\"Menu\">\n            {/* 냠 필터링 */}\n            <Popover placement=\"bottom\" title={\"냠 필터링\"} content={filterContent(onChange, checked)} trigger=\"click\">\n                <Tooltip title=\"냠 필터링\" placement=\"left\">\n                    <MenuButton shape=\"circle\" icon={<FilterOutlined />} />\n                </Tooltip>\n            </Popover>\n\n            {/* 새로운 냠 */}\n            <Popover placement=\"bottom\" title={\"새로운 냠 만들기\"} content={createNyamContent} trigger=\"click\">\n                <Tooltip title=\"새로운 냠\" placement=\"right\">\n                    <MenuButton shape=\"circle\" icon={<PlusOutlined />} style={{marginLeft:\"8px\"}} onClick={ () => { setIsPickmode(true); }} />\n                </Tooltip>\n            </Popover>\n        </MenuWrap>\n    );\n}\n\nfunction filterContent(onChange, checked) {\n    return (\n        <div className=\"filterContent\" styld={{display:\"flex\", flexDirection:\"column\"}}>\n        {\n            NYAM_TYPES_KEY.map( (key) => (\n                <div><Checkbox onChange={onChange} checked={checked[key]} nyamType={key} key={key}>{NYAM_TYPES[key]}</Checkbox></div>\n            ))\n        }\n        </div>\n    )\n}\n\nconst createNyamContent = (\n    <div>\n        <p style={{margin:\"0\"}}><strong>지도에서 새로운 남의 위치를 찍어주세요</strong></p>\n        {/* <p style={{margin:\"0\"}}>버튼을 다시누르면 '새로운 냠 만들기'가 취소됩니다</p> */}\n    </div>\n);\n    \n// style ========================================================\nconst MenuWrap = styled.div`\n    display : flex;\n    justify-contents : center;\n    align-items : center;\n\n    padding : 10px 0px;\n\n    background-color : #333333;\n    color : #FFFFFF;\n    `;\n\nconst MenuButton = styled(Button)`\n    border : 0;\n    `;\n\n// function =====================================================\nfunction initChecked(arr) {\n    let obj = {};\n    arr.forEach( el => {\n        obj[el] = true;\n    });\n\n    return obj;\n}","// imported Modules =============================================\nimport { React } from 'react';\nimport styled from 'styled-components';\n\n// imported components ==========================================\nimport Menu from \"./followers/Header/Menu\";\n\n// Main Component ===============================================\nexport default function Header ({ setFilters, isPickmode, setIsPickmode }) {\n    return (\n        <HeaderWrap className=\"Header\">\n            <Logo>냠냠랩(TEST)</Logo>\n            <Menu setFilters={setFilters} isPickmode={isPickmode} setIsPickmode={setIsPickmode} />\n        </HeaderWrap>\n    );\n}\n\n// style ========================================================\nconst HeaderWrap = styled.div`\n    display : flex;\n    align-items : center;\n\n    padding : 10px 0px;\n\n    background-color : #333333;\n    color : #FFFFFF;\n    `;\n\nconst Logo = styled.h1`\n    margin : 0;\n    padding : 10px 20px;\n    color : #FFFFFF;\n    font-family: 'Poor Story', cursive;\n    `;\n\n// function =====================================================\n// *","// imported Modules =============================================\nimport { React } from \"react\";\n\nimport styled from \"styled-components\";\nimport { Spin } from 'antd';\nimport { LoadingOutlined } from '@ant-design/icons';\nimport 'antd/dist/antd.css';\n\n// Main Component ===============================================\nexport default function Loading ({ isLoading }) {\n    \n    if ( isLoading ){\n        return (\n            <LoadingWrap className=\"Loading\">\n                <Backdrop></Backdrop>\n                <Spin spinning={isLoading} size=\"large\" indicator={<LoadingOutlined style={{ fontSize: 64 }} spin />} />\n            </LoadingWrap>\n        );\n    } else {\n        return <div className=\"Loading\"></div>;\n    }\n   \n}\n\n// style ========================================================\nconst LoadingWrap = styled.div`\n    position : fixed;\n    top : 0; \n    left : 0;\n\n    display : flex;\n    justify-content : center;\n    align-items : center;\n\n    width : 100%; \n    height : 100%;\n    `;\n\nconst Backdrop = styled.div`\n    position : fixed;\n    top : 0; \n    left : 0;\n\n    width : 100%;\n    height : 100%;\n\n    background-color : rgba(0,0,0, 0.75);\n    `;","// imported Modules =============================================\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport axios from \"axios\";\nimport moment from \"moment\";\n\nimport { Modal, Input, TimePicker, Button, Tooltip, Divider, Select } from 'antd';\nimport { PlusOutlined, MinusOutlined } from \"@ant-design/icons\"\n\n// imported components\nimport Loading from \"../../atoms/Loading\";\n\n/* ******************************************* */\n// [경고] 임시적인 사용자설정 보관소 - 나중에 다른 방법으로 대체필요\nimport DataStorage from \"../../../DataStorage\"; \nconst NYAM_TYPES = DataStorage(\"NYAM_TYPES\");\nconst NYAM_TYPES_KEY = DataStorage(\"NYAM_TYPES_KEY\");\nconst NYAM_LIST_SOURCE = DataStorage(\"NYAM_LIST_SOURCE\");\n// [경고] 임시적인 사용자설정 보관소 - 나중에 다른 방법으로 대체필요\n/* ******************************************* */\n\n// Main Component ===============================================\n\nconst SUMMARY_INIT_VALUE = { name:null, description:null, open:null, close:null, type:null, lat:null, lng:null, comment:null };\nconst MENUITEM_INIT_VALUE = [ {name:null, price:null} ];\n\nexport default function NyamEditor ({ title, pickCoord, taskType, defaultNyamValue, refreshMaps, nyamEditorModalVisible, setNyamEditorModalVisible }) {\n    const [isLoading, setIsLoading] = useState(false);\n    \n    const [summary, setSummary] = useState(SUMMARY_INIT_VALUE);\n    const [menuItems, setMenuItems] = useState(MENUITEM_INIT_VALUE);\n\n    useEffect( () => {\n        if(taskType===\"edit\" && defaultNyamValue!=null){\n            // apply default value to \"summary\"\n            let tempSummary = {};\n            Object.assign(tempSummary, defaultNyamValue);\n            delete tempSummary.menu;\n            setSummary(tempSummary);\n\n            // apply default value to \"menuItems\"\n            let tempMenuItems = [];\n            tempMenuItems = ( JSON.parse(defaultNyamValue.menu) ).menu;\n            setMenuItems(tempMenuItems);\n        }\n    }, [defaultNyamValue, taskType]);\n\n    // about onChange\n    function summaryOnChange(target, value) { \n        setSummary({ ...summary, [target]:value }); \n    }\n    function menuItemOnChange(index, type, value) { \n        setMenuItems([ ...menuItems.slice(0,index), { ...menuItems[index], [type] : value } , ...menuItems.slice(index+1)]);\n    }\n    \n    // add/remove menu item\n    function addNewMenuItem(e) { setMenuItems([ ...menuItems, {name:'', price:''} ]) }\n    function removeMenuItem(index) { setMenuItems([ ...menuItems.slice(0,index), ...menuItems.slice(index+1)]); }\n\n    // about footer buttons.\n    function clearAll(e) {\n        setSummary(SUMMARY_INIT_VALUE);\n        setMenuItems(MENUITEM_INIT_VALUE);\n    }\n    \n    async function onSubmit(e) { \n        setIsLoading(true);\n\n        const data = {};\n        Object.assign(data, summary);\n        \n        // 요청 데이터 준비\n        if (taskType===\"create\") {\n            Object.assign(data, { \"comment\" : JSON.stringify({ \"comment\" : [] }) } );\n            data.lat = pickCoord.y;\n            data.lng = pickCoord.x;\n        } else if (taskType===\"edit\") {\n\n        }\n        Object.assign(data, { \"menu\" : JSON.stringify({ \"menu\" : menuItems }) } );\n        \n        // 검증\n        const keys = Object.keys(data);\n        for(let i=0; i<keys.length; i++){\n            if(data[keys[i]] === null || data[keys[i]] === \"\"){ \n                console.log('통과하지못했음');\n                setIsLoading(false);\n                return; \n            }\n        }\n        \n        // 요청\n        const strData = JSON.stringify(data);\n        await axios.post(`${NYAM_LIST_SOURCE}?taskTarget=nyam&taskType=${taskType}`, strData);\n\n        // 리프레시\n        await refreshMaps();\n        setNyamEditorModalVisible(false);\n        setIsLoading(false);\n    }\n\n    return (\n        <NyamEditorWrap className=\"NyamEditor\">\n            <Modal\n                title={title}\n                visible={nyamEditorModalVisible}\n                onCancel={() => { setNyamEditorModalVisible(false) }}\n                footer={null}\n            >\n                <SummaryWrap>\n                    <Divider>개요</Divider>\n\n                    <StyledInput name=\"name\" placeholder=\"가게 이름\" value={summary.name} onChange={ (e)=>{summaryOnChange(e.target.name, e.target.value)} } />\n                    <StyledInput name=\"description\" placeholder=\"설명\" value={summary.description} onChange={ (e)=>{summaryOnChange(e.target.name, e.target.value)} } />\n                    \n                    <TimePickersWrap>\n                        <TimePicker \n                            name=\"openTime\" format=\"HH:mm\" placeholder=\"문 여는 시간\" value={ summary.open ? moment(summary.open, \"HH:mm\") : null }\n                            onChange={ (time, timeString)=>{summaryOnChange(\"open\",timeString);} } style={{flexGrow:\"1\", marginRight:SPACE}} \n                        />\n                        <TimePicker \n                            name=\"closeTime\" format=\"HH:mm\" placeholder=\"문 닫는 시간\" value={ summary.close ? moment(summary.close, \"HH:mm\") : null } \n                            onChange={ (time, timeString)=>{summaryOnChange(\"close\",timeString);} } style={{flexGrow:\"1\"}} \n                            minuteStep={5}\n                        />\n                    </TimePickersWrap>\n\n                    <Select placeholder=\"유형을 골라주세요\" value={summary.type} onChange={ (value)=>{summaryOnChange(\"type\", value);} }>\n                        { NYAM_TYPES_KEY.map( (key, index) => ( <Select.Option value={key} key={index}>{NYAM_TYPES[key]}</Select.Option> ) ) }\n                    </Select>\n                </SummaryWrap>\n                \n                <MenusWrap>\n                    <Divider>메뉴</Divider>\n                    \n                    { \n                        menuItems.map( (item, index) => MenuItem(index, item.name, item.price, removeMenuItem, menuItemOnChange) )\n                    }\n\n                    <Tooltip className=\"deleteComment\" title=\"메뉴 추가\" placement=\"left\">\n                        <StyledButton shape=\"circle\" icon={<PlusOutlined />} style={{}} onClick={addNewMenuItem} />\n                    </Tooltip>\n                    <Divider />\n                </MenusWrap>\n                \n                <ButtonsWrap>\n                    <Button type=\"link\" onClick={clearAll}>모두 지우기</Button>\n                    <Button onClick={onSubmit} style={{marginLeft:\"auto\"}}>가즈아</Button>\n                </ButtonsWrap>\n                \n                <Loading isLoading={isLoading} />\n            </Modal>\n        </NyamEditorWrap>\n    );\n}\n\n// style ========================================================\nconst SPACE = \"4px\";\n\n// -- antd redefined style\nconst StyledInput = styled(Input)`\n    margin-bottom : ${SPACE};\n    `;\n\nconst StyledButton = styled(Button)`\n    margin-right : ${SPACE};\n`;\n\n// -- user defined style\nconst NyamEditorWrap = styled.div``;\n\nconst SummaryWrap = styled.div`\n    display : flex;\n    flex-direction : column;\n    align-items : stretch;\n    `;\n\nconst TimePickersWrap = styled.div`\n    display : flex;\n    margin-bottom : ${SPACE}\n    `;\n\nconst MenusWrap = styled.div``;\n\nconst MenuItemWrap = styled.div`\n    display : flex;\n    `;\n\nconst ButtonsWrap = styled.div`\n    display : flex;\n    `;\n\n// const Title = styled.span`\n//     font-weight : bold;\n//     margin-right : ${SPACE};\n//     `;\n\n// function =====================================================\n// *\n\n// 유사 컴포넌트 ================================================\nfunction MenuItem(index, name, price, removeMenuItem, menuItemOnChange) {\n    return (\n        <MenuItemWrap key={index}>\n            <Tooltip className=\"deleteComment\" title=\"크큭.. 없.앤.다.\" placement=\"left\">\n                <StyledButton shape=\"circle\" icon={<MinusOutlined />} onClick={(e) => { removeMenuItem(index) }} />\n            </Tooltip>\n            <StyledInput placeholder=\"메뉴 이름\" value={name} style={{marginRight:SPACE}} onChange={(e) => {menuItemOnChange(index,\"name\", e.target.value);}} />\n            <StyledInput placeholder=\"메뉴 가격\" value={price} onChange={(e) => {menuItemOnChange(index, \"price\", e.target.value);}} />\n        </MenuItemWrap>\n    )\n}\n","// imported Modules =============================================\nimport React, { useState } from 'react';\nimport axios from \"axios\";\n\nimport styled from 'styled-components';\n\n\nimport { List, Button, Tooltip } from \"antd\";\nimport { FormOutlined, DeleteOutlined, QuestionCircleOutlined } from \"@ant-design/icons\"\n\n// imported components ==========================================\nimport NyamEditor from \"./NyamEditor\";\n\n// Main Component ===============================================\nexport default function MapsModalInfo ({ nyamListSource, selectedNyam, refreshMaps, setIsLoading, setMapsModalVisible }) {\n    const [ nyamEditorModalVisible, setNyamEditorModalVisible ] = useState(false);\n\n    const { open, close, description, menu } = selectedNyam;\n    const parsedMenu = JSON.parse(menu).menu;\n\n    return (\n        <MapsModalInfoWrap className=\"MapsModalInfo\">\n            <Tools>\n                <a href={`https://map.naver.com/v5/search/${selectedNyam.name}`} target=\"_blank\" rel=\"noreferrer\">\n                    <Tooltip title=\"네이버지도\" placement=\"top\">\n                        <Button shape=\"circle\" icon={<QuestionCircleOutlined />} size=\"normal\" style={{marginRight:SPACE}} />\n                    </Tooltip>\n                </a>\n                <Tooltip title=\"수정\" placement=\"top\">\n                    <Button shape=\"circle\" icon={<FormOutlined />} size=\"normal\" onClick={(e)=>{setNyamEditorModalVisible(true);}} style={{marginRight:SPACE}} />\n                </Tooltip>\n                <Tooltip title=\"크큭..없.앤.다.\" placement=\"top\">\n                    <Button shape=\"circle\" icon={<DeleteOutlined />} size=\"normal\" onClick={(e)=>{handleDelete(nyamListSource, selectedNyam, setIsLoading, setMapsModalVisible, refreshMaps);}} />\n                </Tooltip>\n            </Tools>\n\n            <Summary>\n                <div>\n                    <Title>영업시간</Title> \n                    <p>{open}~{close}</p>\n                </div>\n                <p style={{marginLeft:\"8px\"}}>{description}</p>\n            </Summary>\n\n            <MenuWrap>\n                <Title>메뉴</Title>\n                <List\n                    size=\"small\"\n                    header={null}\n                    footer={null}\n                    bordered\n                    dataSource={parsedMenu.map( item => ( <div>{item.name} <b>{item.price}</b></div> ) )}\n                    renderItem={(item, index) => <List.Item key={index}>{item}</List.Item>}\n                    style={{borderRadius:\"8px\"}}\n                />\n            </MenuWrap>\n\n            <NyamEditor \n                title=\"냠 수정하기\" pickCoord={null} taskType=\"edit\" defaultNyamValue={selectedNyam} \n                refreshMaps={refreshMaps} nyamEditorModalVisible={nyamEditorModalVisible} setNyamEditorModalVisible={setNyamEditorModalVisible} \n            />\n\n            \n        </MapsModalInfoWrap>\n    );\n}\n\n// style ========================================================\nconst SPACE = \"4px\";\n\nconst MapsModalInfoWrap = styled.div`\n    display : flex;\n    flex-direction : column;\n\n    flex : 1;\n    margin-right : ${\"8px\"}; \n\n    @media(max-width : 768px){\n        margin-right : 0;\n        margin-bottom : 8px;\n    }\n    `;\nconst Tools = styled.div`\n    display : flex;\n    justify-content : flex-end;\n    margin-bottom : ${SPACE};\n    `;\n\nconst Summary = styled.div`\n    display : flex;\n    `;\n\nconst MenuWrap = styled.div`\n    display : flex;\n    flex-direction : column;\n    `;\n\nconst Title = styled.p`\n    margin : 0;\n    font-weight : bold;\n    `;\n\n// function =====================================================\nasync function handleDelete(nyamListSource, selectedNyam, setIsLoading, setMapsModalVisible, refreshMaps) {\n    setIsLoading(true);\n\n    const url = `${nyamListSource}?taskTarget=nyam&taskType=delete`;\n    const data = JSON.stringify(selectedNyam);\n\n    await axios.post(url, data);\n\n    await refreshMaps();\n    setMapsModalVisible(false);\n    setIsLoading(false);\n\n}","// imported Modules =============================================\nimport React from 'react';\nimport styled from 'styled-components';\n\nimport { Button, Tooltip } from \"antd\";\nimport { DeleteOutlined } from \"@ant-design/icons\"\n\n// Main Component ===============================================\nexport default function Comment ({ index, content, onDelete }) {\n    return (\n        <CommentWrap className=\"Comment\">\n            <Content>{content}</Content>\n            <Tooltip className=\"deleteComment\" title=\"크큭..없.앤.다.\" placement=\"right\">\n                <Button index={index} shape=\"circle\" icon={<DeleteOutlined />} style={{}} onClick={(e)=>{onDelete(index)}} />\n            </Tooltip>\n        </CommentWrap>\n    );\n}\n\n// style ========================================================\nconst SPACE = \"4px\";\n\nconst CommentWrap = styled.div`\n    display : flex;\n    justify-content : flex-end;\n\n    margin-top : ${SPACE};\n    `;\n\nconst Content = styled.p`\n    padding : ${SPACE};\n    border : 1px solid #DCDCDC;\n    border-radius : 8px;\n    margin : 0;\n    max-width : 100%;\n    margin-right : ${SPACE};\n    \n    word-break: break-all;\n    overflow-wrap: break-word;\n    `;\n\n// function =====================================================\n// *","// imported Modules =============================================\nimport React, { useState } from 'react';\nimport axios from \"axios\";\n\nimport styled from 'styled-components';\n\nimport { Button, Tooltip, Input } from \"antd\";\nimport { EditOutlined } from \"@ant-design/icons\"\n\n// imported components ==========================================\nimport Comment from \"../../atoms/Comment\";\n\n// Main Component ===============================================\nexport default function MapsModalComment ({ nyamListSource, selectedNyam, refreshMaps, setIsLoading }) {\n    const [newComment, setNewComment] = useState(null);\n    const commentsData = JSON.parse(selectedNyam.comment).comment;\n\n    async function onCreate(e) {\n        setIsLoading(true);\n\n        // 검증\n        if (newComment==null || newComment===''){ \n            setIsLoading(false);\n            return; \n        }\n\n        // 요청 데이터 준비`\n        const url = `${nyamListSource}?taskTarget=comment&taskType=edit`;\n        const data = JSON.stringify({\n            id : selectedNyam.id,\n            comment : JSON.stringify({ comment : [newComment, ...commentsData ] })\n        });\n        \n        // 요청\n        //console.log(data);\n        await axios.post(url, data);\n\n        // 리프레시\n        await refreshMaps();\n        setNewComment(null);\n        setIsLoading(false);\n    }\n\n    async function onDelete(index) {\n        setIsLoading(true);\n\n        // 요청 데이터 준비\n        const url = `${nyamListSource}?taskTarget=comment&taskType=edit`;\n        const data = JSON.stringify({\n            id : selectedNyam.id,\n            comment : JSON.stringify({ comment : [...commentsData.slice(0,index), ...commentsData.slice(index+1)] })\n        });\n        \n        // 요청\n        //console.log(data);\n        await axios.post(url, data);\n\n        // 리프레시\n        await refreshMaps();\n        setIsLoading(false);\n    }\n\n    return (\n        <MapsModalCommentWrap className=\"MapsModalComment\">\n            <Form>\n                <Input placeholder=\"새로운 의견을 적어주세요\" value={newComment} onChange={(e)=>{setNewComment(e.target.value);}} style={{borderRadius:\"8px\", marginRight:\"4px\"}} />\n                <Tooltip className=\"deleteComment\" title=\"새로운 의견적기\" placement=\"right\">\n                    <Button type=\"primary\" shape=\"circle\" icon={<EditOutlined />} size=\"normal\" onClick={onCreate} />\n                </Tooltip>\n            </Form>\n\n            <Comments>\n            {\n                commentsData.length > 0 \n                ?   commentsData.map( ( item, index ) => (\n                        <Comment key={index} index={index} content={item} onDelete={onDelete} />\n                    ))\n                \n                :   <EmptyNoti><h1>아무것도 없었다</h1></EmptyNoti>\n            }\n            </Comments>\n        </MapsModalCommentWrap>\n    );\n}\n\n// style ========================================================\nconst MapsModalCommentWrap = styled.div`\n    display : flex;\n    flex-direction : column;\n\n    width : 40%;\n\n    margin-left : auto;\n    padding : 16px;\n    border : 1px solid #dbdbdb;\n    border-radius : 8px;\n\n    @media(max-width : 768px){\n        width : 100%;\n    }\n\n    `;\n\nconst Comments = styled.div`\n    display : flex;\n    flex-direction : column;\n    align-content : flex-end;\n    justify-content : flex-start;\n    height : 100%;\n    overflow-y: auto;\n    `;\n\nconst Form = styled.div`\n    display :flex;\n    align-items : center;\n    `;\n\nconst EmptyNoti = styled.div`\n    display : flex;\n    height : 100%;\n    justify-content : center;\n    align-items : center;\n    `;\n// function =====================================================\n// *","// imported Modules =============================================\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\n\nimport { Modal } from 'antd';\n\n// imported components ==========================================\nimport MapsModalInfo from \"./MapsModalInfo\";\nimport MapsModalComment from \"./MapsModalComment\";\nimport Loading from \"../../atoms/Loading\";\n\n// Main Component ===============================================\nexport default function MapsModal ({nyamListSource, selectedNyam, refreshMaps, mapsModalVisible, setMapsModalVisible}) {\n    const [ isLoading, setIsLoading ] = useState(false);\n    return (\n        selectedNyam != null\n            ?\n                <MapsModalWrap className=\"MapsModal\">\n                    <StyledModal\n                        title={selectedNyam.name}\n                        visible={mapsModalVisible}\n                        onCancel={() => { setMapsModalVisible(false) }}\n                        footer={null}\n                    >\n                        <ModalContentsWrap>\n                            <MapsModalInfo nyamListSource={nyamListSource} selectedNyam={selectedNyam} refreshMaps={refreshMaps} setIsLoading={setIsLoading} setMapsModalVisible={setMapsModalVisible} />\n                            <MapsModalComment nyamListSource={nyamListSource} selectedNyam={selectedNyam} refreshMaps={refreshMaps} setIsLoading={setIsLoading} />\n                        </ModalContentsWrap>\n\n                        <Loading isLoading={isLoading} />\n                    </StyledModal>\n                </MapsModalWrap>\n    \n            :   \n                <div></div>\n    );\n}\n\n// style ========================================================\nconst MapsModalWrap = styled.div`\n\n    `;\n\nconst ModalContentsWrap = styled.div`\n    display : flex;\n\n    @media(max-width : 768px){\n        flex-direction : column;\n    }\n`;\nconst StyledModal = styled(Modal)`\n    min-width : 50%;\n`;\n// function =====================================================\n// *","export default function naverMapsinit (mapValues) {\n    // set naver.maps.Map\n    const { center, zoom } = mapValues;\n\n    const mapOptions = {\n        center: new window.naver.maps.LatLng(center.lat, center.lng),\n        zoom: zoom,\n    };\n    const map = new window.naver.maps.Map(\"map\", mapOptions);\n\n    return map;\n}","import axios from \"axios\";\n\nexport default async function naverMapsSetNyams (map, mapValues, setMarkers, setNyams, setMapsModalVisible, setSelectedNyam) {\n    // initialize temp variable for states\n    const tempNyams = initWithNyamtype(mapValues.nyamTypes);\n    const tempMarkers = initWithNyamtype(mapValues.nyamTypes);\n\n    // read nyamList\n    const nyamList = await readNyamList(mapValues.nyamListSource);\n\n    // set markers\n        // organization item\n    const org = nyamList.shift(); \n    const org_marker = new window.naver.maps.Marker({\n        position: new window.naver.maps.LatLng(org.lat, org.lng),\n        map: map,\n        icon: {\n          url : `img/icons/${org.type}.png`,\n          size: new window.naver.maps.Size(48, 48),\n          origin: new window.naver.maps.Point(0, 0),\n        }\n    });\n\n        // nyam items\n    let cnt = 0;\n    nyamList.forEach( item => { \n        const marker = new window.naver.maps.Marker({\n            position : new window.naver.maps.LatLng(item.lat, item.lng),\n            map : map,\n            icon : {\n                content: [\n                    '<div>',\n                        '<div style=\"background-color:rgba(255,255,255,0.8); padding:5px; border-radius:16px; border:1px solid #d9d9d9;\">',\n                            `<span style=\"white-space:nowrap;\">${item.name}</span>`,\n                        '</div>',\n                        `<img src=\"img/icons/svg/${item.type}.svg\">`,\n                    '</div>'\n                ].join(''),\n                size : new window.naver.maps.Size(1,500),\n                scaledSize: new window.naver.maps.Size(395, 79),\n\n                anchor: new window.naver.maps.Point(16, 48),\n                \n            }\n        });\n\n        marker.addListener(\"click\", (e) => {\n            const targetid = e.overlay[\"_nmarker_id\"];\n            const types = mapValues.nyamTypes;\n\n            for( let i = 0; i<types.length; i++){\n                const type = types[i];\n                let chk = false;\n                for( let j=0; j<tempMarkers[type].length; j++ ){\n                    if ( targetid === tempMarkers[type][j][\"_nmarker_id\"] ){\n                        setSelectedNyam(tempNyams[type][j]);\n                        setMapsModalVisible(true);\n                        chk = true;\n                        break;\n                    }\n                }\n                if (chk) { break; }\n            }\n        });\n\n        tempNyams[item.type].push(item);\n        tempMarkers[item.type].push(marker);\n\n        cnt++;\n    });\n    \n    org_marker.setZIndex(cnt); // 회사 마커가 가장 위로 올라오도록\n\n    setNyams(tempNyams);\n    setMarkers(tempMarkers);\n}\n\nasync function readNyamList (src) {\n        const { data } = await axios.get(src);\n        //console.log(\"readNyams\", data);\n\n        return data;\n}\n\nfunction initWithNyamtype (types) {\n    let obj = {};\n    types.forEach( category => {\n        obj[category] = [];\n    });\n\n    return obj;\n}","// imported Modules =============================================\nimport { React, useState, useEffect } from \"react\";\nimport ScriptTag from \"react-script-tag\";\nimport styled from \"styled-components\";\n\n// [경고] 임시적인 사용자설정 보관소 - 나중에 다른 방법으로 대체필요\nimport DataStorage from \"../DataStorage\"; // [경고] 임시적인 사용자설정 보관소 - 나중에 다른 방법으로 대체필요\n// [경고] 임시적인 사용자설정 보관소 - 나중에 다른 방법으로 대체필요\n\n// imported components ==========================================\nimport MapsModal from \"./followers/Maps/MapsModal\";\nimport NyamEditor from \"./followers/Maps/NyamEditor\";\nimport Loading from \"./atoms/Loading\";\n\n// imported supporters\nimport naverMapsinit from \"./suppoters/naverMapsInit\";\nimport naverMapsSetNyams from \"./suppoters/naverMapsSetNyams\";\n\n// Main Component ===============================================\nlet map = null;\n\nconst mapValues = {\n    nyamListSource : DataStorage(\"NYAM_LIST_SOURCE\"),\n    nyamTypes : DataStorage(\"NYAM_TYPES_KEY\"),\n    mapSource : \"https://openapi.map.naver.com/openapi/v3/maps.js?ncpClientId=ont9t74d67\",\n    center : {\n        lat : 37.552472, \n        lng : 127.076665,\n    },\n    zoom : 16,\n};\n\nexport default function Maps ({ filters, isPickmode, setIsPickmode }) {\n    const [nyams, setNyams] = useState(null);\n    const [markers, setMarkers] = useState(null);\n\n    const [isLoading, setIsLoading] = useState(false);\n    const [selectedNyam, setSelectedNyam] = useState(null);\n    const [pickCoord, setPickCoord] = useState(null); // 새로 추가할 냠의 좌표값. { x : 123, y : 123 }\n\n    const [mapsModalVisible, setMapsModalVisible] = useState(false);\n    const [nyamEditorModalVisible, setNyamEditorModalVisible] = useState(false);\n\n    useEffect( () => {\n        if ( markers !== null ) {\n            setMarkersVisible(filters, setIsLoading, markers);\n        }\n    }, [filters, markers]);\n\n    useEffect( () => {\n        if(isPickmode === true){\n            map.setCursor(\"Crosshair\");\n            const listener = window.naver.maps.Event.addListener(map, 'click', function(e) {\n                if (isPickmode===true) {\n                    const { x, y } = e.coord;\n        \n                    setPickCoord({x, y});\n                    setIsPickmode(false);\n                    setNyamEditorModalVisible(true);\n                    window.naver.maps.Event.removeListener(listener);\n                }\n            });   \n        } else if (isPickmode === false) {\n            map.setCursor(\"Move\");\n        }\n    }, [isPickmode, setIsPickmode]);\n\n    useEffect( () => {\n        // 모달이 켜있었다면 모달내용 바꿔주기\n        if ( selectedNyam != null ){\n            const { type, id } = selectedNyam;\n            const index = nyams[type].findIndex( nyam => nyam.id === id )\n            setSelectedNyam( nyams[type][index] );\n        }\n    }, [nyams, selectedNyam]);\n\n    async function refreshMaps() {\n        // 기존의 마커 모두 삭제하기\n        for( let arr of Object.values(markers) ){\n            arr.forEach( marker => {\n                marker.setMap(null);\n            });\n        }\n\n        // 다시 만들기\n        await naverMapsSetNyams(map, mapValues, setMarkers, setNyams, setMapsModalVisible, setSelectedNyam);\n\n        // 이후 useEffect에서 selectedNyam 내용 갱신.\n    }\n\n    return (\n        <MapsWrap className=\"Maps\">\n            <ScriptTag \n                type=\"text/javascript\" src={mapValues.mapSource}\n                onLoad={ async () => { \n                    setIsLoading(true);\n                    map = naverMapsinit(mapValues);\n                    await naverMapsSetNyams(map, mapValues, setMarkers, setNyams, setMapsModalVisible, setSelectedNyam);\n                    setIsLoading(false);\n                }} \n            />\n\n            <Map id=\"map\"></Map>\n            <MapsModal nyamListSource={mapValues.nyamListSource} selectedNyam={selectedNyam} refreshMaps={refreshMaps} mapsModalVisible={mapsModalVisible} setMapsModalVisible={setMapsModalVisible} />\n            <NyamEditor \n                title={\"새로운 냠 만들기\"} pickCoord={pickCoord} taskType=\"create\" defaultNyamValue={null} \n                refreshMaps={refreshMaps} nyamEditorModalVisible={nyamEditorModalVisible} setNyamEditorModalVisible={setNyamEditorModalVisible}  \n            />\n\n            <Loading isLoading={isLoading} />\n        </MapsWrap>\n    );\n}\n\n// style ========================================================\nconst MapsWrap = styled.div`\n    display : flex;\n    flex : 1;\n    `;\n\nconst Map = styled.div`\n    width: 100%;\n    height : 100%;\n    `;\n\n// function =====================================================\nconst setMarkersVisible = (filters, setIsLoading, markers) => {\n    setIsLoading(true);\n\n    const types = mapValues.nyamTypes; // 정의되어있는 type배열 불러오기\n\n    types.forEach( type => {\n        const target = markers[type]; // markers의 한 type을 대상으로 정함\n        if (target.length === 0) { return; } // 대상이 비어있으면 바로 함수종료\n\n        const dest = filters[type]; // 업데이트 하려고 하는 값\n        if ( target[0].getVisible() !== dest ){ // target안의 첫번째 마커의 visible속성과, 업데이트 하려고 하는 값이 다르면\n            target.forEach( marker => { marker.setVisible(dest); }); // 업데이트!\n            return;\n        }\n    });\n\n    setIsLoading(false);\n}","// imported Modules =============================================\nimport { React } from 'react';\nimport styled from 'styled-components';\n\n// imported components ==========================================\n// *\n\n// Main Component ===============================================\nexport default function Footer () {\n    return (\n        <FooterWrap className=\"Footer\">\n            <Group>\n                <Item>Wonjin Yi</Item>\n                <Item><strong>Contact </strong>studioplug17@gmail.com</Item>\n            </Group>\n            <Group style={{marginLeft : \"auto\",}}>\n                <Item><strong>냠냠램 TEST </strong>조직내부의 폐쇄적인 냠냠거리 공유 서비스</Item>\n            </Group>\n        </FooterWrap>\n    );\n}\n\n// style ========================================================\nconst FooterWrap = styled.div`\n    display : flex;\n \n    width : 100%;\n    padding : 20px 30px;\n\n    background-color : #333333;\n    color : #a1a1a1;\n    `; \n\nconst Group = styled.div`\n\n    `;\n\nconst Item = styled.p`\n    margin : 0;\n    `;\n\n// function =====================================================\n// *","// imported Modules =============================================\nimport { React, useState } from 'react';\nimport styled from \"styled-components\";\n\n// imported components ==========================================\nimport Header from \"./components/Header\";\nimport Maps from \"./components/Maps\";\nimport Footer from \"./components/Footer\";\n\n// Main Component ===============================================\nexport default function App() {\n  const [filters, setFilters] = useState({});\n  const [isPickmode, setIsPickmode] = useState(null); // 현재 '새로운 냠'버튼을 눌러 새로운 위치를 찍는 상태인지를 표현. true / false\n\n  return (\n    <AppWrap className=\"App\" style={{ cursor : (isPickmode ? 'Crosshair' : 'auto') }}>\n      <Header setFilters={setFilters} setIsPickmode={setIsPickmode} />\n      <Maps filters={filters} isPickmode={isPickmode} setIsPickmode={setIsPickmode} />\n      <Footer />\n    </AppWrap>\n  );\n}\n\n// style ========================================================\nconst AppWrap = styled.div`\n  display : flex;\n  flex-direction : column;\n  height : 100%;\n`;\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    // <React.StrictMode>\n    //   <App />\n    // </React.StrictMode>,\n    \n    <App />,\n    document.getElementById('root')\n);"],"sourceRoot":""}