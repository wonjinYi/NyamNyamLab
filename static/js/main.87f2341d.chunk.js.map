{"version":3,"sources":["components/Header/followers/UpdateNoteRaw.md","components/Header/followers/UpdateNote.js","DataStorage.js","components/Header/followers/Tools.js","components/Header/Header.js","components/atoms/Loading.js","components/Maps/followers/NyamEditor.js","components/atoms/ContentsTable.js","components/Maps/followers/MapsModalInfo.js","components/atoms/Comment.js","components/Maps/followers/MapsModalComment.js","components/Maps/leaders/MapsModal.js","components/supporters/naverMapsInit.js","components/supporters/naverMapsSetNyams.js","components/Maps/Maps.js","components/Footer/Footer.js","App.js","index.js"],"names":["UpdateNote","updateNoteModalVisible","setUpdateNoteModalVisible","useState","markdown","setMarkdown","useEffect","a","fetch","mdSource","then","res","text","str","init","UpdateNoteWrap","className","title","visible","onCancel","footer","style","minWidth","children","styled","div","DataStorage","key","NYAM_TYPES","korea","china","japan","fastfood","cvs","cafe","NYAM_TYPES_KEY","NYAM_LIST_SOURCE","Tools","setFilters","setIsPickmode","arr","obj","forEach","el","initChecked","checked","setChecked","ToolsWrap","placement","content","filterContent","e","target","nyamType","trigger","MenuButton","shape","icon","FilterOutlined","createNyamContent","PlusOutlined","marginLeft","onClick","BookOutlined","onChange","styld","display","flexDirection","map","type","index","margin","Button","Header","isPickmode","HeaderWrap","Logo","h1","Loading","isLoading","LoadingWrap","Backdrop","spinning","size","indicator","LoadingOutlined","fontSize","spin","SUMMARY_INIT_VALUE","name","description","open","close","lat","lng","comment","MENUITEM_INIT_VALUE","price","NyamEditor","pickCoord","taskType","defaultNyamValue","refreshMaps","nyamEditorModalVisible","setNyamEditorModalVisible","setIsLoading","summary","setSummary","menuItems","setMenuItems","summaryOnChange","value","menuItemOnChange","slice","addNewMenuItem","removeMenuItem","data","Object","assign","JSON","stringify","y","x","keys","i","length","console","log","message","warning","strData","url","axios","post","success","tempSummary","menu","tempMenuItems","parse","NyamEditorWrap","SummaryWrap","StyledInput","placeholder","TimePickersWrap","format","moment","time","timeString","flexGrow","marginRight","SPACE","minuteStep","Option","MenusWrap","item","MenuItemWrap","StyledButton","MinusOutlined","MenuItem","ButtonsWrap","Input","ContentsTable","desc","dataOrder","ContentsTableWrap","Table","Row","borderWidth","Th","rowItem","colItem","Td","CELL_PADDING","BORDER_COLOR","table","tr","th","td","MapsModalInfo","nyamListSource","selectedNyam","setMapsModalVisible","parsedMenu","MapsModalInfoWrap","href","removeSpace","rel","QuestionCircleOutlined","FormOutlined","DeleteOutlined","handleDelete","Summary","Title","p","string","split","join","Comment","onDelete","CommentWrap","Content","MapsModalComment","newComment","setNewComment","commentsData","id","useCallback","MapsModalCommentWrap","Form","borderRadius","EditOutlined","Comments","MapsModal","mapsModalVisible","MapsModalWrap","StyledModal","ModalContentsWrap","Modal","naverMapsinit","mapValues","center","zoom","mapOptions","window","naver","maps","LatLng","Map","naverMapsSetNyams","setMarkers","setNyams","setSelectedNyam","tempNyams","initWithNyamtype","nyamTypes","tempMarkers","readNyamList","nyamList","org","shift","org_marker","Marker","position","Size","origin","Point","cnt","marker","scaledSize","anchor","addListener","targetid","overlay","types","chk","j","push","setZIndex","src","get","category","mapSource","Maps","filters","nyams","markers","setPickCoord","values","setMap","setMarkersVisible","setCursor","listener","Event","coord","removeListener","findIndex","nyam","MapsWrap","onLoad","dest","getVisible","setVisible","Footer","FooterWrap","Group","Item","App","notification","duration","AppWrap","cursor","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.87f2341d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/UpdateNoteRaw.b545fe03.md\";","// imported Modules =============================================\nimport React, { useEffect, useState } from 'react';\nimport { Modal } from \"antd\";\nimport styled from 'styled-components';\nimport ReactMarkdown from 'react-markdown';\n\n// imported components ==========================================\n// *\n\n// Main Component ===============================================\nimport mdSource from \"./UpdateNoteRaw.md\";\n\nexport default function UpdateNote({ updateNoteModalVisible, setUpdateNoteModalVisible}) {\n    const [markdown, setMarkdown] = useState('');\n\n    useEffect( () => {\n        async function init() {\n            const str = await fetch(mdSource)\n            .then( res => res.text() );\n\n            setMarkdown(str);\n        }\n        init();\n    }, [markdown]);\n\n    return (\n        <UpdateNoteWrap className=\"UpdateNote\">\n            <Modal\n                title={\"업데이트 노트\"}\n                visible={updateNoteModalVisible}\n                onCancel={() => { setUpdateNoteModalVisible(false) }}\n                footer={null}\n                style={{minWidth:\"50%\"}}\n            >\n                <ReactMarkdown children={markdown} />\n            </Modal>\n        </UpdateNoteWrap>\n    );\n}\n\n// style ========================================================\nconst UpdateNoteWrap = styled.div`\n\n    `;\n\n// function =====================================================\n// *","// [경고] 임시적인 사용자설정 보관소 - 나중에 다른 방법으로 대체필요\nexport default function DataStorage (key) {\n    const data = {\n        NYAM_TYPES : {\n            korea : \"한식\",\n            china : \"중식\",\n            japan : \"일식\",\n            fastfood : \"패스트푸드\",\n            cvs : \"편의점\",\n            cafe : \"카페\",\n        }, \n        NYAM_TYPES_KEY : [\"korea\", \"china\", \"japan\", \"fastfood\", \"cvs\", \"cafe\"],\n        NYAM_LIST_SOURCE : \"https://script.google.com/macros/s/AKfycbyuACrtmBSgcaehSnfbDVhSAMeScTP455Z44h4jtjxRGxJ5UNeVdOEh/exec\",\n    }\n\n    return data[key];\n}","// imported Modules =============================================\nimport { React, useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Checkbox, Popover, Button, Tooltip } from \"antd\";\nimport { FilterOutlined, PlusOutlined, BookOutlined } from \"@ant-design/icons\"\nimport 'antd/dist/antd.css';\n\n// imported Components ==========================================\nimport UpdateNote from \"./UpdateNote\";\n\n/* ******************************************* */\n// [경고] 임시적인 사용자설정 보관소 - 나중에 다른 방법으로 대체필요\nimport DataStorage from \"../../../DataStorage\"; \nconst NYAM_TYPES = DataStorage(\"NYAM_TYPES\");\nconst NYAM_TYPES_KEY = DataStorage(\"NYAM_TYPES_KEY\");\n// [경고] 임시적인 사용자설정 보관소 - 나중에 다른 방법으로 대체필요\n/* ******************************************* */\n\n// Main Component ===============================================\nexport default function Tools ({ setFilters, setIsPickmode }) {\n    const [checked, setChecked] = useState( initChecked(NYAM_TYPES_KEY) );\n    const [updateNoteModalVisible, setUpdateNoteModalVisible] = useState(false);\n\n    useEffect ( () => { \n        setFilters(checked); \n    }, [checked, setFilters]);\n\n    function onChange(e) { setChecked({ ...checked, [e.target.nyamType] : e.target.checked }) }\n\n    return (\n        <ToolsWrap className=\"Tools\">\n            <div className=\"LeftDiv\">\n                {/* 냠 필터링 */}\n                <Popover placement=\"bottom\" title={\"냠 필터링\"} content={filterContent(onChange, checked)} trigger=\"click\">\n                    <Tooltip title=\"냠 필터링\" placement=\"left\">\n                        <MenuButton shape=\"circle\" icon={<FilterOutlined />} />\n                    </Tooltip>\n                </Popover>\n\n                {/* 새로운 냠 */}\n                <Popover placement=\"bottom\" title={\"새로운 냠 만들기\"} content={createNyamContent} trigger=\"click\">\n                    <Tooltip title=\"새로운 냠\" placement=\"right\">\n                        <MenuButton shape=\"circle\" icon={<PlusOutlined />} style={{marginLeft:\"8px\"}} onClick={ () => { setIsPickmode(true); }} />\n                    </Tooltip>\n                </Popover>\n            </div>\n\n            <div className=\"RightDiv\" style={{marginLeft:\"auto\"}} >\n                <Tooltip title=\"업데이트 노트\" placement=\"right\">\n                    <MenuButton shape=\"circle\" icon={<BookOutlined />}  onClick={ () => { setUpdateNoteModalVisible(true); }} />\n                    <UpdateNote updateNoteModalVisible={updateNoteModalVisible} setUpdateNoteModalVisible={setUpdateNoteModalVisible} />\n                </Tooltip>\n            </div>\n        </ToolsWrap>\n    );\n}\n\nfunction filterContent(onChange, checked) {\n    return (\n        <div className=\"filterContent\" styld={{display:\"flex\", flexDirection:\"column\"}}>\n        {\n            NYAM_TYPES_KEY.map( (type, index) => (\n                <div key={index}><Checkbox onChange={onChange} checked={checked[type]} nyamType={type}>{NYAM_TYPES[type]}</Checkbox></div>\n            ))\n        }\n        </div>\n    )\n}\n\nconst createNyamContent = (\n    <div>\n        <p style={{margin:\"0\"}}><strong>지도에서 새로운 남의 위치를 찍어주세요</strong></p>\n        {/* <p style={{margin:\"0\"}}>버튼을 다시누르면 '새로운 냠 만들기'가 취소됩니다</p> */}\n    </div>\n);\n    \n// style ========================================================\nconst ToolsWrap = styled.div`\n    display : flex;\n    flex : 1;\n\n    justify-contents : center;\n    align-items : center;\n\n    padding : 10px 10px;\n\n    background-color : #333333;\n    color : #FFFFFF;\n    `;\n\nconst MenuButton = styled(Button)`\n    border : 0;\n    `;\n\n// function =====================================================\nfunction initChecked(arr) {\n    let obj = {};\n    arr.forEach( el => {\n        obj[el] = true;\n    });\n\n    return obj;\n}","// imported Modules =============================================\nimport { React } from 'react';\nimport styled from 'styled-components';\n\n// imported components ==========================================\nimport Tools from \"./followers/Tools\";\n\n// Main Component ===============================================\nexport default function Header ({ setFilters, isPickmode, setIsPickmode }) {\n    return (\n        <HeaderWrap className=\"Header\">\n            <Logo>냠냠랩(TEST)</Logo>\n            <Tools setFilters={setFilters} isPickmode={isPickmode} setIsPickmode={setIsPickmode} />\n        </HeaderWrap>\n    );\n}\n\n// style ========================================================\nconst HeaderWrap = styled.div`\n    display : flex;\n    align-items : center;\n\n    padding : 10px 0px;\n\n    background-color : #333333;\n    color : #FFFFFF;\n    `;\n\nconst Logo = styled.h1`\n    margin : 0;\n    padding : 10px 20px;\n    color : #FFFFFF;\n    font-family: 'Poor Story', cursive;\n    `;\n\n// function =====================================================\n// *","// imported Modules =============================================\nimport { React } from \"react\";\n\nimport styled from \"styled-components\";\nimport { Spin } from 'antd';\nimport { LoadingOutlined } from '@ant-design/icons';\nimport 'antd/dist/antd.css';\n\n// Main Component ===============================================\nexport default function Loading ({ isLoading }) {\n    \n    if ( isLoading ){\n        return (\n            <LoadingWrap className=\"Loading\">\n                <Backdrop></Backdrop>\n                <Spin spinning={isLoading} size=\"large\" indicator={<LoadingOutlined style={{ fontSize: 64 }} spin />} />\n            </LoadingWrap>\n        );\n    } else {\n        return <div className=\"Loading\"></div>;\n    }\n   \n}\n\n// style ========================================================\nconst LoadingWrap = styled.div`\n    position : fixed;\n    top : 0; \n    left : 0;\n\n    display : flex;\n    justify-content : center;\n    align-items : center;\n\n    width : 100%; \n    height : 100%;\n    `;\n\nconst Backdrop = styled.div`\n    position : fixed;\n    top : 0; \n    left : 0;\n\n    width : 100%;\n    height : 100%;\n\n    background-color : rgba(0,0,0, 0.75);\n    `;","// imported Modules =============================================\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport axios from \"axios\";\nimport moment from \"moment\";\n\nimport { Modal, Input, TimePicker, Button, Divider, Select, message } from 'antd';\nimport { PlusOutlined, MinusOutlined } from \"@ant-design/icons\"\n\n// imported components\nimport Loading from \"../../atoms/Loading\";\n\n/* ******************************************* */\n// [경고] 임시적인 사용자설정 보관소 - 나중에 다른 방법으로 대체필요\nimport DataStorage from \"../../../DataStorage\";\nconst NYAM_TYPES = DataStorage(\"NYAM_TYPES\");\nconst NYAM_TYPES_KEY = DataStorage(\"NYAM_TYPES_KEY\");\nconst NYAM_LIST_SOURCE = DataStorage(\"NYAM_LIST_SOURCE\");\n// [경고] 임시적인 사용자설정 보관소 - 나중에 다른 방법으로 대체필요\n/* ******************************************* */\n\n// Main Component ===============================================\n\nconst SUMMARY_INIT_VALUE = { name: null, description: null, open: null, close: null, type: null, lat: null, lng: null, comment: null };\nconst MENUITEM_INIT_VALUE = [{ name: null, price: null }];\n\nexport default function NyamEditor({ title, pickCoord, taskType, defaultNyamValue, refreshMaps, nyamEditorModalVisible, setNyamEditorModalVisible }) {\n    const [isLoading, setIsLoading] = useState(false);\n\n    const [summary, setSummary] = useState(SUMMARY_INIT_VALUE);\n    const [menuItems, setMenuItems] = useState(MENUITEM_INIT_VALUE);\n\n    useEffect(() => {\n        if (nyamEditorModalVisible === true && taskType === \"edit\" && defaultNyamValue != null) {\n            // apply default value to \"summary\"\n            let tempSummary = {};\n            Object.assign(tempSummary, defaultNyamValue);\n            delete tempSummary.menu;\n            setSummary(tempSummary);\n\n            // apply default value to \"menuItems\"\n            let tempMenuItems = [];\n            tempMenuItems = (JSON.parse(defaultNyamValue.menu)).menu;\n            setMenuItems(tempMenuItems);\n        }\n    }, [nyamEditorModalVisible, defaultNyamValue, taskType]);\n\n    // about onChange\n    function summaryOnChange(target, value) {\n        setSummary({ ...summary, [target]: value });\n    }\n    function menuItemOnChange(index, type, value) {\n        setMenuItems([...menuItems.slice(0, index), { ...menuItems[index], [type]: value }, ...menuItems.slice(index + 1)]);\n    }\n\n    // add/remove menu item\n    function addNewMenuItem(index) { setMenuItems([...menuItems.slice(0, index), { name: '', price: '' }, ...menuItems.slice(index)]) }\n    function removeMenuItem(index) { setMenuItems([...menuItems.slice(0, index), ...menuItems.slice(index + 1)]); }\n\n    // about footer buttons.\n    function clearAll(e) {\n        setSummary(SUMMARY_INIT_VALUE);\n        setMenuItems(MENUITEM_INIT_VALUE);\n    }\n\n    async function onSubmit(e) {\n        setIsLoading(true);\n\n        const data = {};\n        Object.assign(data, summary);\n\n        // 요청 데이터 준비\n        if (taskType === \"create\") {\n            Object.assign(data, { \"comment\": JSON.stringify({ \"comment\": [] }) });\n            data.lat = pickCoord.y;\n            data.lng = pickCoord.x;\n        } else if (taskType === \"edit\") {\n\n        }\n        Object.assign(data, { \"menu\": JSON.stringify({ \"menu\": menuItems }) });\n\n        // 검증\n        const keys = Object.keys(data);\n        for (let i = 0; i < keys.length; i++) {\n            if (data[keys[i]] === null || data[keys[i]] === \"\") {\n                console.log('통과하지못했음');\n                message.warning(\"비어있는 정보를 채워넣어주세요!\");\n                setIsLoading(false);\n                return;\n            }\n        }\n\n        // 요청\n        const strData = JSON.stringify(data);\n        const url = `${NYAM_LIST_SOURCE}?taskTarget=nyam&taskType=${taskType}`;\n        await axios.post(url, strData);\n\n        // 리프레시\n        await refreshMaps();\n        setNyamEditorModalVisible(false);\n        setIsLoading(false);\n\n        // 완료메시지\n        if(taskType === \"create\"){\n            message.success(\"새로운 냠을 만들었습니다!\");\n        } else if (taskType === \"edit\"){\n            message.success(\"냠이 수정되었습니다!\");\n        }\n    }\n\n    return (\n        <NyamEditorWrap className=\"NyamEditor\">\n            <Modal\n                title={title}\n                visible={nyamEditorModalVisible}\n                onCancel={() => { setNyamEditorModalVisible(false) }}\n                footer={null}\n            >\n                <SummaryWrap>\n                    <Divider>개요</Divider>\n\n                    <StyledInput name=\"name\" placeholder=\"가게 이름\" value={summary.name} onChange={(e) => { summaryOnChange(e.target.name, e.target.value) }} />\n                    <StyledInput name=\"description\" placeholder=\"설명\" value={summary.description} onChange={(e) => { summaryOnChange(e.target.name, e.target.value) }} />\n\n                    <TimePickersWrap>\n                        <TimePicker\n                            name=\"openTime\" format=\"HH:mm\" placeholder=\"문 여는 시간\" value={summary.open ? moment(summary.open, \"HH:mm\") : null}\n                            onChange={(time, timeString) => { summaryOnChange(\"open\", timeString); }} style={{ flexGrow: \"1\", marginRight: SPACE }}\n                            minuteStep={5}\n                        />\n                        <TimePicker\n                            name=\"closeTime\" format=\"HH:mm\" placeholder=\"문 닫는 시간\" value={summary.close ? moment(summary.close, \"HH:mm\") : null}\n                            onChange={(time, timeString) => { summaryOnChange(\"close\", timeString); }} style={{ flexGrow: \"1\" }}\n                            minuteStep={5}\n                        />\n                    </TimePickersWrap>\n\n                    <Select placeholder=\"유형을 골라주세요\" value={summary.type} onChange={(value) => { summaryOnChange(\"type\", value); }}>\n                        {NYAM_TYPES_KEY.map((key, index) => (<Select.Option value={key} key={index}>{NYAM_TYPES[key]}</Select.Option>))}\n                    </Select>\n                </SummaryWrap>\n\n                <MenusWrap>\n                    <Divider>메뉴</Divider>\n\n                    { menuItems.map((item, index) => MenuItem(index, item.name, item.price, addNewMenuItem, removeMenuItem, menuItemOnChange)) }\n                    <StyledButton shape=\"circle\" icon={<PlusOutlined />} style={{}} onClick={(e) => { addNewMenuItem(menuItems.length) }} />\n                    \n                    <Divider />\n                </MenusWrap>\n\n                <ButtonsWrap>\n                    <Button type=\"link\" onClick={clearAll}>모두 지우기</Button>\n                    <Button onClick={onSubmit} style={{ marginLeft: \"auto\" }}>가즈아</Button>\n                </ButtonsWrap>\n\n                <Loading isLoading={isLoading} />\n            </Modal>\n        </NyamEditorWrap>\n    );\n}\n\n// style ========================================================\nconst SPACE = \"4px\";\n\n// -- antd redefined style\nconst StyledInput = styled(Input)`\n    margin-bottom : ${SPACE};\n    `;\n\nconst StyledButton = styled(Button)`\n    margin-right : ${SPACE};\n    `;\n\n// -- user defined style\nconst NyamEditorWrap = styled.div``;\n\nconst SummaryWrap = styled.div`\n    display : flex;\n    flex-direction : column;\n    align-items : stretch;\n    `;\n\nconst TimePickersWrap = styled.div`\n    display : flex;\n    margin-bottom : ${SPACE}\n    `;\n\nconst MenusWrap = styled.div``;\n\nconst MenuItemWrap = styled.div`\n    display : flex;\n    `;\n\nconst ButtonsWrap = styled.div`\n    display : flex;\n    `;\n\n// function =====================================================\n// *\n\n// 유사 컴포넌트 ================================================\nfunction MenuItem(index, name, price, addNewMenuItem, removeMenuItem, menuItemOnChange) {\n    return (\n        <MenuItemWrap key={index}>\n            <StyledButton shape=\"circle\" icon={<PlusOutlined />} style={{}} onClick={(e) => { addNewMenuItem(index); }} />\n            <StyledButton shape=\"circle\" icon={<MinusOutlined />} onClick={(e) => { removeMenuItem(index) }} />\n\n            <StyledInput placeholder=\"메뉴 이름\" value={name} style={{ marginRight: SPACE }} onChange={(e) => { menuItemOnChange(index, \"name\", e.target.value); }} />\n            <StyledInput placeholder=\"메뉴 가격\" value={price} onChange={(e) => { menuItemOnChange(index, \"price\", e.target.value); }} />\n        </MenuItemWrap>\n    )\n}\n","// imported Modules =============================================\nimport React from 'react';\nimport styled from 'styled-components';\n\n// imported components ==========================================\n// *\n\n// Main Component ===============================================\nexport default function ContentsTable({ desc, dataOrder, data }) {\n    // desc (문자열 Array) : thead에 표시할 텍스트를 차례로 나열한 문자열 배열\n    // dataOrder (객체 Array) : tbody의 각 row에서 [data]객체의 요소를 표시할 순서를 나열한 문자열 배열 \n    // data (객체 Array) : 원본데이터\n\n    return (\n        <ContentsTableWrap className=\"ContentsTable\">\n            <Table>\n                <tbody>\n                    <Row style={{borderWidth:\"2px\"}}>\n                    {\n                        desc.map( (el, index) => (\n                            <Th key={index}>{ el }</Th>\n                        ))\n                    }\n                    </Row>\n                </tbody>\n                \n                <tbody>\n                {\n                    data.map( (rowItem,index) => (\n                        <Row key={index}>\n                        {\n                            dataOrder.map( (colItem, index) => (\n                                <Td key={index}>{ rowItem[colItem] }</Td>\n                            ))\n                        }\n                        </Row>\n                    ))\n                }\n                </tbody>\n            </Table>\n        </ContentsTableWrap>\n    );\n}\n\n// style ========================================================\n//const SPACE = \"4px\";\nconst CELL_PADDING = \"8px\";\nconst BORDER_COLOR = \"#dbdbdb\";\n\nconst ContentsTableWrap = styled.div`\n    width : 100%;\n    border : 1px solid ${BORDER_COLOR};\n    border-bottom : 12px solid ${BORDER_COLOR};\n    border-radius : 8px;\n    `;\n\nconst Table = styled.table`\n    width : 100%;\n    text-align : center;\n    `;\n\nconst Row = styled.tr`\n    padding : ${CELL_PADDING};\n    border-bottom : 1px solid ${BORDER_COLOR};\n    `;\n\nconst Th = styled.th`\n    padding : ${CELL_PADDING};\n    `;\n\nconst Td = styled.td`\n    padding : ${CELL_PADDING};\n    `;\n// function =====================================================\n// *\n\n                ","// imported Modules =============================================\nimport React, { useState } from 'react';\nimport axios from \"axios\";\n\nimport styled from 'styled-components';\nimport { Button, message, Tooltip } from \"antd\";\nimport { FormOutlined, DeleteOutlined, QuestionCircleOutlined } from \"@ant-design/icons\"\n\n// imported components ==========================================\nimport NyamEditor from \"./NyamEditor\";\nimport ContentsTable from \"../../atoms/ContentsTable\";\n\n// Main Component ===============================================\nexport default function MapsModalInfo({ nyamListSource, selectedNyam, refreshMaps, setIsLoading, setMapsModalVisible }) {\n    const [nyamEditorModalVisible, setNyamEditorModalVisible] = useState(false);\n\n    const { open, close, description, menu } = selectedNyam;\n    const parsedMenu = JSON.parse(menu).menu;\n\n    async function handleDelete() {\n        setIsLoading(true);\n\n        const url = `${nyamListSource}?taskTarget=nyam&taskType=delete`;\n        const data = JSON.stringify(selectedNyam);\n\n        await axios.post(url, data);\n\n        await refreshMaps();\n        setMapsModalVisible(false);\n        setIsLoading(false);\n\n        message.success(\"냠이 역사의 뒤안길로 사라졌습니다\");\n    }\n\n    return (\n        <MapsModalInfoWrap className=\"MapsModalInfo\">\n            {/* 우측 상단 도구 */}\n            <Tools>\n                <a href={`https://map.naver.com/v5/search/${removeSpace(selectedNyam.name)}`} target=\"_blank\" rel=\"noreferrer\">\n                    <Tooltip title=\"네이버지도\" placement=\"top\">\n                        <Button shape=\"circle\" icon={<QuestionCircleOutlined />} size=\"normal\" style={{ marginRight: SPACE }} />\n                    </Tooltip>\n                </a>\n                <Tooltip title=\"수정\" placement=\"top\">\n                    <Button shape=\"circle\" icon={<FormOutlined />} size=\"normal\" style={{ marginRight: SPACE }} onClick={(e) => { setNyamEditorModalVisible(true); }} />\n                </Tooltip>\n                <Tooltip title=\"삭제\" placement=\"top\">\n                    <Button shape=\"circle\" icon={<DeleteOutlined />} size=\"normal\" onClick={(e) => { handleDelete(); }} />\n                </Tooltip>\n            </Tools>\n\n            {/* 개요 */}\n            <Summary>\n                <div>\n                    <Title>영업시간</Title>\n                    <p>{open}~{close}</p>\n                </div>\n                <p style={{ marginLeft: \"8px\" }}>{description}</p>\n            </Summary>\n\n            {/* 메뉴목록 */}\n            <ContentsTable desc={[\"메뉴\", \"가격\"]} dataOrder={[\"name\", \"price\"]} data={parsedMenu} />\n\n            {/* 냠 수정용 에디터 :: 우측상단도구의 '수정'을 클릭하면 표시 */}\n            <NyamEditor\n                title=\"냠 수정하기\" pickCoord={null} taskType=\"edit\" defaultNyamValue={selectedNyam}\n                refreshMaps={refreshMaps} nyamEditorModalVisible={nyamEditorModalVisible} setNyamEditorModalVisible={setNyamEditorModalVisible}\n            />\n        </MapsModalInfoWrap>\n    );\n}\n\n// style ========================================================\nconst SPACE = \"4px\";\n\nconst MapsModalInfoWrap = styled.div`\n    display : flex;\n    flex-direction : column;\n\n    flex : 1;\n    margin-right : ${\"8px\"}; \n\n    @media(max-width : 768px){\n        margin-right : 0;\n        margin-bottom : 8px;\n    }\n    `;\nconst Tools = styled.div`\n    display : flex;\n    justify-content : flex-end;\n    margin-bottom : ${SPACE};\n    `;\n\nconst Summary = styled.div`\n    display : flex;\n    `;\n\nconst Title = styled.p`\n    margin : 0;\n    font-weight : bold;\n    `;\n\n// function =====================================================\nfunction removeSpace(string) {\n    const str = string.split(' ').join('');\n    return str;\n}","// imported Modules =============================================\nimport React from 'react';\nimport styled from 'styled-components';\n\nimport { Button, Tooltip } from \"antd\";\nimport { DeleteOutlined } from \"@ant-design/icons\"\n\n// Main Component ===============================================\nexport default function Comment ({ index, content, onDelete }) {\n    return (\n        <CommentWrap className=\"Comment\">\n            <Content>{content}</Content>\n            <Tooltip className=\"deleteComment\" title=\"크큭..없.앤.다.\" placement=\"right\">\n                <Button index={index} shape=\"circle\" icon={<DeleteOutlined />} style={{}} onClick={(e)=>{onDelete(index)}} />\n            </Tooltip>\n        </CommentWrap>\n    );\n}\n\n// style ========================================================\nconst SPACE = \"4px\";\n\nconst CommentWrap = styled.div`\n    display : flex;\n    justify-content : flex-end;\n\n    margin-top : ${SPACE};\n    `;\n\nconst Content = styled.p`\n    padding : ${SPACE};\n    border : 1px solid #DCDCDC;\n    border-radius : 8px;\n    margin : 0;\n    max-width : 100%;\n    margin-right : ${SPACE};\n    \n    word-break: break-all;\n    overflow-wrap: break-word;\n    `;\n\n// function =====================================================\n// *","// imported Modules =============================================\nimport React, { useCallback, useState } from 'react';\nimport axios from \"axios\";\n\nimport styled from 'styled-components';\n\nimport { Button, Tooltip, Input } from \"antd\";\nimport { EditOutlined } from \"@ant-design/icons\"\n\n// imported components ==========================================\nimport Comment from \"../../atoms/Comment\";\n\n// Main Component ===============================================\nexport default function MapsModalComment({ nyamListSource, selectedNyam, refreshMaps, setIsLoading }) {\n    const [newComment, setNewComment] = useState(null);\n    const commentsData = JSON.parse(selectedNyam.comment).comment;\n\n    async function onCreate(e) {\n        setIsLoading(true);\n\n        // 검증\n        if (newComment == null || newComment === '') {\n            setIsLoading(false);\n            return;\n        }\n\n        // 요청 데이터 준비`\n        const url = `${nyamListSource}?taskTarget=comment&taskType=edit`;\n        const data = JSON.stringify({\n            id: selectedNyam.id,\n            comment: JSON.stringify({ comment: [newComment, ...commentsData] })\n        });\n\n        // 요청\n        //console.log(data);\n        await axios.post(url, data);\n\n        // 리프레시\n        await refreshMaps();\n        setNewComment(null);\n        setIsLoading(false);\n    }\n\n    const onDelete = useCallback(async (index) => {\n        setIsLoading(true);\n\n        // 요청 데이터 준비\n        const url = `${nyamListSource}?taskTarget=comment&taskType=edit`;\n        const data = JSON.stringify({\n            id: selectedNyam.id,\n            comment: JSON.stringify({ comment: [...commentsData.slice(0, index), ...commentsData.slice(index + 1)] })\n        });\n\n        // 요청\n        //console.log(data);\n        await axios.post(url, data);\n\n        // 리프레시\n        await refreshMaps();\n        setIsLoading(false);\n    }, [nyamListSource, selectedNyam, commentsData, setIsLoading, refreshMaps]);\n\n    return (\n        <MapsModalCommentWrap className=\"MapsModalComment\">\n            <Form>\n                <Input placeholder=\"새로운 의견을 적어주세요\" value={newComment} onChange={(e) => { setNewComment(e.target.value); }} style={{ borderRadius: \"8px\", marginRight: \"4px\" }} />\n                <Tooltip className=\"deleteComment\" title=\"쓰기\" placement=\"right\">\n                    <Button type=\"primary\" shape=\"circle\" icon={<EditOutlined />} size=\"normal\" onClick={onCreate} />\n                </Tooltip>\n            </Form>\n\n            <Comments>\n                {\n                    commentsData.map((item, index) => (\n                        <Comment key={index} index={index} content={item} onDelete={onDelete} />\n                    ))\n                }\n            </Comments>\n        </MapsModalCommentWrap>\n    );\n}\n\n// style ========================================================\nconst BORDER_COLOR = \"#dbdbdb\";\n\nconst MapsModalCommentWrap = styled.div`\n    display : flex;\n    flex-direction : column;\n\n    width : 40%;\n\n    margin-left : auto;\n    padding : 16px;\n\n    border : 1px solid ${BORDER_COLOR};\n    border-bottom : 12px solid ${BORDER_COLOR};\n    border-radius : 8px;\n\n    @media(max-width : 768px){\n        width : 100%;\n    }\n    `;\n\nconst Comments = styled.div`\n    display : flex;\n    flex-direction : column;\n    align-content : flex-end;\n    justify-content : flex-start;\n\n    height : 100%;\n\n    overflow-y: auto;\n    `;\n\nconst Form = styled.div`\n    display :flex;\n    align-items : center;\n    `;\n\n// function =====================================================\n// *","// imported Modules =============================================\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\n\nimport { Modal } from 'antd';\n\n// imported components ==========================================\nimport MapsModalInfo from \"../followers/MapsModalInfo\";\nimport MapsModalComment from \"../followers/MapsModalComment\";\nimport Loading from \"../../atoms/Loading\";\n\n// Main Component ===============================================\nexport default function MapsModal ({nyamListSource, selectedNyam, refreshMaps, mapsModalVisible, setMapsModalVisible}) {\n    const [ isLoading, setIsLoading ] = useState(false);\n    return (\n        selectedNyam != null\n            ?\n                <MapsModalWrap className=\"MapsModal\">\n                    <StyledModal\n                        title={selectedNyam.name}\n                        visible={mapsModalVisible}\n                        onCancel={() => { setMapsModalVisible(false) }}\n                        footer={null}\n                    >\n                        <ModalContentsWrap>\n                            <MapsModalInfo nyamListSource={nyamListSource} selectedNyam={selectedNyam} refreshMaps={refreshMaps} setIsLoading={setIsLoading} setMapsModalVisible={setMapsModalVisible} />\n                            <MapsModalComment nyamListSource={nyamListSource} selectedNyam={selectedNyam} refreshMaps={refreshMaps} setIsLoading={setIsLoading} />\n                        </ModalContentsWrap>\n\n                        <Loading isLoading={isLoading} />\n                    </StyledModal>\n                </MapsModalWrap>\n    \n            :   \n                <div></div>\n    );\n}\n\n// style ========================================================\nconst MapsModalWrap = styled.div`\n\n    `;\n\nconst ModalContentsWrap = styled.div`\n    display : flex;\n\n    @media(max-width : 768px){\n        flex-direction : column;\n    }\n`;\nconst StyledModal = styled(Modal)`\n    min-width : 50%;\n`;\n// function =====================================================\n// *","export default function naverMapsinit (mapValues) {\n    // set naver.maps.Map\n    const { center, zoom } = mapValues;\n\n    const mapOptions = {\n        center: new window.naver.maps.LatLng(center.lat, center.lng),\n        zoom: zoom,\n    };\n    const map = new window.naver.maps.Map(\"map\", mapOptions);\n\n    return map;\n}","import axios from \"axios\";\n\nexport default async function naverMapsSetNyams (map, mapValues, setMarkers, setNyams, setMapsModalVisible, setSelectedNyam) {\n    // initialize temp variable for states\n    const tempNyams = initWithNyamtype(mapValues.nyamTypes);\n    const tempMarkers = initWithNyamtype(mapValues.nyamTypes);\n\n    // read nyamList\n    const nyamList = await readNyamList(mapValues.nyamListSource);\n\n    // set markers\n        // organization item\n    const org = nyamList.shift(); \n    const org_marker = new window.naver.maps.Marker({\n        position: new window.naver.maps.LatLng(org.lat, org.lng),\n        map: map,\n        icon: {\n          url : `img/icons/${org.type}.png`,\n          size: new window.naver.maps.Size(48, 48),\n          origin: new window.naver.maps.Point(0, 0),\n        }\n    });\n\n        // nyam items\n    let cnt = 0;\n    nyamList.forEach( item => { \n        const marker = new window.naver.maps.Marker({\n            position : new window.naver.maps.LatLng(item.lat, item.lng),\n            map : map,\n            icon : {\n                content: [\n                    '<div>',\n                        '<div style=\"background-color:rgba(255,255,255,0.8); padding:5px; border-radius:16px; border:1px solid #d9d9d9;\">',\n                            `<span style=\"white-space:nowrap;\">${item.name}</span>`,\n                        '</div>',\n                        `<img src=\"img/icons/svg/${item.type}.svg\">`,\n                    '</div>'\n                ].join(''),\n                size : new window.naver.maps.Size(1,500),\n                scaledSize: new window.naver.maps.Size(395, 79),\n\n                anchor: new window.naver.maps.Point(16, 48),\n                \n            }\n        });\n\n        marker.addListener(\"click\", (e) => {\n            const targetid = e.overlay[\"_nmarker_id\"];\n            const types = mapValues.nyamTypes;\n\n            for( let i = 0; i<types.length; i++){\n                const type = types[i];\n                let chk = false;\n                for( let j=0; j<tempMarkers[type].length; j++ ){\n                    if ( targetid === tempMarkers[type][j][\"_nmarker_id\"] ){\n                        setSelectedNyam(tempNyams[type][j]);\n                        setMapsModalVisible(true);\n                        chk = true;\n                        break;\n                    }\n                }\n                if (chk) { break; }\n            }\n        });\n\n        tempNyams[item.type].push(item);\n        tempMarkers[item.type].push(marker);\n\n        cnt++;\n    });\n    \n    org_marker.setZIndex(cnt); // 회사 마커가 가장 위로 올라오도록\n\n    setNyams(tempNyams);\n    setMarkers(tempMarkers);\n}\n\nasync function readNyamList (src) {\n        const { data } = await axios.get(src);\n        //console.log(\"readNyams\", data);\n\n        return data;\n}\n\nfunction initWithNyamtype (types) {\n    let obj = {};\n    types.forEach( category => {\n        obj[category] = [];\n    });\n\n    return obj;\n}","// imported Modules =============================================\nimport { React, useState, useEffect } from \"react\";\nimport ScriptTag from \"react-script-tag\";\nimport styled from \"styled-components\";\n\n// [경고] 임시적인 사용자설정 보관소 - 나중에 다른 방법으로 대체필요\nimport DataStorage from \"../../DataStorage\"; // [경고] 임시적인 사용자설정 보관소 - 나중에 다른 방법으로 대체필요\n// [경고] 임시적인 사용자설정 보관소 - 나중에 다른 방법으로 대체필요\n\n// imported components ==========================================\nimport MapsModal from \"./leaders/MapsModal\";\nimport NyamEditor from \"./followers/NyamEditor\";\nimport Loading from \"../atoms/Loading\";\n\n// imported supporters\nimport naverMapsinit from \"../supporters/naverMapsInit\";\nimport naverMapsSetNyams from \"../supporters/naverMapsSetNyams\";\n\n// Main Component ===============================================\nlet map = null;\n\nconst mapValues = {\n    nyamListSource : DataStorage(\"NYAM_LIST_SOURCE\"),\n    nyamTypes : DataStorage(\"NYAM_TYPES_KEY\"),\n    mapSource : \"https://openapi.map.naver.com/openapi/v3/maps.js?ncpClientId=ont9t74d67\",\n    center : {\n        lat : 37.552472, \n        lng : 127.076665,\n    },\n    zoom : 16,\n};\n\nexport default function Maps ({ filters, isPickmode, setIsPickmode }) {\n    const [nyams, setNyams] = useState(null);\n    const [markers, setMarkers] = useState(null);\n\n    const [isLoading, setIsLoading] = useState(false);\n    const [selectedNyam, setSelectedNyam] = useState(null);\n    const [pickCoord, setPickCoord] = useState(null); // 새로 추가할 냠의 좌표값. { x : 123, y : 123 }\n\n    const [mapsModalVisible, setMapsModalVisible] = useState(false);\n    const [nyamEditorModalVisible, setNyamEditorModalVisible] = useState(false);\n\n    useEffect( () => {\n        if ( markers !== null ) {\n            setMarkersVisible(filters, setIsLoading, markers);\n        }\n    }, [filters, markers]);\n\n    useEffect( () => {\n        if(isPickmode === true){\n            map.setCursor(\"Crosshair\");\n            const listener = window.naver.maps.Event.addListener(map, 'click', function(e) {\n                if (isPickmode===true) {\n                    const { x, y } = e.coord;\n        \n                    setPickCoord({x, y});\n                    setIsPickmode(false);\n                    setNyamEditorModalVisible(true);\n                    window.naver.maps.Event.removeListener(listener);\n                }\n            });   \n        } else if (isPickmode === false) {\n            map.setCursor(\"Move\");\n        }\n    }, [isPickmode, setIsPickmode]);\n\n    useEffect( () => {\n        // 모달이 켜있었다면 모달내용 바꿔주기\n        if ( selectedNyam != null ){\n            const { type, id } = selectedNyam;\n            const index = nyams[type].findIndex( nyam => nyam.id === id )\n            setSelectedNyam( nyams[type][index] );\n        }\n    }, [nyams, selectedNyam]);\n\n    async function refreshMaps() {\n        // 기존의 마커 모두 삭제하기\n        for( let arr of Object.values(markers) ){\n            arr.forEach( marker => {\n                marker.setMap(null);\n            });\n        }\n\n        // 다시 만들기\n        await naverMapsSetNyams(map, mapValues, setMarkers, setNyams, setMapsModalVisible, setSelectedNyam);\n\n        // 이후 useEffect에서 selectedNyam 내용 갱신.\n    }\n\n    return (\n        <MapsWrap className=\"Maps\">\n            <ScriptTag \n                type=\"text/javascript\" src={mapValues.mapSource}\n                onLoad={ async () => { \n                    setIsLoading(true);\n                    map = naverMapsinit(mapValues);\n                    await naverMapsSetNyams(map, mapValues, setMarkers, setNyams, setMapsModalVisible, setSelectedNyam);\n                    setIsLoading(false);\n                }} \n            />\n\n            <Map id=\"map\"></Map>\n            <MapsModal nyamListSource={mapValues.nyamListSource} selectedNyam={selectedNyam} refreshMaps={refreshMaps} mapsModalVisible={mapsModalVisible} setMapsModalVisible={setMapsModalVisible} />\n            <NyamEditor \n                title={\"새로운 냠 만들기\"} pickCoord={pickCoord} taskType=\"create\" defaultNyamValue={null} \n                refreshMaps={refreshMaps} nyamEditorModalVisible={nyamEditorModalVisible} setNyamEditorModalVisible={setNyamEditorModalVisible}  \n            />\n\n            <Loading isLoading={isLoading} />\n        </MapsWrap>\n    );\n}\n\n// style ========================================================\nconst MapsWrap = styled.div`\n    display : flex;\n    flex : 1;\n    `;\n\nconst Map = styled.div`\n    width: 100%;\n    height : 100%;\n    `;\n\n// function =====================================================\nconst setMarkersVisible = (filters, setIsLoading, markers) => {\n    setIsLoading(true);\n\n    const types = mapValues.nyamTypes; // 정의되어있는 type배열 불러오기\n\n    types.forEach( type => {\n        const target = markers[type]; // markers의 한 type을 대상으로 정함\n        if (target.length === 0) { return; } // 대상이 비어있으면 바로 함수종료\n\n        const dest = filters[type]; // 업데이트 하려고 하는 값\n        if ( target[0].getVisible() !== dest ){ // target안의 첫번째 마커의 visible속성과, 업데이트 하려고 하는 값이 다르면\n            target.forEach( marker => { marker.setVisible(dest); }); // 업데이트!\n            return;\n        }\n    });\n\n    setIsLoading(false);\n}","// imported Modules =============================================\nimport { React } from 'react';\nimport styled from 'styled-components';\n\n// imported components ==========================================\n// *\n\n// Main Component ===============================================\nexport default function Footer () {\n    return (\n        <FooterWrap className=\"Footer\">\n            <Group>\n                <Item>Wonjin Yi</Item>\n                <Item><strong>Contact </strong>studioplug17@gmail.com</Item>\n            </Group>\n            <Group style={{marginLeft : \"auto\",}}>\n                <Item><strong>냠냠램 TEST </strong>조직내부의 폐쇄적인 냠냠거리 공유 서비스</Item>\n            </Group>\n        </FooterWrap>\n    );\n}\n\n// style ========================================================\nconst FooterWrap = styled.div`\n    display : flex;\n \n    width : 100%;\n    padding : 20px 30px;\n\n    background-color : #333333;\n    color : #a1a1a1;\n    `; \n\nconst Group = styled.div`\n\n    `;\n\nconst Item = styled.p`\n    margin : 0;\n    `;\n\n// function =====================================================\n// *","// imported Modules =============================================\nimport { React, useEffect, useState } from 'react';\nimport styled from \"styled-components\";\nimport {notification} from \"antd\";\n\n// imported components ==========================================\nimport Header from \"./components/Header/Header\";\nimport Maps from \"./components/Maps/Maps\";\nimport Footer from \"./components/Footer/Footer\";\n\n// Main Component ===============================================\nexport default function App() {\n  const [filters, setFilters] = useState({});\n  const [isPickmode, setIsPickmode] = useState(null); // 현재 '새로운 냠'버튼을 눌러 새로운 위치를 찍는 상태인지를 표현. true / false\n\n  // temp temp temp temp temp temp temp temp temp temp\n  useEffect( () => {\n    notification.open({\n      message: '안녕히계세요여러분저는이세상의모든굴레와...',\n      description:\n        \"여기(nyam.wonj.in)는 멀지않은 미래에 모든 사람의 '냠 연구소'로 통하는 대문으로 바뀔 예정입니다. 대문에서 'datalab_gorani'을 입력하시면 현재와 같은 페이지를 열람하실 수 있습니다. 데이터연구소의 '냠 연구소'는 구글시트가 망하기 전까지는 유지됩니다.\",\n      duration : 0\n    });\n  }, []);\n  // temp temp temp temp temp temp temp temp temp temp\n\n  return (\n    <AppWrap className=\"App\" style={{ cursor : (isPickmode ? 'Crosshair' : 'auto') }}>\n      <Header setFilters={setFilters} setIsPickmode={setIsPickmode} />\n      <Maps filters={filters} isPickmode={isPickmode} setIsPickmode={setIsPickmode} />\n      <Footer />\n    </AppWrap>\n  );\n}\n\n// style ========================================================\nconst AppWrap = styled.div`\n  display : flex;\n  flex-direction : column;\n  height : 100%;\n`;\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    // <React.StrictMode>\n    //   <App />\n    // </React.StrictMode>,\n    \n    <App />,\n    document.getElementById('root')\n);"],"sourceRoot":""}