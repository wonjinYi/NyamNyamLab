{"version":3,"sources":["DataStorage.js","Home/LabFinder.js","ShareComponents/atoms/Loading.js","ShareComponents/atoms/Footer.js","logo.svg","Home/Home.js","App/components/Header/followers/UpdateNoteRaw.md","App/components/Header/followers/UpdateNote.js","App/components/Header/followers/Tools.js","App/components/Header/Header.js","App/components/atoms/ContentsTable.js","App/components/atoms/DeleteBtn.js","App/components/Maps/followers/MapsModalInfo.js","App/components/Maps/followers/Comment.js","App/components/Maps/followers/MapsModalComment.js","App/components/Maps/leaders/MapsModal.js","App/components/Maps/followers/NyamEditor.js","App/components/supporters/initNaverMaps.js","App/components/supporters/readContents.js","App/components/supporters/createNyamMarkers.js","App/components/supporters/createCenterMarker.js","App/components/Maps/Maps.js","App/App.js","NyamNyamLab.js","index.js"],"names":["DataStorage","key","NYAM_TYPES","korea","china","japan","asian","schoolfood","fastfood","cafe","bakery","pub","cvs","NYAM_TYPES_KEY","ACCESS_MANAGER","ROUTE_MANAGER","MAP_SOURCE","FIND_OPTION","PLACE_HOLDER","first","second","LabFinder","setIsLoading","useState","isReady","setIsReady","labAccessInfo","setLabAccessInfo","findOption","setFindOption","firstInput","setFirstInput","secondInput","setSecondInput","onSubmit","e","a","postData","taskType","labName","routePw","axios","post","JSON","stringify","data","status","labId","accessManagerUrl","message","destroy","success","console","log","error","content","duration","onClick","useEffect","to","pathname","state","LabFinderWrap","className","SelectMenu","parseInt","selectedKeys","mode","SelectItem","disabled","FinderForm","FinderInput","placeholder","size","value","onChange","target","onPressEnter","FinderInputPw","type","FinderButton","icon","SearchOutlined","styled","div","Menu","Item","Input","Password","Button","Loading","isLoading","LoadingWrap","Backdrop","spinning","indicator","LoadingOutlined","style","fontSize","spin","Footer","FooterWrap","Group","p","Home","notification","open","description","HomeWrap","MainSection","Header","borderRadius","marginRight","shape","GithubOutlined","Contents","Logo","src","LogoImage","alt","LogoText","DetailSection","margin","textAlign","h1","UpdateNote","updateNoteModalVisible","setUpdateNoteModalVisible","markdown","setMarkdown","fetch","mdSource","then","res","text","str","init","UpdateNoteWrap","title","visible","onCancel","footer","minWidth","children","Tools","setFilters","setIsPickmode","setNyamEditorTaskType","arr","obj","forEach","el","initChecked","checked","setChecked","ToolsWrap","placement","filterContent","nyamType","trigger","MenuButton","FilterOutlined","createNyamContent","PlusOutlined","marginLeft","display","BookOutlined","SettingOutlined","styld","flexDirection","map","index","HeaderWrap","LogoImg","LOGO_IMG","img","ContentsTable","desc","dataOrder","ContentsTableWrap","Table","Row","borderWidth","Th","rowItem","colItem","Td","CELL_PADDING","BORDER_COLOR","table","tr","th","td","DeleteBtn","setDeleteConfirm","setVisible","formContent","justifyContent","DeleteBtnWrap","onVisibleChange","DeleteOutlined","MapsModalInfo","selectedNyam","refreshMaps","setMapsModalVisible","setNyamEditorModalVisible","deleteConfirm","close","menu","parsedMenu","parse","onDelete","useCallback","url","nyam","MapsModalInfoWrap","href","removeSpace","name","rel","QuestionCircleOutlined","SPACE","FormOutlined","Summary","Title","string","split","join","Comment","CommentWrap","Content","MapsModalComment","newComment","setNewComment","commentsData","comment","id","slice","MapsModalCommentWrap","Form","suffix","onEmojiClick","emoji","SmileOutlined","EditOutlined","Comments","item","MapsModal","mapsModalVisible","MapsModalWrap","StyledModal","ModalContentsWrap","Modal","SUMMARY_INIT_VALUE","lat","lng","MENUITEM_INIT_VALUE","price","NyamEditor","pickCoord","defaultNyamValue","nyamEditorModalVisible","resetLock","setResetLock","summary","setSummary","menuItems","setMenuItems","initFormData","tempSummary","tempMenuItems","y","x","onChangeSummary","onChangeMenuItems","addNewMenuItem","removeMenuItem","Object","assign","keys","property","warning","rawData","NyamEditorWrap","SummaryWrap","Coord","info","StyledInput","TimePickersWrap","format","moment","time","timeString","flexGrow","minuteStep","Option","MenusWrap","MenuItemWrap","StyledButton","MinusOutlined","MenuItem","length","ButtonsWrap","summaryReplace","naverMapsinit","setting","zoom","mapOptions","center","window","naver","maps","LatLng","Map","readContents","get","rawNyamList","nyamList","Error","createNyamMarkers","nyamTypes","setMarkers","setNyams","setSelectedNyam","tempNyams","initWithNyamtype","tempMarkers","marker","Marker","position","anchor","Point","addListener","targetid","overlay","types","i","chk","j","push","err","category","createCenterMarker","Size","origin","Maps","filters","isPickmode","nyamEditorTaskType","nyams","markers","setPickCoord","values","setMap","dest","getVisible","setMarkersVisible","setCursor","listener","Event","coord","removeListener","findIndex","MapsWrap","onLoad","contents","initNaverMaps","App","location","history","AppWrap","cursor","NyamNyamLab","NyamNyamLabWrap","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"+SACe,SAASA,EAAaC,GAoBjC,MAnBa,CACTC,WAAa,CACTC,MAAQ,eACRC,MAAQ,eACRC,MAAQ,eACRC,MAAQ,qBACRC,WAAa,eACbC,SAAW,iCACXC,KAAO,eACPC,OAAS,2BACTC,IAAM,eACNC,IAAM,sBAEVC,eAAiB,CAAC,QAAS,QAAS,QAAS,WAAY,MAAO,OAAQ,QAAS,aAAc,SAAU,OACzGC,eAAiB,qHACjBC,cAAgB,qHAChBC,WAAY,2EAGJf,G,yBCNVa,EAAiBd,EAAY,kBAC7Be,EAAgBf,EAAY,iBAE5BiB,EAAuB,EAAvBA,EAAkC,EAClCC,EAAe,CACjB,CAAEC,MAAO,uEAAiBC,OAAQ,8EAClC,CAAED,MAAO,6DAAiBC,OAAQ,8GAGvB,SAASC,EAAT,GAAsC,IAAjBC,EAAgB,EAAhBA,aAAgB,EAClBC,oBAAS,GADS,mBACzCC,EADyC,KAChCC,EADgC,OAENF,mBAAS,MAFH,mBAEzCG,EAFyC,KAE1BC,EAF0B,OAIZJ,mBAASN,GAJG,mBAIzCW,EAJyC,KAI7BC,EAJ6B,OAMZN,mBAAS,IANG,mBAMzCO,EANyC,KAM7BC,EAN6B,OAOVR,mBAAS,IAPC,mBAOzCS,EAPyC,KAO5BC,EAP4B,cAejCC,EAfiC,8EAehD,WAAwBC,GAAxB,uBAAAC,EAAA,2DACYR,EADZ,cAEaX,EAFb,SA+BaA,EA/Bb,0BAGYK,GAAa,GACPe,EAAW,CACbC,SAAU,UACVC,QAAST,EACTU,QAASR,GAPzB,SASqDS,IAAMC,KAAK3B,EAAe4B,KAAKC,UAAUP,IAT9F,2BASoBQ,KAAQC,EAT5B,EAS4BA,OAAQD,EATpC,EASoCA,KAET,YAAXC,GACAnB,EAAiB,CACboB,MAAOF,EACPG,iBAAkBlC,IAEtBmC,IAAQC,UACRD,IAAQE,QAAQ,0EAEhBC,QAAQC,IAAI,gDACZJ,IAAQK,MAAM,CACVC,QAAU,6EACVC,SAAW,EACXvD,IAAM,eACNwD,QAAU,SAACtB,GAAKc,IAAQC,QAAQ,oBAIxC5B,GAAa,GA5BzB,iEAkCY8B,QAAQE,MAAM,uEAlC1B,6CAfgD,sBAsDhD,OA7CAI,qBAAU,WACFhC,GACAD,GAAW,KAEhB,CAACC,IA0CAF,EACM,cAAC,IAAD,UACE,cAAC,IAAD,CAAUmC,GAAI,CACVC,SAAU,OACVC,MAAOnC,OAGb,eAACoC,EAAD,CAAeC,UAAU,YAAzB,UACE,eAACC,EAAD,CAAYP,QAAS,SAAAtB,GAAON,EAAcoC,SAAS9B,EAAElC,OAASiE,aAAY,UAAKtC,GAAcuC,KAAK,aAAlG,UACI,cAACC,EAAD,6DAAoBnD,IACpB,cAACmD,EAAD,CAAYC,UAAQ,EAApB,gDAA6BpD,OAEjC,eAACqD,EAAD,WACI,cAACC,EAAD,CACIC,YAAatD,EAAaU,GAAYT,MAAOsD,KAAK,QAClDC,MAAO5C,EACP6C,SAAU,SAACxC,GAAQJ,EAAcI,EAAEyC,OAAOF,QAC1CG,aAAc3C,IAElB,cAAC4C,EAAD,CACIN,YAAatD,EAAaU,GAAYR,OAAQqD,KAAK,QACnDM,KAAK,WACLL,MAAO1C,EACP2C,SAAU,SAACxC,GAAQF,EAAeE,EAAEyC,OAAOF,QAC3CG,aAAc3C,IAElB,cAAC8C,EAAD,CAAcC,KAAM,cAACC,EAAA,EAAD,IAAoBT,KAAK,QAAQhB,QAASvB,EAA9D,mDAWpB,I,IAAM4B,EAAgBqB,IAAOC,IAAV,sMAWbpB,EAAamB,YAAOE,IAAPF,CAAH,wIAOVf,EAAae,YAAOE,IAAKC,KAAZH,CAAH,oDAIVb,EAAaa,IAAOC,IAAV,qKASVb,EAAcY,YAAOI,IAAPJ,CAAH,2NAWXL,EAAgBK,YAAOI,IAAMC,SAAbL,CAAH,2NAWbH,EAAeG,YAAOM,IAAPN,CAAH,8E,wBChKH,SAASO,EAAT,GAAkC,IAAdC,EAAa,EAAbA,UAE/B,OAAKA,EAEG,eAACC,EAAD,CAAa7B,UAAU,UAAvB,UACI,cAAC8B,GAAD,IACA,cAAC,IAAD,CAAMC,SAAUH,EAAWlB,KAAK,QAAQsB,UAAW,cAACC,EAAA,EAAD,CAAiBC,MAAO,CAAEC,SAAU,IAAMC,MAAI,SAIlG,qBAAKpC,UAAU,YAM9B,I,MAAM6B,EAAcT,IAAOC,IAAV,gNAaXS,GAAWV,IAAOC,IAAV,2KC9BC,SAASgB,KACpB,OACI,cAACC,GAAD,CAAYtC,UAAU,SAAtB,SACI,eAACuC,GAAD,WACI,eAAChB,GAAD,WAAM,yDAAN,+FACA,eAACA,GAAD,WAAM,8CAAN,oCAOhB,I,qBAAMe,GAAalB,IAAOC,IAAV,sMAWVkB,GAAQnB,IAAOC,IAAV,kCAILE,GAAOH,IAAOoB,EAAV,iDCnCK,OAA0B,iCCe1B,SAASC,KAAQ,IAAD,EACOjF,oBAAS,GADhB,mBACpBoE,EADoB,KACTrE,EADS,KAY3B,OATAoC,qBAAW,WACP+C,IAAaC,KAAK,CACdzD,QAAS,wEACT0D,YAAY,2RACZnD,SAAW,MAEhB,IAIC,eAACoD,GAAD,CAAU7C,UAAU,OAApB,UACI,eAAC8C,GAAD,WACI,eAACC,GAAD,WACI,cAAC,IAAD,CAAQzC,UAAQ,EAAC4B,MAAO,CAACc,aAAa,OAAQC,YAAY,QAA1D,mDAGA,cAAC,IAAD,CAAQ3C,UAAQ,EAAC4C,MAAM,SAAShC,KAAM,cAACiC,EAAA,EAAD,SAE1C,eAACC,GAAD,WACI,eAACC,GAAD,WACI,qBAAKC,IAAKC,GAAWC,IAAI,qBACzB,cAACC,GAAD,oCAEJ,cAACnG,EAAD,CAAWC,aAAcA,UAIjC,cAACmG,GAAD,UACI,oBAAIxB,MAAO,CAACyB,OAAS,UAAWC,UAAU,UAA1C,kEAKJ,cAACvB,GAAD,IAEA,cAACV,EAAD,CAASC,UAAWA,OAMhC,I,GAAMiB,GAAWzB,IAAOC,IAAV,wCAIRyB,GAAc1B,IAAOC,IAAV,mKASX0B,GAAS3B,IAAOC,IAAV,4GAMN+B,GAAWhC,IAAOC,IAAV,8JAQRgC,GAAOjC,IAAOC,IAAV,yIAQJoC,GAAWrC,IAAOyC,GAAV,uKASRH,GAAgBtC,IAAOC,IAAV,gC,uHCvGJ,OAA0B,yCCY1B,SAASyC,GAAT,GAA2E,IAArDC,EAAoD,EAApDA,uBAAwBC,EAA4B,EAA5BA,0BAA4B,EACrDxG,mBAAS,IAD4C,mBAC9EyG,EAD8E,KACpEC,EADoE,KAarF,OAVAvE,qBAAW,WAAM,4CACb,4BAAAtB,EAAA,sEACsB8F,MAAMC,IACvBC,MAAM,SAAAC,GAAG,OAAIA,EAAIC,UAFtB,OACUC,EADV,OAIIN,EAAYM,GAJhB,4CADa,uBAAC,WAAD,wBAObC,KACD,CAACR,IAGA,cAACS,GAAD,CAAgB1E,UAAU,aAA1B,SACI,cAAC,KAAD,CACI2E,MAAO,wCACPC,QAASb,EACTc,SAAU,WAAQb,GAA0B,IAC5Cc,OAAQ,KACR5C,MAAO,CAAC6C,SAAS,OALrB,SAOI,cAAC,KAAD,CAAeC,SAAUf,QAOzC,I,MAAMS,GAAiBtD,IAAOC,IAAV,oCC3BdlF,GAAaF,EAAY,cACzBa,GAAiBb,EAAY,kBAKpB,SAASgJ,GAAT,GAAuE,IAArDC,EAAoD,EAApDA,WAAYC,EAAwC,EAAxCA,cAAeC,EAAyB,EAAzBA,sBAAyB,EACnD5H,mBAiFlC,SAAqB6H,GACjB,IAAIC,EAAM,GAKV,OAJAD,EAAIE,SAAS,SAAAC,GACTF,EAAIE,IAAM,KAGPF,EAvFiCG,CAAY3I,KAD6B,mBAC1E4I,EAD0E,KACjEC,EADiE,OAErBnI,oBAAS,GAFY,mBAE1EuG,EAF0E,KAElDC,EAFkD,KAUjF,OANArE,qBAAY,WACRuF,EAAWQ,KACZ,CAACA,EAASR,IAKT,eAACU,GAAD,CAAW5F,UAAU,QAArB,UACI,sBAAKA,UAAU,UAAf,UAEI,cAAC,KAAD,CAAS6F,UAAU,SAASlB,MAAO,4BAASnF,QAASsG,IANjE,SAAkB1H,GAAKuH,EAAW,6BAAKD,GAAN,mBAAgBtH,EAAEyC,OAAOkF,SAAY3H,EAAEyC,OAAO6E,aAMUA,GAAUM,QAAQ,QAA/F,SACI,cAAC,KAAD,CAASrB,MAAM,4BAAQkB,UAAU,OAAjC,SACI,cAACI,GAAD,CAAY/C,MAAM,SAAShC,KAAM,cAACgF,GAAA,EAAD,UAKzC,cAAC,KAAD,CAASL,UAAU,SAASlB,MAAO,+CAAanF,QAAS2G,GAAmBH,QAAQ,QAApF,SACI,cAAC,KAAD,CAASrB,MAAM,4BAAQkB,UAAU,QAAjC,SACI,cAACI,GAAD,CAAY/C,MAAM,SAAShC,KAAM,cAACkF,GAAA,EAAD,IAAkBlE,MAAO,CAACmE,WAAW,OAClE3G,QAAU,WACN0F,EAAsB,UACtBD,GAAc,aAOlC,sBAAKnF,UAAU,WAAWkC,MAAO,CAACmE,WAAW,OAAQC,QAAU,QAA/D,UACI,eAAC,KAAD,CAAS3B,MAAM,wCAAUkB,UAAU,QAAnC,UACI,cAACI,GAAD,CAAY/C,MAAM,SAAShC,KAAM,cAACqF,GAAA,EAAD,IAAmB7G,QAAU,WAAQsE,GAA0B,MAChG,cAACF,GAAD,CAAYC,uBAAwBA,EAAwBC,0BAA2BA,OAE3F,cAACiC,GAAD,CAAY/C,MAAM,SAAShC,KAAM,cAACsF,GAAA,EAAD,IAAsBtE,MAAO,CAACmE,WAAW,OAAQ/F,UAAQ,UAM1G,SAASwF,GAAclF,EAAU8E,GAC7B,OACI,qBAAK1F,UAAU,gBAAgByG,MAAO,CAACH,QAAQ,OAAQI,cAAc,UAArE,SAEI5J,GAAe6J,KAAK,SAAC3F,EAAM4F,GAAP,OAChB,8BAAiB,cAAC,KAAD,CAAUhG,SAAUA,EAAU8E,QAASA,EAAQ1E,GAAO+E,SAAU/E,EAAhE,SAAuE7E,GAAW6E,MAAzF4F,QAO1B,I,YAAMT,GACF,8BACI,mBAAGjE,MAAO,CAACyB,OAAO,KAAlB,SAAwB,oJAM1BiC,GAAYxE,IAAOC,IAAV,wNAaT4E,GAAa7E,YAAOM,IAAPN,CAAH,mDCrFD,SAAS2B,GAAT,GAAwE,IAArDmC,EAAoD,EAApDA,WAAYC,EAAwC,EAAxCA,cAAeC,EAAyB,EAAzBA,sBACzD,OACI,eAACyB,GAAD,CAAY7G,UAAU,SAAtB,UACI,cAAC,IAAD,CAAMJ,GAAI,CAAEC,SAAS,KAArB,SACI,eAAC,GAAD,WACI,cAACiH,GAAD,CAASxD,IAAKyD,GAAUvD,IAAI,eAC5B,cAAC,GAAD,sCAGR,cAACyB,GAAD,CAAOC,WAAYA,EAAYC,cAAeA,EAAeC,sBAAuBA,OAMhG,I,eAAMyB,GAAazF,IAAOC,IAAV,sKAUVgC,GAAOjC,IAAOC,IAAV,2IAOJyF,GAAU1F,IAAO4F,IAAV,yEAIPvD,GAAWrC,IAAOyC,GAAV,0I,yCCxCC,SAASoD,GAAT,GAAmD,IAA1BC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,UAAWrI,EAAQ,EAARA,KAKrD,OACI,cAACsI,GAAD,CAAmBpH,UAAU,gBAA7B,SACI,eAACqH,GAAD,WACI,gCACI,cAACC,GAAD,CAAKpF,MAAO,CAACqF,YAAY,OAAzB,SAEIL,EAAKP,KAAK,SAACnB,EAAIoB,GAAL,OACN,cAACY,GAAD,UAAkBhC,GAAToB,UAMrB,gCAEI9H,EAAK6H,KAAK,SAACc,EAAQb,GAAT,OACN,cAACU,GAAD,UAEIH,EAAUR,KAAK,SAACe,EAASd,GAAV,OACX,cAACe,GAAD,UAAkBF,EAAQC,IAAjBd,OAHPA,aAiBlC,I,GAAMgB,GAAe,MACfC,GAAe,UAEfT,GAAoBhG,IAAOC,IAAV,gJAEEwG,GACQA,IAI3BR,GAAQjG,IAAO0G,MAAV,+EAKLR,GAAMlG,IAAO2G,GAAV,yFACOH,GACgBC,IAG1BL,GAAKpG,IAAO4G,GAAV,qDACQJ,IAGVD,GAAKvG,IAAO6G,GAAV,qDACQL,I,UC1DD,SAASM,GAAT,GAA0C,IAArBC,EAAoB,EAApBA,iBAAoB,EACtB3K,oBAAS,GADa,mBAC7CoH,EAD6C,KACpCwD,EADoC,KAG9CC,EACF,sBAAKrI,UAAU,iBAAiBkC,MAAO,CAAEoE,QAAS,OAAQgC,eAAgB,UAA1E,UACI,cAAC,IAAD,CAAQ5I,QAKhB,WACIyI,GAAiB,GACjBC,GAAW,IAPqBpH,KAAK,UAAUkB,MAAO,CAAEe,YAAa,OAAjE,oBACA,cAAC,IAAD,CAAQvD,QAShB,WACI0I,GAAW,IAVP,mCAaR,OACI,cAACG,GAAD,CAAevI,UAAU,YAAzB,SACI,cAAC,KAAD,CACIgG,QAAQ,QAAQpB,QAASA,EAAS4D,gBAAiB,SAAC5D,GAAWwD,EAAWxD,IAC1EiB,UAAU,QAAQlB,MAzBZ,+CAyBkCnF,QAAS6I,EAAa3I,QAAS,SAACtB,GAAQgK,GAAW,IAF/F,SAII,cAAC,IAAD,CAAQlF,MAAM,SAAShC,KAAM,cAACuH,GAAA,EAAD,UAO7C,I,YAAMF,GAAgBnH,IAAOC,IAAV,oCChCJ,SAASqH,GAAT,GAA2J,IAAlI/K,EAAiI,EAAjIA,cAAegL,EAAkH,EAAlHA,aAAcC,EAAoG,EAApGA,YAAarL,EAAuF,EAAvFA,aAAcsL,EAAyE,EAAzEA,oBAAqBC,EAAoD,EAApDA,0BAA2B1D,EAAyB,EAAzBA,sBAAyB,EAC3H5H,oBAAS,GADkH,mBAC9JuL,EAD8J,KAC/IZ,EAD+I,KAG7JlJ,EAA4BtB,EAA5BsB,iBAAkBD,EAAUrB,EAAVqB,MAElB2D,EAAmCgG,EAAnChG,KAAMqG,EAA6BL,EAA7BK,MAAOpG,EAAsB+F,EAAtB/F,YAAaqG,EAASN,EAATM,KAC5BC,EAAatK,KAAKuK,MAAMF,GAAMA,KAE9BG,EAAWC,sBAAW,sBAAC,8BAAAhL,EAAA,6DACzBd,GAAa,GAGP+L,EAJmB,UAIVrK,EAJU,oCAKnBH,EAAOF,KAAKC,UAAU,CACxB0K,KAAMZ,EACN3J,MAAOA,IAPc,SAUnBN,IAAMC,KAAK2K,EAAKxK,GAVG,uBAYnB8J,IAZmB,OAazBC,GAAoB,GACpBtL,GAAa,GAEb2B,IAAQE,QAAQ,iGAhBS,4CAiB1B,CAAC7B,EAAc0B,EAAkBD,EAAO4J,EAAaD,EAAcE,IAiBtE,OAfAlJ,qBAAU,YACgB,IAAlBoJ,IACAK,IACAjB,GAAiB,MAEtB,CAACY,EAAeK,IAWf,eAACI,GAAD,CAAmBxJ,UAAU,gBAA7B,UAEI,eAAC,GAAD,WACI,mBAAGyJ,KAAI,0CAAqCC,GAAYf,EAAagB,OAAS9I,OAAO,SAAS+I,IAAI,aAAlG,SACI,cAAC,KAAD,CAASjF,MAAM,iCAAQkB,UAAU,MAAjC,SACI,cAAC,IAAD,CAAQ3C,MAAM,SAAShC,KAAM,cAAC2I,GAAA,EAAD,IAA4BnJ,KAAK,SAASwB,MAAO,CAAEe,YAAa6G,UAGrG,cAAC,KAAD,CAASnF,MAAM,eAAKkB,UAAU,MAA9B,SACI,cAAC,IAAD,CAAQ3C,MAAM,SAAShC,KAAM,cAAC6I,GAAA,EAAD,IAAkBrJ,KAAK,SAASwB,MAAO,CAAEe,YAAa6G,IAASpK,QAhB5G,SAAwBtB,GACpBgH,EAAsB,QACtByD,GAAoB,GACpBC,GAA0B,QAiBlB,cAAC,KAAD,CAASnE,MAAM,eAAKkB,UAAU,MAA9B,SACI,cAACqC,GAAD,CAAWC,iBAAkBA,SAMrC,eAAC6B,GAAD,WACI,gCACI,cAACC,GAAD,uCACA,8BAAItH,EAAJ,IAAWqG,QAEf,mBAAG9G,MAAO,CAAEmE,WAAY,OAAxB,SAAkCzD,OAItC,cAACqE,GAAD,CAAeC,KAAM,CAAC,eAAM,gBAAOC,UAAW,CAAC,OAAQ,SAAUrI,KAAMoK,OAMnF,IAAMY,GAAQ,MAERN,GAAoBpI,IAAOC,IAAV,iOAKF,OAOf4D,GAAQ7D,IAAOC,IAAV,iHAGWyI,IAGhBE,GAAU5I,IAAOC,IAAV,uDAIP4I,GAAQ7I,IAAOoB,EAAV,4EAMX,SAASkH,GAAYQ,GAEjB,OADYA,EAAOC,MAAM,KAAKC,KAAK,I,4DClHxB,SAASC,GAAT,GAAiD,IAA7BzD,EAA4B,EAA5BA,MAAOpH,EAAqB,EAArBA,QAAS4J,EAAY,EAAZA,SAAY,EACjB5L,oBAAS,GADQ,mBACpDuL,EADoD,KACrCZ,EADqC,KAS3D,OAPAxI,qBAAW,YACc,IAAlBoJ,IACCK,EAASxC,GACTuB,GAAiB,MAEtB,CAACY,EAAeK,EAAUxC,IAGzB,eAAC0D,GAAD,CAAatK,UAAU,UAAvB,UACI,cAACuK,GAAD,UAAU/K,IACV,cAAC0I,GAAD,CAAWC,iBAAkBA,OAMzC,I,SAAM2B,GAAQ,MAERQ,GAAclJ,IAAOC,IAAV,gHAIEyI,IAGbS,GAAUnJ,IAAOoB,EAAV,mPACGsH,GAKKA,IC1BN,SAASU,GAAT,GAAuF,IAA3D7M,EAA0D,EAA1DA,cAAegL,EAA2C,EAA3CA,aAAcC,EAA6B,EAA7BA,YAAarL,EAAgB,EAAhBA,aAAgB,EAC7DC,mBAAS,IADoD,mBAC1FiN,EAD0F,KAC9EC,EAD8E,KAE3FC,EAAe/L,KAAKuK,MAAMR,EAAaiC,SAASA,QAC9C3L,EAA4BtB,EAA5BsB,iBAAkBD,EAAUrB,EAAVqB,MAHuE,4CAKjG,WAAwBZ,GAAxB,iBAAAC,EAAA,yDACId,GAAa,GAGK,MAAdkN,GAAqC,KAAfA,EAJ9B,uBAKQlN,GAAa,GALrB,iCAUU+L,EAVV,UAUmBrK,EAVnB,qCAWUH,EAAOF,KAAKC,UAAU,CACxB0K,KAAO,CACHsB,GAAIlC,EAAakC,GACjBD,QAAShM,KAAKC,UAAU,CAAE+L,QAAQ,CAAEH,GAAH,oBAAkBE,OAEvD3L,MAAQA,IAhBhB,SAoBUN,IAAMC,KAAK2K,EAAKxK,GApB1B,wBAuBU8J,IAvBV,QAwBI8B,EAAc,IACdxL,IAAQE,QAAQ,iEAChB7B,GAAa,GA1BjB,6CALiG,sBAkCjG,IAAM6L,EAAWC,sBAAW,uCAAC,WAAOzC,GAAP,iBAAAvI,EAAA,6DACzBd,GAAa,GAGP+L,EAJmB,UAIVrK,EAJU,qCAKnBH,EAAOF,KAAKC,UAAU,CACxB0K,KAAO,CACHsB,GAAIlC,EAAakC,GACjBD,QAAShM,KAAKC,UAAU,CAAE+L,QAAQ,GAAD,oBAAMD,EAAaG,MAAM,EAAGlE,IAA5B,aAAuC+D,EAAaG,MAAMlE,EAAQ,QAEvG5H,MAAQA,IAVa,SAcnBN,IAAMC,KAAK2K,EAAKxK,GAdG,uBAiBnB8J,IAjBmB,OAkBzB1J,IAAQE,QAAQ,iEAChB7B,GAAa,GAnBY,2CAAD,sDAoBzB,CAAC0B,EAAkBD,EAAO2J,EAAcgC,EAAcpN,EAAcqL,IAEvE,OACI,eAACmC,GAAD,CAAsB/K,UAAU,mBAAhC,UACI,eAACgL,GAAD,WACI,cAAC,IAAD,CACIvK,YAAY,uEACZE,MAAO8J,EAAY7J,SAAU,SAACxC,GAAQsM,EAActM,EAAEyC,OAAOF,QAC7DuB,MAAO,CAAEc,aAAc,MAAOC,YAAa,OAC3CgI,OACI,cAAC,KAAD,CAASpF,UAAU,SAASlB,MAAO,KAAMnF,QAAS,cAAC,KAAD,CAAQ0L,aAAc,SAAC9M,EAAGkH,GAAUoF,EAAcD,EAAanF,EAAI6F,UAAcnF,QAAQ,QAA3I,SACI,cAAC,KAAD,CAASrB,MAAM,qBAAMkB,UAAU,MAA/B,SACI,cAACuF,GAAA,EAAD,UAMhB,cAAC,KAAD,CAASpL,UAAU,gBAAgB2E,MAAM,eAAKkB,UAAU,QAAxD,SACI,cAAC,IAAD,CAAQ7E,KAAK,UAAUkC,MAAM,SAAShC,KAAM,cAACmK,GAAA,EAAD,IAAkB3K,KAAK,SAAShB,QAzEK,mDA6EzF,cAAC4L,GAAD,UAEQX,EAAahE,KAAI,SAAC4E,EAAM3E,GAAP,OACb,cAACyD,GAAD,CAAqBzD,MAAOA,EAAOpH,QAAS+L,EAAMnC,SAAUA,GAA9CxC,WAStC,I,SAAMiB,GAAe,UAEfkD,GAAuB3J,IAAOC,IAAV,sTASDwG,GACQA,IAQ3BmD,GAAO5J,IAAOC,IAAV,iFAKJiK,GAAWlK,IAAOC,IAAV,sMCrHC,SAASmK,GAAT,GAA0J,IAArI7N,EAAoI,EAApIA,cAAegL,EAAqH,EAArHA,aAAcC,EAAuG,EAAvGA,YAAa6C,EAA0F,EAA1FA,iBAAkB5C,EAAwE,EAAxEA,oBAAqBC,EAAmD,EAAnDA,0BAA2B1D,EAAwB,EAAxBA,sBAAwB,EAChI5H,oBAAS,GADuH,mBAC5JoE,EAD4J,KACjJrE,EADiJ,KAGpK,OACoB,MAAhBoL,EAEQ,cAAC+C,GAAD,CAAe1L,UAAU,YAAzB,SACI,eAAC2L,GAAD,CACIhH,MAAOgE,EAAagB,KACpB/E,QAAS6G,EACT5G,SAAU,WAAQgE,GAAoB,IACtC/D,OAAQ,KAJZ,UAMI,eAAC8G,GAAD,WACI,cAAClD,GAAD,CACI/K,cAAeA,EAAegL,aAAcA,EAAcC,YAAaA,EACvErL,aAAcA,EAAcsL,oBAAqBA,EAAqBC,0BAA2BA,EAA2B1D,sBAAuBA,IAEvJ,cAACoF,GAAD,CAAkB7M,cAAeA,EAAegL,aAAcA,EAAcC,YAAaA,EAAarL,aAAcA,OAGxH,cAACoE,EAAD,CAASC,UAAWA,SAK5B,wBAKhB,I,2BAAM8J,GAAgBtK,IAAOC,IAAV,oCAIbuK,GAAoBxK,IAAOC,IAAV,8HAOjBsK,GAAcvK,YAAOyK,KAAPzK,CAAH,oD,sECxCXjF,GAAaF,EAAY,cACzBa,GAAiBb,EAAY,kBAE7B6P,GAAqB,CAAEnC,KAAM,KAAM/G,YAAa,KAAMD,KAAM,KAAMqG,MAAO,KAAMhI,KAAM,KAAM+K,IAAK,KAAMC,IAAK,KAAMpB,QAAS,MAC1HqB,GAAsB,CAAC,CAAEtC,KAAM,GAAIuC,MAAO,KAEjC,SAASC,GAAT,GAAmL,IAA7JxO,EAA4J,EAA5JA,cAAeY,EAA6I,EAA7IA,SAAU6N,EAAmI,EAAnIA,UAAWC,EAAwH,EAAxHA,iBAAkBzD,EAAsG,EAAtGA,YAAa0D,EAAyF,EAAzFA,uBAAwBxD,EAAiE,EAAjEA,0BAA2B3D,EAAsC,EAAtCA,cAAe0D,EAAuB,EAAvBA,oBAAuB,EAC3JrL,oBAAS,GADkJ,mBACtLoE,EADsL,KAC3KrE,EAD2K,OAE3JC,oBAAS,GAFkJ,mBAEtL+O,EAFsL,KAE3KC,EAF2K,OAI/JhP,mBAASsO,IAJsJ,mBAItLW,EAJsL,KAI7KC,EAJ6K,OAK3JlP,mBAASyO,IALkJ,mBAKtLU,EALsL,KAK3KC,EAL2K,KAOrL3N,EAA4BtB,EAA5BsB,iBAAkBD,EAAUrB,EAAVqB,MACpB2F,EAAsB,WAAbpG,EAAwB,+CAAc,kCAE/CsO,EAAexD,uBAAY,WAC7B,GAAiB,SAAb9K,GAA2C,MAApB8N,EAA0B,CAEjD,IAAMS,EAAW,gBAAQT,UAClBS,EAAY7D,KACnByD,EAAWI,GAGX,IAAIC,EACJA,EAAiBnO,KAAKuK,MAAMkD,EAAiBpD,MAAOA,KACpD2D,EAAaG,OAEO,WAAbxO,IACPmO,EAAW,6BAAKZ,IAAN,IAA0BC,IAAKK,EAAUY,EAAGhB,IAAKI,EAAUa,EAAGrC,QAAShM,KAAKC,UAAU,CAAE,QAAW,QAC7G+N,EAAaX,KAGjBO,EAAa,QACd,CAACH,EAAkB9N,EAAU6N,IAsBhC,SAASc,EAAgBrM,EAAQF,GAC7B+L,EAAW,6BAAKD,GAAN,mBAAgB5L,EAASF,KAEvC,SAASwM,EAAkBvG,EAAO5F,EAAML,GACpCiM,EAAa,GAAD,oBAAKD,EAAU7B,MAAM,EAAGlE,IAAxB,cAAC,gBAAoC+F,EAAU/F,IAA/C,mBAAwD5F,EAAOL,KAA/D,aAA2EgM,EAAU7B,MAAMlE,EAAQ,MAInH,SAASwG,EAAexG,GAASgG,EAAa,GAAD,oBAAKD,EAAU7B,MAAM,EAAGlE,IAAxB,CAAgC,CAAE+C,KAAM,GAAIuC,MAAO,KAAnD,aAA4DS,EAAU7B,MAAMlE,MACzH,SAASyG,EAAezG,GAASgG,EAAa,GAAD,oBAAKD,EAAU7B,MAAM,EAAGlE,IAAxB,aAAmC+F,EAAU7B,MAAMlE,EAAQ,MA3DqF,4CAqE7L,WAAwBxI,GAAxB,iCAAAC,EAAA,sDACId,GAAa,GAEPgM,EAAO,GACb+D,OAAOC,OAAOhE,EAAMkD,GAJxB,MAOyBa,OAAOE,KAAKjE,GAPrC,4CAOakE,EAPb,KAQ+B,OAAnBlE,EAAKkE,IAAyC,KAAnBlE,EAAKkE,GAR5C,wBASYvO,IAAQwO,QAAQ,2FAChBnQ,GAAa,GAVzB,qEAeqBoP,GAfrB,8DAgB0B,MADbpB,EAfb,SAgBiB5B,MAA8B,KAAf4B,EAAKW,MAhBrC,wBAiBYhN,IAAQwO,QAAQ,2FAChBnQ,GAAa,GAlBzB,2KAwBI+P,OAAOC,OAAOhE,EAAM,CAAE,KAAQ3K,KAAKC,UAAU,CAAE,KAAQ8N,MAxB3D,UA4BcgB,EAAU,CACZpE,KAAOA,EACPvK,MAAQA,GAENF,EAAOF,KAAKC,UAAU8O,GACtBrE,EAjCd,UAiCuBrK,EAjCvB,qCAiCoEV,GAjCpE,UAkCcG,IAAMC,KAAK2K,EAAKxK,GAlC9B,yBAqCc8J,IArCd,QAsCQE,GAA0B,GAC1B0D,GAAa,GACbjP,GAAa,GAGI,WAAbgB,EAAyBW,IAAQE,QAAQ,yEACvB,SAAbb,GAAuBW,IAAQE,QAAQ,4DA5CxD,mDA8CQ7B,GAAa,GACb8B,QAAQE,MAAR,MACAL,IAAQK,MAAM,+GAA2B,GAhDjD,0EArE6L,sBAwI7L,OAzGAI,qBAAU,YACY,IAAd4M,IAAkD,IAA3BD,IACvBO,IACAL,EAAa,SAElB,CAACD,EAAWD,EAAwBO,IAGvClN,qBAAU,YACyB,IAA3B2M,IAAiD,IAAdC,IACnCG,EAAW,6BAAKD,GAAN,IAAeV,IAAKK,EAAUY,EAAGhB,IAAKI,EAAUa,KAC1DT,EAAa,SAGlB,CAACJ,EAAWE,EAAwBC,EAAWE,IA4F9C,cAACmB,GAAD,CAAgB5N,UAAU,aAA1B,SACI,eAAC,KAAD,CACI2E,MAAOA,EACPC,QAAS0H,EACTzH,SApBZ,SAAiBzG,GACb0K,GAA0B,GAC1B0D,GAAa,GACI,SAAbjO,GACAsK,GAAoB,IAiBhB/D,OAAQ,KAJZ,UAMI,eAAC+I,GAAD,WACI,cAAC,KAAD,2BAEA,eAACC,GAAD,WACI,sBAAM5L,MAAO,CAAEe,YAAa,MAAOW,UAAW,UAA9C,gCAAiE6I,EAAQV,OACzE,sBAAM7J,MAAO,CAAEe,YAAa,MAAOW,UAAW,UAA9C,gCAAiE6I,EAAQT,OACzE,cAAC,IAAD,CAAQtM,QArB5B,SAAqBtB,GACjBc,IAAQ6O,KAAK,oFAAoB,GACjCvB,GAAa,GACb1D,GAA0B,GAC1B3D,GAAc,IAiBE,0CAGJ,cAAC6I,GAAD,CAAarE,KAAK,OAAOlJ,YAAY,4BAAQE,MAAO8L,EAAQ9C,KAAM/I,SAAU,SAACxC,GAAQ8O,EAAgB9O,EAAEyC,OAAO8I,KAAMvL,EAAEyC,OAAOF,UAC7H,cAACqN,GAAD,CAAarE,KAAK,cAAclJ,YAAY,eAAKE,MAAO8L,EAAQ7J,YAAahC,SAAU,SAACxC,GAAQ8O,EAAgB9O,EAAEyC,OAAO8I,KAAMvL,EAAEyC,OAAOF,UAExI,eAACsN,GAAD,WACI,cAAC,KAAD,CACItE,KAAK,WAAWuE,OAAO,QAAQzN,YAAY,mCAAUE,MAAO8L,EAAQ9J,KAAOwL,KAAO1B,EAAQ9J,KAAM,SAAW,KAC3G/B,SAAU,SAACwN,EAAMC,GAAiBnB,EAAgB,OAAQmB,IAAgBnM,MAAO,CAAEoM,SAAU,IAAKrL,YAAa6G,IAC/GyE,WAAY,IAEhB,cAAC,KAAD,CACI5E,KAAK,YAAYuE,OAAO,QAAQzN,YAAY,mCAAUE,MAAO8L,EAAQzD,MAAQmF,KAAO1B,EAAQzD,MAAO,SAAW,KAC9GpI,SAAU,SAACwN,EAAMC,GAAiBnB,EAAgB,QAASmB,IAAgBnM,MAAO,CAAEoM,SAAU,KAC9FC,WAAY,OAIpB,cAAC,KAAD,CAAQ9N,YAAY,oDAAYE,MAAO8L,EAAQzL,KAAMJ,SAAU,SAACD,GAAYuM,EAAgB,OAAQvM,IAApG,SACK7D,GAAe6J,KAAI,SAACzK,EAAK0K,GAAN,OAAiB,cAAC,KAAO4H,OAAR,CAAe7N,MAAOzE,EAAtB,SAAwCC,GAAWD,IAAnB0K,WAI7E,eAAC6H,GAAD,WACI,cAAC,KAAD,2BAEC9B,EAAUhG,KAAI,SAAC4E,EAAM3E,GAAP,OAiEnC,SAAkBA,EAAO+C,EAAMuC,EAAOkB,EAAgBC,EAAgBF,GAClE,OACI,eAACuB,GAAD,WACI,cAACC,GAAD,CAAczL,MAAM,SAAShC,KAAM,cAACkF,GAAA,EAAD,IAAkBlE,MAAO,GAAIxC,QAAS,SAACtB,GAAQgP,EAAexG,MACjG,cAAC+H,GAAD,CAAczL,MAAM,SAAShC,KAAM,cAAC0N,GAAA,EAAD,IAAmBlP,QAAS,SAACtB,GAAQiP,EAAezG,MAEvF,cAACoH,GAAD,CAAavN,YAAY,4BAAQE,MAAOgJ,EAAMzH,MAAO,CAAEe,YAAa6G,IAASlJ,SAAU,SAACxC,GAAQ+O,EAAkBvG,EAAO,OAAQxI,EAAEyC,OAAOF,UAC1I,cAACqN,GAAD,CAAavN,YAAY,4BAAQE,MAAOuL,EAAOtL,SAAU,SAACxC,GAAQ+O,EAAkBvG,EAAO,QAASxI,EAAEyC,OAAOF,YAL9FiG,GAnEyBiI,CAASjI,EAAO2E,EAAK5B,KAAM4B,EAAKW,MAAOkB,EAAgBC,EAAgBF,MACvG,cAACwB,GAAD,CAAczL,MAAM,SAAShC,KAAM,cAACkF,GAAA,EAAD,IAAkBlE,MAAO,GAAIxC,QAAS,SAACtB,GAAQgP,EAAeT,EAAUmC,WAE3G,cAAC,KAAD,OAGJ,eAACC,GAAD,WACI,cAAC,IAAD,CAAQ/N,KAAK,OAAOtB,QA1HpC,SAAkBtB,GACd,IAAM4Q,EAAc,6BAAOlD,IAAP,IAA2BjB,GAAG4B,EAAQ5B,GAAIkB,IAAIU,EAAQV,IAAKC,IAAIS,EAAQT,IAAKpB,QAAQ6B,EAAQ7B,UAEhH8B,EAAWsC,GACXpC,EAAaX,KAsHD,6CACA,cAAC,IAAD,CAAQvM,QAzLqK,4CAyLlJwC,MAAO,CAAEmE,WAAY,QAAhD,6BAGJ,cAAC1E,EAAD,CAASC,UAAWA,SAOpC,I,MAAMkI,GAAQ,MAGRkE,GAAc5M,YAAOI,IAAPJ,CAAH,2DACK0I,IAGhB6E,GAAevN,YAAOM,IAAPN,CAAH,0DACG0I,IAIf8D,GAAiBxM,IAAOC,IAAV,4BAEdwM,GAAczM,IAAOC,IAAV,iHAMXyM,GAAQ1M,IAAOC,IAAV,6IAKWyI,IAGhBmE,GAAkB7M,IAAOC,IAAV,+EAECyI,IAGhB2E,GAAYrN,IAAOC,IAAV,4BAETqN,GAAetN,IAAOC,IAAV,uDAIZ0N,GAAc3N,IAAOC,IAAV,uDC9PF,SAAS4N,GAAcC,GAAU,IACpCnD,EAAmBmD,EAAnBnD,IAAKC,EAAckD,EAAdlD,IAAKmD,EAASD,EAATC,KAEZC,EAAa,CACfC,OAAQ,IAAIC,OAAOC,MAAMC,KAAKC,OAAO1D,EAAKC,GAC1CmD,KAAMA,GAIV,OAFY,IAAIG,OAAOC,MAAMC,KAAKE,IAAI,MAAON,GCJlC,SAAeO,GAA9B,mC,8CAAe,WAA4BhS,GAA5B,yBAAAU,EAAA,sEAEAY,EAA2BtB,EAA3BsB,iBAAkBD,EAASrB,EAATqB,MAFlB,SAIiCN,IAAMkR,IAAN,UAAa3Q,EAAb,kBAAuCD,IAJxE,uBAICF,KAAQA,EAJT,EAISA,KAEJ,WAFUC,EAJf,EAIeA,QAJf,0CAOI,CACH8Q,YAAc/Q,EAAKgR,SACnBZ,QAAUpQ,EAAKoQ,QAAQ,KATxB,cAYG,IAAIa,MAAJ,oCAAwBhR,EAAxB,wBAZH,iEAgBPG,IAAQK,MAAM,CACVC,QAAU,oHACVC,SAAW,EACXvD,IAAM,kBACNwD,QAAU,SAACtB,GAAKc,IAAQC,QAAQ,sBAEpCE,QAAQE,MAAR,MAtBO,kBAuBA,MAvBA,2D,sBCDA,SAASyQ,GAAmBrJ,EAAKsJ,EAAWH,EAAUI,EAAYC,EAAUtH,EAAqBuH,GAE5G,IAAMC,EAAYC,GAAiBL,GAC7BM,EAAcD,GAAiBL,GAGrC,IACIH,EAASvK,SAAS,SAAAgG,GACd,IAAMiF,EAAS,IAAIlB,OAAOC,MAAMC,KAAKiB,OAAO,CACxCC,SAAW,IAAIpB,OAAOC,MAAMC,KAAKC,OAAOlE,EAAKQ,IAAKR,EAAKS,KACvDrF,IAAMA,EACNzF,KAAO,CACH1B,QAAS,CACL,QACI,mHAFC,4CAGwC+L,EAAK5B,KAH7C,WAID,SAJC,kCAK0B4B,EAAKvK,KAL/B,UAML,UACFoJ,KAAK,IAEPuG,OAAQ,IAAIrB,OAAOC,MAAMC,KAAKoB,MAAM,GAAI,OAIhDJ,EAAOK,YAAY,SAAS,SAACzS,GAIzB,IAHA,IAAM0S,EAAW1S,EAAE2S,QAAF,YACXC,EAAQf,EAELgB,EAAI,EAAGA,EAAED,EAAMlC,OAAQmC,IAAI,CAGhC,IAFA,IAAMjQ,EAAOgQ,EAAMC,GACfC,GAAM,EACDC,EAAE,EAAGA,EAAEZ,EAAYvP,GAAM8N,OAAQqC,IACtC,GAAKL,IAAaP,EAAYvP,GAAMmQ,GAAlB,YAAqC,CACnDf,EAAgBC,EAAUrP,GAAMmQ,IAChCtI,GAAoB,GACpBqI,GAAM,EACN,MAGR,GAAIA,EAAO,UAInBb,EAAU9E,EAAKvK,MAAMoQ,KAAK7F,GAC1BgF,EAAYhF,EAAKvK,MAAMoQ,KAAKZ,MAGhCL,EAASE,GACTH,EAAWK,GACb,MAAMc,GACJhS,QAAQE,MAAM8R,GACdhS,QAAQE,MAAMuQ,GACd5Q,IAAQK,MAAM,CACVC,QAAU,8LACVC,SAAW,EACXvD,IAAM,sBACNwD,QAAU,SAACtB,GAAKc,IAAQC,QAAQ,2BAM5C,SAASmR,GAAkBU,GACvB,IAAI1L,EAAM,GAKV,OAJA0L,EAAMzL,SAAS,SAAA+L,GACXhM,EAAIgM,GAAY,MAGbhM,ECvEI,SAASiM,GAAmB5K,EAAKuI,GAAU,IAC9CnD,EAAamD,EAAbnD,IAAKC,EAAQkD,EAARlD,IAab,OAVA,IAAIsD,OAAOC,MAAMC,KAAKiB,OAAO,CACzBC,SAAU,IAAIpB,OAAOC,MAAMC,KAAKC,OAAO1D,EAAKC,GAC5CrF,IAAKA,EACLzF,KAAM,CACJoI,IAAG,2BACH5I,KAAM,IAAI4O,OAAOC,MAAMC,KAAKgC,KAAK,GAAI,IACrCC,OAAQ,IAAInC,OAAOC,MAAMC,KAAKoB,MAAM,EAAG,MAItC,ECKX,IAAIjK,GAAM,KAEJ1J,GAAahB,EAAY,cACzBE,GAAaF,EAAY,kBAEhB,SAASyV,GAAT,GAAiH,IAAjGC,EAAgG,EAAhGA,QAASC,EAAuF,EAAvFA,WAAYC,EAA2E,EAA3EA,mBAAoB1M,EAAuD,EAAvDA,cAAeC,EAAwC,EAAxCA,sBAAuBzH,EAAiB,EAAjBA,cAAiB,EACjGH,mBAAS,MADwF,mBACpHsU,EADoH,KAC7G3B,EAD6G,OAE7F3S,mBAAS,MAFoF,mBAEpHuU,EAFoH,KAE3G7B,EAF2G,OAIzF1S,oBAAS,GAJgF,mBAIpHoE,EAJoH,KAIzGrE,EAJyG,OAKnFC,mBAAS,MAL0E,mBAKpHmL,EALoH,KAKtGyH,EALsG,OAMzF5S,mBAAS,CAAEyP,EAAG,EAAGD,EAAG,IANqE,mBAMpHZ,EANoH,KAMzG4F,EANyG,OAQ3ExU,oBAAS,GARkE,mBAQpHiO,EARoH,KAQlG5C,EARkG,OAS/DrL,oBAAS,GATsD,mBASpH8O,EAToH,KAS5FxD,EAT4F,cA+C5GF,IA/C4G,2EA+C3H,oCAAAvK,EAAA,sDAEI,UAAgBiP,OAAO2E,OAAOF,GAA9B,eAAwC,KAChCxM,SAAQ,SAAAiL,GACRA,EAAO0B,OAAO,SAJ1B,gBAS2CvC,GAAahS,GATxD,gBASYkS,EATZ,EASYA,YAAaX,EATzB,EASyBA,QACrBc,GAAkBrJ,GAAKxK,GAAY0T,EAAaK,EAAYC,EAAUtH,EAAqBuH,GAC3FmB,GAAmB5K,GAAKuI,GAX5B,4CA/C2H,sBA8D3H,OAlDAvP,qBAAU,WACU,OAAZoS,GAwGZ,SAA2BJ,EAASpU,EAAcwU,GAC9CxU,GAAa,GAECpB,GAERoJ,SAAQ,SAAAvE,GACV,IAAMH,EAASkR,EAAQ/Q,GACvB,GAAsB,IAAlBH,EAAOiO,OAAX,CAEA,IAAMqD,EAAOR,EAAQ3Q,GACjBH,EAAO,GAAGuR,eAAiBD,GAC3BtR,EAAO0E,SAAQ,SAAAiL,GAAYA,EAAOpI,WAAW+J,UAKrD5U,GAAa,GAvHL8U,CAAkBV,EAASpU,EAAcwU,KAE9C,CAACJ,EAASI,IAGbpS,qBAAU,WACN,GAAW,MAAPgH,GACA,IAAmB,IAAfiL,EAAqB,CACrBjL,GAAI2L,UAAU,aACd,IAAMC,EAAWjD,OAAOC,MAAMC,KAAKgD,MAAM3B,YAAYlK,GAAK,SAAS,SAAUvI,GACzE,IAAmB,IAAfwT,EAAqB,CAAC,IAAD,EACJxT,EAAEqU,MAAXxF,EADa,EACbA,EAAGD,EADU,EACVA,EACXgF,EAAa,CAAE/E,IAAGD,MAClB7H,GAAc,GACd2D,GAA0B,GAC1BwG,OAAOC,MAAMC,KAAKgD,MAAME,eAAeH,YAGzB,IAAfX,GACPjL,GAAI2L,UAAU,UAGvB,CAACV,EAAYzM,IAGhBxF,qBAAU,WACN,GAAoB,MAAhBgJ,EAAsB,CAAC,IACf3H,EAAa2H,EAAb3H,KAAM6J,EAAOlC,EAAPkC,GACRjE,EAAQkL,EAAM9Q,GAAM2R,WAAU,SAAApJ,GAAI,OAAIA,EAAKsB,KAAOA,KACxDuF,EAAgB0B,EAAM9Q,GAAM4F,OAEjC,CAACkL,EAAOnJ,IAkBP,eAACiK,GAAD,CAAU5S,UAAU,OAApB,UACI,cAAC,KAAD,CACIgB,KAAK,kBAAkBsC,IAAKrG,GAC5B4V,OAAM,sBAAE,gCAAAxU,EAAA,6DACJd,GAAa,GADT,SAEmBoS,GAAahS,GAFhC,UAEEmV,EAFF,8BAIAvV,GAAa,GAJb,0BAOIsS,EAAyBiD,EAAzBjD,YAAaX,EAAY4D,EAAZ5D,QAGrBc,GADArJ,GAAMoM,GAAc7D,GACG/S,GAAY0T,EAAaK,EAAYC,EAAUtH,EAAqBuH,GAC3FmB,GAAmB5K,GAAKuI,GAExBhQ,IAAQC,UACRD,IAAQE,QAAQ,mGAChB7B,GAAa,GAfT,8CAkBZ,cAACmS,GAAD,CAAK7E,GAAG,QAER,cAACW,GAAD,CACI7N,cAAeA,EAAegL,aAAcA,EAC5CC,YAAaA,EACb6C,iBAAkBA,EAAkB5C,oBAAqBA,EACzDC,0BAA2BA,EAA2B1D,sBAAuBA,IAGjF,cAAC+G,GAAD,CACIxO,cAAeA,EAAeY,SAAUsT,EAAoBzF,UAAWA,EAAWC,iBAAkB1D,EACpGC,YAAaA,EACb0D,uBAAwBA,EAAwBxD,0BAA2BA,EAC3E3D,cAAeA,EAAe0D,oBAAqBA,IAGvD,cAAClH,EAAD,CAASC,UAAWA,OAMhC,I,GAAMgR,GAAWxR,IAAOC,IAAV,sEAKRqO,GAAMtO,IAAOC,IAAV,wEC5HM,SAAS2R,GAAT,GAAmC,IAArBC,EAAoB,EAApBA,SAAoB,KAAVC,QACP1V,mBAAS,KADQ,mBACxCmU,EADwC,KAC/BzM,EAD+B,OAEX1H,oBAAS,GAFE,mBAExCoU,EAFwC,KAE5BzM,EAF4B,OAGK3H,mBAAS,MAHd,mBAGxCqU,EAHwC,KAGpBzM,EAHoB,KAKzCzH,EAAgBsV,EAASnT,MAE/B,OACE,eAACqT,GAAD,CAASnT,UAAU,MAAMkC,MAAO,CAAEkR,OAAUxB,EAAa,YAAc,QAAvE,UACE,cAAC,GAAD,CAAQ1M,WAAYA,EAAYC,cAAeA,EAAeC,sBAAuBA,IACrF,cAACsM,GAAD,CACEC,QAASA,EACTC,WAAYA,EAAYzM,cAAeA,EACvC0M,mBAAoBA,EAAoBzM,sBAAuBA,EAC/DzH,cAAeA,IAEjB,cAAC0E,GAAD,OAMN,I,GAAM8Q,GAAU/R,IAAOC,IAAV,+FCvBE,SAASgS,KACpB,OACI,cAACC,GAAD,CAAiBtT,UAAU,cAA3B,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOuT,KAAK,IAAIC,OAAO,EAAMC,UAAWhR,KACxC,cAAC,IAAD,CAAO8Q,KAAK,OAAOE,UAAWT,UAO9C,IAAMM,GAAkBlS,IAAOC,IAAV,yEChBrBqS,IAASC,OAKL,cAACN,GAAD,IACAO,SAASC,eAAe,W","file":"static/js/main.edbd5866.chunk.js","sourcesContent":["// [경고] 임시적인 사용자설정 보관소 - 나중에 다른 방법으로 대체필요\nexport default function DataStorage (key) {\n    const data = {\n        NYAM_TYPES : {\n            korea : \"한식\",\n            china : \"중식\",\n            japan : \"일식\",\n            asian : \"아시안\",\n            schoolfood : \"분식\",\n            fastfood : \"패스트푸드\",\n            cafe : \"카페\",\n            bakery : \"베이커리\",\n            pub : \"술집\",\n            cvs : \"편의점\",\n        }, \n        NYAM_TYPES_KEY : [\"korea\", \"china\", \"japan\", \"fastfood\", \"cvs\", \"cafe\", \"asian\", \"schoolfood\", \"bakery\", \"pub\"],\n        ACCESS_MANAGER : \"https://script.google.com/macros/s/AKfycbwBAmqbf9qfPs8TvTc_N2s-n-HMa5YMvAX_paAi-ILktD2DmnjwaQqk-vG6SR5veZqrDA/exec\",\n        ROUTE_MANAGER : \"https://script.google.com/macros/s/AKfycbxxZFsS3WpVdOEDnFaZzqXuTneHgIKnukqQLoqmLcCZzNIyLRZNPby-Fnqm-IiBUycbnA/exec\",\n        MAP_SOURCE: \"https://openapi.map.naver.com/openapi/v3/maps.js?ncpClientId=ont9t74d67\",\n    }\n    \n    return data[key];\n}","// imported Modules =============================================\nimport { React, useState, useEffect } from 'react';\nimport { Switch, Redirect } from \"react-router-dom\";\n\nimport styled from 'styled-components';\nimport { Input, Button, Menu, message } from 'antd';\nimport { SearchOutlined } from \"@ant-design/icons\"\n\nimport axios from \"axios\";\n\n// imported components ==========================================\n\n\n// Main Component ===============================================\nimport DataStorage from \"../DataStorage\";\nconst ACCESS_MANAGER = DataStorage(\"ACCESS_MANAGER\");\nconst ROUTE_MANAGER = DataStorage(\"ROUTE_MANAGER\");\n\nconst FIND_OPTION = { route: 0, manual: 1 };\nconst PLACE_HOLDER = [\n    { first: \"연구소 이름을 알려주세요\", second: \"출입 비밀번호를 알려주세요\" },\n    { first: \"연구소 ID를 알려주세요\", second: \"연구소 접근제어장치 주소를 알려주세요\" }\n];\n\nexport default function LabFinder({ setIsLoading }) {\n    const [isReady, setIsReady] = useState(false); // app으로 라우팅할 준비가 되었는지\n    const [labAccessInfo, setLabAccessInfo] = useState(null); // labId, accessManagerUrl\n\n    const [findOption, setFindOption] = useState(FIND_OPTION.route); // route, manual.\n\n    const [firstInput, setFirstInput] = useState('');\n    const [secondInput, setSecondInput] = useState('');\n\n    useEffect(() => {\n        if (labAccessInfo) {\n            setIsReady(true);\n        }\n    }, [labAccessInfo]);\n\n    async function onSubmit(e) {\n        switch (findOption) {\n            case FIND_OPTION.route:\n                setIsLoading(true);\n                const postData = {\n                    taskType: 'doRoute',\n                    labName: firstInput,\n                    routePw: secondInput,\n                }\n                const { data: { status, data } } = await axios.post(ROUTE_MANAGER, JSON.stringify(postData));\n\n                if (status === \"success\") {\n                    setLabAccessInfo({\n                        labId: data,\n                        accessManagerUrl: ACCESS_MANAGER,\n                    });\n                    message.destroy();\n                    message.success('연구소로 달려가고있어요!')\n                } else {\n                    console.log('에러!!에러!!!에러!!!');\n                    message.error({\n                        content : '앗.. 연구소를 찾지 못했어요...',\n                        duration : 0,\n                        key : 'LabFinder_01',\n                        onClick : (e)=>{message.destroy('LabFinder_01');},\n                    });\n                }\n\n                setIsLoading(false);\n                break;\n\n            case FIND_OPTION.manual:\n                break;\n            default:\n                console.error(\"예상하지 못한 FIND_OPTION입니다\");\n        }\n\n    }\n\n    return (\n        isReady\n            ? <Switch>\n                <Redirect to={{\n                    pathname: \"/app\",\n                    state: labAccessInfo,\n                }} />\n            </Switch>\n            : <LabFinderWrap className=\"LabFinder\">\n                <SelectMenu onClick={e => { setFindOption(parseInt(e.key)) }} selectedKeys={`${findOption}`} mode=\"horizontal\">\n                    <SelectItem key={`${FIND_OPTION.route}`}>이름으로 찾기</SelectItem>\n                    <SelectItem disabled key={`${FIND_OPTION.manual}`}>직접 찾기</SelectItem>\n                </SelectMenu>\n                <FinderForm>\n                    <FinderInput\n                        placeholder={PLACE_HOLDER[findOption].first} size=\"large\"\n                        value={firstInput}\n                        onChange={(e) => { setFirstInput(e.target.value); }}\n                        onPressEnter={onSubmit}\n                    />\n                    <FinderInputPw\n                        placeholder={PLACE_HOLDER[findOption].second} size=\"large\"\n                        type=\"password\"\n                        value={secondInput}\n                        onChange={(e) => { setSecondInput(e.target.value); }}\n                        onPressEnter={onSubmit}\n                    />\n                    <FinderButton icon={<SearchOutlined />} size=\"large\" onClick={onSubmit}>\n                        연구소 찾기\n                    </FinderButton>\n\n                </FinderForm>\n            </LabFinderWrap>\n\n    );\n}\n\n// style ========================================================\nconst LabFinderWrap = styled.div`\n    display : flex;\n    \n    flex-direction : column;\n    justify-content : center;\n    align-items : center;\n    \n    margin-bottom : 32px;\n    width : 80%;\n    `;\n\nconst SelectMenu = styled(Menu)`\n    border : none;\n    padding : 0px 8px;\n    margin-bottom : 16px;\n    background-color : #333333;\n    `;\n\nconst SelectItem = styled(Menu.Item)`\n    color : white;\n    `;\n\nconst FinderForm = styled.div`\n    display : flex;\n    flex-direction : column;\n    justify-content : center;\n    align-items : flex-end;\n\n    width : 350px;\n    `;\n\nconst FinderInput = styled(Input)`\n    width : 100%;\n    margin-bottom : 16px; \n\n    border-radius : 24px;\n    \n    border-color : white;\n    &:hover { border-color : white; }\n    &:focus { border-color : white; }\n    `;\n\nconst FinderInputPw = styled(Input.Password)`\n    width : 100%;\n    margin-bottom : 16px; \n\n    border-radius : 24px;\n    \n    border-color : white;\n    &:hover { border-color : white; }\n    &:focus { border-color : white; }\n    `;\n\nconst FinderButton = styled(Button)`\n    width : 100%;\n    border-radius : 24px;\n    `;\n\n// const FindHistory = styled.div`\n//     display : flex;\n//     justify-content : flex-start;\n//     `;\n// const HistoryItem = styled.span`\n//     padding : 4px 8px;\n//     border-radius : 24px;\n//     background-color : #FFFFFF;\n//     color : #333333;\n//     `;\n\n// function =====================================================\n// *","// imported Modules =============================================\nimport { React } from \"react\";\n\nimport styled from \"styled-components\";\nimport { Spin } from 'antd';\nimport { LoadingOutlined } from '@ant-design/icons';\nimport 'antd/dist/antd.css';\n\n// Main Component ===============================================\nexport default function Loading ({ isLoading }) {\n    \n    if ( isLoading ){\n        return (\n            <LoadingWrap className=\"Loading\">\n                <Backdrop></Backdrop>\n                <Spin spinning={isLoading} size=\"large\" indicator={<LoadingOutlined style={{ fontSize: 64 }} spin />} />\n            </LoadingWrap>\n        );\n    } else {\n        return <div className=\"Loading\"></div>;\n    }\n   \n}\n\n// style ========================================================\nconst LoadingWrap = styled.div`\n    position : fixed;\n    top : 0; \n    left : 0;\n\n    display : flex;\n    justify-content : center;\n    align-items : center;\n\n    width : 100%; \n    height : 100%;\n    `;\n\nconst Backdrop = styled.div`\n    position : fixed;\n    top : 0; \n    left : 0;\n\n    width : 100%;\n    height : 100%;\n\n    background-color : rgba(0,0,0, 0.75);\n    `;","// imported Modules =============================================\nimport { React } from 'react';\nimport styled from 'styled-components';\n\n// imported components ==========================================\n// *\n\n// Main Component ===============================================\nexport default function Footer () {\n    return (\n        <FooterWrap className=\"Footer\">\n            <Group>\n                <Item><strong>냠냠랩 </strong> 조직 내부의 냠냠거리 공유 서비스</Item>\n                <Item><strong>Contact </strong> goranimaster17@gmail.com</Item>\n            </Group>\n        </FooterWrap>\n    );\n}\n\n// style ========================================================\nconst FooterWrap = styled.div`\n    display : flex;\n    \n    width : 100%;\n    padding : 10px 20px;\n\n    border-top : 1px solid #525252;\n    background-color : #333333;\n    color : #a1a1a1;\n    `; \n\nconst Group = styled.div`\n\n    `;\n\nconst Item = styled.p`\n    margin : 0;\n    `;\n\n// function =====================================================\n// *","export default __webpack_public_path__ + \"static/media/logo.22832bb2.svg\";","// imported Modules =============================================\nimport React, { useState, useEffect } from 'react';\n\nimport { Button, notification } from 'antd';\nimport { GithubOutlined } from \"@ant-design/icons\"\nimport styled from 'styled-components';\n\n// imported components ==========================================\nimport LabFinder from \"./LabFinder\";\nimport Loading from \"../ShareComponents/atoms/Loading\";\nimport Footer from \"../ShareComponents/atoms/Footer\";\n\n// Main Component ===============================================\n\nimport LogoImage from \"../logo.svg\";\nexport default function Home() {\n    const [isLoading, setIsLoading] = useState(false);\n\n    useEffect( () => {\n        notification.open({\n            message: '기존에 떠있던 지도로 가기',\n            description:'기존에 떠있던 지도를 보시려면 \"연구소 이름\"칸에 \"전국고라니협회\"를 입력하고 ENTER를 눌러주세요! (공지기간 ~5.10)',\n            duration : 0,\n        });\n    }, []);\n    \n\n    return (\n        <HomeWrap className=\"Home\">\n            <MainSection>\n                <Header>\n                    <Button disabled style={{borderRadius:'16px', marginRight:'12px'}}>\n                        연구소 만들기\n                    </Button>\n                    <Button disabled shape=\"circle\" icon={<GithubOutlined />} />\n                </Header>\n                <Contents>\n                    <Logo>\n                        <img src={LogoImage} alt=\"nyamnyamlab logo\" />\n                        <LogoText>냠냠랩</LogoText>\n                    </Logo>\n                    <LabFinder setIsLoading={setIsLoading} />\n                </Contents> \n            </MainSection>\n\n            <DetailSection>\n                <h1 style={{margin : '200px 0', textAlign:'center'}}>\n                    소개가 들어갈 공간\n                </h1>\n            </DetailSection>\n\n            <Footer />\n\n            <Loading isLoading={isLoading} />\n        </HomeWrap>\n    );\n}\n\n// style ========================================================\nconst HomeWrap = styled.div`\n    \n    `;\n\nconst MainSection = styled.div`\n    display : flex;\n    flex-direction : column;\n    height : 100vh;\n\n    background-color : #333333;\n    color : #FFFFFF;\n    `;\n\nconst Header = styled.div`\n    display : flex;\n    justify-content : flex-end;\n    margin : 12px;\n    `;\n\nconst Contents = styled.div`\n    display : flex;\n    flex : 1;\n    flex-direction : column;\n    justify-content : center;\n    align-items : center;\n    `;\n\nconst Logo = styled.div`\n    display : flex;\n    justify-content : center;\n    align-items : center;\n\n    color : #FFFFFF;\n    `;\n\nconst LogoText = styled.h1`\n    margin : 0;\n    margin-left : 8px;\n    \n    font-size : 48px;\n    color : #FFFFFF;\n    font-family: 'Poor Story', cursive;\n    `;\n\nconst DetailSection = styled.div`\n\n`;\n// function =====================================================\n// *","export default __webpack_public_path__ + \"static/media/UpdateNoteRaw.7146b144.md\";","// imported Modules =============================================\nimport React, { useEffect, useState } from 'react';\nimport { Modal } from \"antd\";\nimport styled from 'styled-components';\nimport ReactMarkdown from 'react-markdown';\n\n// imported components ==========================================\n// *\n\n// Main Component ===============================================\nimport mdSource from \"./UpdateNoteRaw.md\";\n\nexport default function UpdateNote({ updateNoteModalVisible, setUpdateNoteModalVisible}) {\n    const [markdown, setMarkdown] = useState('');\n\n    useEffect( () => {\n        async function init() {\n            const str = await fetch(mdSource)\n            .then( res => res.text() );\n\n            setMarkdown(str);\n        }\n        init();\n    }, [markdown]);\n\n    return (\n        <UpdateNoteWrap className=\"UpdateNote\">\n            <Modal\n                title={\"업데이트 노트\"}\n                visible={updateNoteModalVisible}\n                onCancel={() => { setUpdateNoteModalVisible(false) }}\n                footer={null}\n                style={{minWidth:\"50%\"}}\n            >\n                <ReactMarkdown children={markdown} />\n            </Modal>\n        </UpdateNoteWrap>\n    );\n}\n\n// style ========================================================\nconst UpdateNoteWrap = styled.div`\n\n    `;\n\n// function =====================================================\n// *","// imported Modules =============================================\nimport { React, useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Checkbox, Popover, Button, Tooltip } from \"antd\";\nimport { FilterOutlined, PlusOutlined, BookOutlined, SettingOutlined } from \"@ant-design/icons\"\nimport 'antd/dist/antd.css';\n\n// imported Components ==========================================\nimport UpdateNote from \"./UpdateNote\";\n\n/* ******************************************* */\n// [경고] 임시적인 사용자설정 보관소 - 나중에 다른 방법으로 대체필요\nimport DataStorage from \"../../../../DataStorage\"; \nconst NYAM_TYPES = DataStorage(\"NYAM_TYPES\");\nconst NYAM_TYPES_KEY = DataStorage(\"NYAM_TYPES_KEY\");\n// [경고] 임시적인 사용자설정 보관소 - 나중에 다른 방법으로 대체필요\n/* ******************************************* */\n\n// Main Component ===============================================\nexport default function Tools ({ setFilters, setIsPickmode, setNyamEditorTaskType }) {\n    const [checked, setChecked] = useState( initChecked(NYAM_TYPES_KEY) );\n    const [updateNoteModalVisible, setUpdateNoteModalVisible] = useState(false);\n\n    useEffect ( () => { \n        setFilters(checked); \n    }, [checked, setFilters]);\n\n    function onChange(e) { setChecked({ ...checked, [e.target.nyamType] : e.target.checked }) }\n\n    return (\n        <ToolsWrap className=\"Tools\">\n            <div className=\"LeftDiv\">\n                {/* 냠 필터링 */}\n                <Popover placement=\"bottom\" title={\"냠 필터링\"} content={filterContent(onChange, checked)} trigger=\"click\">\n                    <Tooltip title=\"냠 필터링\" placement=\"left\">\n                        <MenuButton shape=\"circle\" icon={<FilterOutlined />} />\n                    </Tooltip>\n                </Popover>\n\n                {/* 새로운 냠 */}\n                <Popover placement=\"bottom\" title={\"새로운 냠 만들기\"} content={createNyamContent} trigger=\"click\">\n                    <Tooltip title=\"새로운 냠\" placement=\"right\">\n                        <MenuButton shape=\"circle\" icon={<PlusOutlined />} style={{marginLeft:\"8px\"}} \n                            onClick={ () => { \n                                setNyamEditorTaskType(\"create\"); \n                                setIsPickmode(true); \n                            }} \n                        />\n                    </Tooltip>\n                </Popover>\n            </div>\n\n            <div className=\"RightDiv\" style={{marginLeft:\"auto\", display : 'flex'}} >\n                <Tooltip title=\"업데이트 노트\" placement=\"right\">\n                    <MenuButton shape=\"circle\" icon={<BookOutlined />}  onClick={ () => { setUpdateNoteModalVisible(true); }} />\n                    <UpdateNote updateNoteModalVisible={updateNoteModalVisible} setUpdateNoteModalVisible={setUpdateNoteModalVisible} />\n                </Tooltip>\n                <MenuButton shape=\"circle\" icon={<SettingOutlined />}  style={{marginLeft:\"8px\"}} disabled/>\n            </div>\n        </ToolsWrap>\n    );\n}\n\nfunction filterContent(onChange, checked) {\n    return (\n        <div className=\"filterContent\" styld={{display:\"flex\", flexDirection:\"column\"}}>\n        {\n            NYAM_TYPES_KEY.map( (type, index) => (\n                <div key={index}><Checkbox onChange={onChange} checked={checked[type]} nyamType={type}>{NYAM_TYPES[type]}</Checkbox></div>\n            ))\n        }\n        </div>\n    )\n}\n\nconst createNyamContent = (\n    <div>\n        <p style={{margin:\"0\"}}><strong>지도에서 새로운 남의 위치를 찍어주세요</strong></p>\n        {/* <p style={{margin:\"0\"}}>버튼을 다시누르면 '새로운 냠 만들기'가 취소됩니다</p> */}\n    </div>\n);\n    \n// style ========================================================\nconst ToolsWrap = styled.div`\n    display : flex;\n    flex : 1;\n\n    justify-contents : center;\n    align-items : center;\n\n    padding : 10px 10px;\n\n    background-color : #333333;\n    color : #FFFFFF;\n    `;\n\nconst MenuButton = styled(Button)`\n    border : 0;\n    `;\n\n// function =====================================================\nfunction initChecked(arr) {\n    let obj = {};\n    arr.forEach( el => {\n        obj[el] = true;\n    });\n\n    return obj;\n}","// imported Modules =============================================\nimport { React } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\n// imported components ==========================================\nimport Tools from \"./followers/Tools\";\n\n// imported etc resource ========================================\nimport LOGO_IMG from \"../../../logo.svg\";\n\n// Main Component ===============================================\nexport default function Header ({ setFilters, setIsPickmode, setNyamEditorTaskType }) {\n    return (\n        <HeaderWrap className=\"Header\">\n            <Link to={{ pathname:\"/\" }}>\n                <Logo>\n                    <LogoImg src={LOGO_IMG} alt=\"logo Image\"></LogoImg>\n                    <LogoText>냠냠랩</LogoText>\n                </Logo>\n            </Link>\n            <Tools setFilters={setFilters} setIsPickmode={setIsPickmode} setNyamEditorTaskType={setNyamEditorTaskType} />\n        </HeaderWrap>\n    );\n}\n\n// style ========================================================\nconst HeaderWrap = styled.div`\n    display : flex;\n    align-items : center;\n\n    padding : 10px 0px;\n\n    background-color : #333333;\n    color : #FFFFFF;\n    `;\n\nconst Logo = styled.div`\n    display : flex;\n    align-items : center;\n    justify-contents : center;\n    padding : 0px 10px;\n    `;\n\nconst LogoImg = styled.img`\n    width : 48px;\n    height : 48px;\n    `;\nconst LogoText = styled.h1`\n    margin : 0;\n    margin-left : 8px;\n    color : #FFFFFF;\n    font-family: 'Poor Story', cursive;\n    `;\n\n// function =====================================================\n// *","// imported Modules =============================================\nimport React from 'react';\nimport styled from 'styled-components';\n\n// imported components ==========================================\n// *\n\n// Main Component ===============================================\nexport default function ContentsTable({ desc, dataOrder, data }) {\n    // desc (문자열 Array) : thead에 표시할 텍스트를 차례로 나열한 문자열 배열\n    // dataOrder (객체 Array) : tbody의 각 row에서 [data]객체의 요소를 표시할 순서를 나열한 문자열 배열 \n    // data (객체 Array) : 원본데이터\n\n    return (\n        <ContentsTableWrap className=\"ContentsTable\">\n            <Table>\n                <tbody>\n                    <Row style={{borderWidth:\"2px\"}}>\n                    {\n                        desc.map( (el, index) => (\n                            <Th key={index}>{ el }</Th>\n                        ))\n                    }\n                    </Row>\n                </tbody>\n                \n                <tbody>\n                {\n                    data.map( (rowItem,index) => (\n                        <Row key={index}>\n                        {\n                            dataOrder.map( (colItem, index) => (\n                                <Td key={index}>{ rowItem[colItem] }</Td>\n                            ))\n                        }\n                        </Row>\n                    ))\n                }\n                </tbody>\n            </Table>\n        </ContentsTableWrap>\n    );\n}\n\n// style ========================================================\n//const SPACE = \"4px\";\nconst CELL_PADDING = \"8px\";\nconst BORDER_COLOR = \"#dbdbdb\";\n\nconst ContentsTableWrap = styled.div`\n    width : 100%;\n    border : 1px solid ${BORDER_COLOR};\n    border-bottom : 12px solid ${BORDER_COLOR};\n    border-radius : 8px;\n    `;\n\nconst Table = styled.table`\n    width : 100%;\n    text-align : center;\n    `;\n\nconst Row = styled.tr`\n    padding : ${CELL_PADDING};\n    border-bottom : 1px solid ${BORDER_COLOR};\n    `;\n\nconst Th = styled.th`\n    padding : ${CELL_PADDING};\n    `;\n\nconst Td = styled.td`\n    padding : ${CELL_PADDING};\n    `;\n// function =====================================================\n// *\n\n                ","// imported Modules =============================================\nimport { React, useState } from 'react';\nimport styled from 'styled-components';\n\nimport { Popover, Button } from \"antd\"\nimport { DeleteOutlined } from \"@ant-design/icons\"\n\n// imported components ==========================================\n// *\n\n// Main Component ===============================================\nconst POPOVER_TITLE = \"정말로 지울까요?\";\n\nexport default function DeleteBtn({ setDeleteConfirm }) {\n    const [visible, setVisible] = useState(false);\n\n    const formContent = (\n        <div className=\"confirmContent\" style={{ display: \"flex\", justifyContent: \"center\" }}>\n            <Button onClick={onConfirm} type=\"primary\" style={{ marginRight: \"4px\" }}>네</Button>\n            <Button onClick={onCancle}>아니요</Button>\n        </div>\n    );\n\n    function onConfirm() {\n        setDeleteConfirm(true);\n        setVisible(false);\n    }\n\n    function onCancle() {\n        setVisible(false);\n    }\n\n    return (\n        <DeleteBtnWrap className=\"DeleteBtn\">\n            <Popover\n                trigger=\"click\" visible={visible} onVisibleChange={(visible)=>{setVisible(visible)}}\n                placement=\"right\" title={POPOVER_TITLE} content={formContent} onClick={(e) => { setVisible(true); }}\n            >\n                <Button shape=\"circle\" icon={<DeleteOutlined />} />\n            </Popover>\n        </DeleteBtnWrap>\n    );\n}\n\n// style ========================================================\nconst DeleteBtnWrap = styled.div`\n\n    `;\n\n// function =====================================================\n// *","// imported Modules =============================================\nimport React, { useState, useEffect, useCallback } from 'react';\nimport axios from \"axios\";\n\nimport styled from 'styled-components';\nimport { Button, message, Tooltip } from \"antd\";\nimport { FormOutlined, QuestionCircleOutlined } from \"@ant-design/icons\"\n\n// imported components ==========================================\nimport ContentsTable from \"../../atoms/ContentsTable\";\nimport DeleteBtn from \"../../atoms/DeleteBtn\";\n\n// Main Component ===============================================\nexport default function MapsModalInfo({ labAccessInfo, selectedNyam, refreshMaps, setIsLoading, setMapsModalVisible, setNyamEditorModalVisible, setNyamEditorTaskType }) {\n    const [deleteConfirm, setDeleteConfirm] = useState(false);\n\n    const { accessManagerUrl, labId } = labAccessInfo;\n\n    const { open, close, description, menu } = selectedNyam;\n    const parsedMenu = JSON.parse(menu).menu;\n\n    const onDelete = useCallback(async () => {\n        setIsLoading(true);\n\n\n        const url = `${accessManagerUrl}?taskTarget=nyam&taskType=delete`;\n        const data = JSON.stringify({\n            nyam: selectedNyam,\n            labId: labId,\n        });\n\n        await axios.post(url, data);\n\n        await refreshMaps();\n        setMapsModalVisible(false);\n        setIsLoading(false);\n\n        message.success(\"냠이 역사의 뒤안길로 사라졌습니다\");\n    }, [setIsLoading, accessManagerUrl, labId, refreshMaps, selectedNyam, setMapsModalVisible]);\n\n    useEffect(() => {\n        if (deleteConfirm === true) {\n            onDelete();\n            setDeleteConfirm(false);\n        }\n    }, [deleteConfirm, onDelete]);\n\n\n\n    function openNyamEditor(e) {\n        setNyamEditorTaskType(\"edit\");\n        setMapsModalVisible(false);\n        setNyamEditorModalVisible(true);\n    }\n\n    return (\n        <MapsModalInfoWrap className=\"MapsModalInfo\">\n            {/* 우측 상단 도구 */}\n            <Tools>\n                <a href={`https://map.naver.com/v5/search/${removeSpace(selectedNyam.name)}`} target=\"_blank\" rel=\"noreferrer\">\n                    <Tooltip title=\"네이버지도\" placement=\"top\">\n                        <Button shape=\"circle\" icon={<QuestionCircleOutlined />} size=\"normal\" style={{ marginRight: SPACE }} />\n                    </Tooltip>\n                </a>\n                <Tooltip title=\"수정\" placement=\"top\">\n                    <Button shape=\"circle\" icon={<FormOutlined />} size=\"normal\" style={{ marginRight: SPACE }} onClick={openNyamEditor} />\n\n                </Tooltip>\n\n                <Tooltip title=\"삭제\" placement=\"top\">\n                    <DeleteBtn setDeleteConfirm={setDeleteConfirm} />\n                    {/* <Button shape=\"circle\" icon={<DeleteOutlined />} size=\"normal\" onClick={(e) => { onDelete(); }} /> */}\n                </Tooltip>\n            </Tools>\n\n            {/* 개요 */}\n            <Summary>\n                <div>\n                    <Title>영업시간</Title>\n                    <p>{open}~{close}</p>\n                </div>\n                <p style={{ marginLeft: \"8px\" }}>{description}</p>\n            </Summary>\n\n            {/* 메뉴목록 */}\n            <ContentsTable desc={[\"메뉴\", \"가격\"]} dataOrder={[\"name\", \"price\"]} data={parsedMenu} />\n        </MapsModalInfoWrap>\n    );\n}\n\n// style ========================================================\nconst SPACE = \"4px\";\n\nconst MapsModalInfoWrap = styled.div`\n    display : flex;\n    flex-direction : column;\n\n    flex : 1;\n    margin-right : ${\"8px\"}; \n\n    @media(max-width : 768px){\n        margin-right : 0;\n        margin-bottom : 8px;\n    }\n    `;\nconst Tools = styled.div`\n    display : flex;\n    justify-content : flex-end;\n    margin-bottom : ${SPACE};\n    `;\n\nconst Summary = styled.div`\n    display : flex;\n    `;\n\nconst Title = styled.p`\n    margin : 0;\n    font-weight : bold;\n    `;\n\n// function =====================================================\nfunction removeSpace(string) {\n    const str = string.split(' ').join('');\n    return str;\n}","// imported Modules =============================================\nimport React, {useState, useEffect} from 'react';\nimport styled from 'styled-components';\n\n// imported Components \nimport DeleteBtn from \"../../atoms/DeleteBtn\";\n\n// Main Component ===============================================\nexport default function Comment ({ index, content, onDelete }) {\n    const [deleteConfirm, setDeleteConfirm] = useState(false);\n    useEffect( () => {\n        if(deleteConfirm === true){\n            onDelete(index);\n            setDeleteConfirm(false);\n        }\n    }, [deleteConfirm, onDelete, index]);\n\n    return (\n        <CommentWrap className=\"Comment\">\n            <Content>{content}</Content>\n            <DeleteBtn setDeleteConfirm={setDeleteConfirm} />\n        </CommentWrap>\n    );\n}\n\n// style ========================================================\nconst SPACE = \"4px\";\n\nconst CommentWrap = styled.div`\n    display : flex;\n    justify-content : flex-end;\n\n    margin-top : ${SPACE};\n    `;\n\nconst Content = styled.p`\n    padding : ${SPACE};\n    border : 1px solid #DCDCDC;\n    border-radius : 8px;\n    margin : 0;\n    max-width : 100%;\n    margin-right : ${SPACE};\n    \n    word-break: break-all;\n    overflow-wrap: break-word;\n    `;\n\n// function =====================================================\n// *","// imported Modules =============================================\nimport React, { useCallback, useState } from 'react';\nimport axios from \"axios\";\n\nimport styled from 'styled-components';\n\nimport { Button, Tooltip, Input, Popover, message } from \"antd\";\nimport { EditOutlined, SmileOutlined } from \"@ant-design/icons\"\n\nimport Picker from 'emoji-picker-react';\n\n// imported components ==========================================\nimport Comment from \"./Comment\";\n\n// Main Component ===============================================\nexport default function MapsModalComment({ labAccessInfo, selectedNyam, refreshMaps, setIsLoading }) {\n    const [newComment, setNewComment] = useState('');\n    const commentsData = JSON.parse(selectedNyam.comment).comment;\n    const { accessManagerUrl, labId } = labAccessInfo;\n\n    async function onCreate(e) {\n        setIsLoading(true);\n\n        // 검증\n        if (newComment == null || newComment === '') {\n            setIsLoading(false);\n            return;\n        }\n\n        // 요청 데이터 준비`\n        const url = `${accessManagerUrl}?taskTarget=comment&taskType=edit`;\n        const data = JSON.stringify({\n            nyam : {\n                id: selectedNyam.id,\n                comment: JSON.stringify({ comment: [newComment, ...commentsData] }),\n            },\n            labId : labId,\n        });\n\n        // 요청\n        await axios.post(url, data);  \n\n        // 리프레시\n        await refreshMaps();\n        setNewComment('');\n        message.success(\"의견이 작성되었습니다\")\n        setIsLoading(false);\n    }\n\n    const onDelete = useCallback(async (index) => {\n        setIsLoading(true);\n\n        // 요청 데이터 준비\n        const url = `${accessManagerUrl}?taskTarget=comment&taskType=edit`;\n        const data = JSON.stringify({\n            nyam : {\n                id: selectedNyam.id,\n                comment: JSON.stringify({ comment: [...commentsData.slice(0, index), ...commentsData.slice(index + 1)] }),\n            },\n            labId : labId,\n        });\n\n        // 요청\n        await axios.post(url, data);\n\n        // 리프레시\n        await refreshMaps();\n        message.success(\"의견이 삭제되었습니다\")\n        setIsLoading(false);\n    }, [accessManagerUrl, labId, selectedNyam, commentsData, setIsLoading, refreshMaps]);\n\n    return (\n        <MapsModalCommentWrap className=\"MapsModalComment\">\n            <Form>\n                <Input\n                    placeholder=\"새로운 의견을 적어주세요\"\n                    value={newComment} onChange={(e) => { setNewComment(e.target.value); }}\n                    style={{ borderRadius: \"8px\", marginRight: \"4px\" }}\n                    suffix={\n                        <Popover placement=\"bottom\" title={null} content={<Picker onEmojiClick={(e, obj) => { setNewComment(newComment + obj.emoji) }} />} trigger=\"click\">\n                            <Tooltip title=\"이모지\" placement=\"top\">\n                                <SmileOutlined />\n                            </Tooltip>\n                        </Popover>\n                    }\n                />\n\n                <Tooltip className=\"deleteComment\" title=\"쓰기\" placement=\"right\">\n                    <Button type=\"primary\" shape=\"circle\" icon={<EditOutlined />} size=\"normal\" onClick={onCreate} />\n                </Tooltip>\n            </Form>\n\n            <Comments>\n                {\n                    commentsData.map((item, index) => (\n                        <Comment key={index} index={index} content={item} onDelete={onDelete} />\n                    ))\n                }\n            </Comments>\n        </MapsModalCommentWrap>\n    );\n}\n\n// style ========================================================\nconst BORDER_COLOR = \"#dbdbdb\";\n\nconst MapsModalCommentWrap = styled.div`\n    display : flex;\n    flex-direction : column;\n\n    width : 40%;\n\n    margin-left : auto;\n    padding : 16px;\n\n    border : 1px solid ${BORDER_COLOR};\n    border-bottom : 12px solid ${BORDER_COLOR};\n    border-radius : 8px;\n\n    @media(max-width : 768px){\n        width : 100%;\n    }\n    `;\n\nconst Form = styled.div`\n    display :flex;\n    align-items : center;\n    `;\n\nconst Comments = styled.div`\n    display : flex;\n    flex-direction : column;\n    align-content : flex-end;\n    justify-content : flex-start;\n\n    height : 100%;\n\n    overflow-y: auto;\n    `;\n\n// function =====================================================\n// *","// imported Modules =============================================\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\n\nimport { Modal } from 'antd';\n\n// imported components ==========================================\nimport MapsModalInfo from \"../followers/MapsModalInfo\";\nimport MapsModalComment from \"../followers/MapsModalComment\";\nimport Loading from \"../../../../ShareComponents/atoms/Loading\";\n\n// Main Component ===============================================\nexport default function MapsModal ({labAccessInfo, selectedNyam, refreshMaps, mapsModalVisible, setMapsModalVisible, setNyamEditorModalVisible, setNyamEditorTaskType}) {\n    const [ isLoading, setIsLoading ] = useState(false);\n\n    return (\n        selectedNyam != null\n            ?\n                <MapsModalWrap className=\"MapsModal\">\n                    <StyledModal\n                        title={selectedNyam.name}\n                        visible={mapsModalVisible}\n                        onCancel={() => { setMapsModalVisible(false) }}\n                        footer={null}\n                    >\n                        <ModalContentsWrap>\n                            <MapsModalInfo \n                                labAccessInfo={labAccessInfo} selectedNyam={selectedNyam} refreshMaps={refreshMaps} \n                                setIsLoading={setIsLoading} setMapsModalVisible={setMapsModalVisible} setNyamEditorModalVisible={setNyamEditorModalVisible} setNyamEditorTaskType={setNyamEditorTaskType}\n                            />\n                            <MapsModalComment labAccessInfo={labAccessInfo} selectedNyam={selectedNyam} refreshMaps={refreshMaps} setIsLoading={setIsLoading} />\n                        </ModalContentsWrap>\n\n                        <Loading isLoading={isLoading} />\n                    </StyledModal>\n                </MapsModalWrap>\n    \n            :   \n                <div></div>\n    );\n}\n\n// style ========================================================\nconst MapsModalWrap = styled.div`\n\n    `;\n\nconst ModalContentsWrap = styled.div`\n    display : flex;\n\n    @media(max-width : 768px){\n        flex-direction : column;\n    }\n`;\nconst StyledModal = styled(Modal)`\n    min-width : 50%;\n`;\n// function =====================================================\n// *","// imported Modules =============================================\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport styled from \"styled-components\";\nimport axios from \"axios\";\nimport moment from \"moment\";\n\nimport { Modal, Input, TimePicker, Button, Divider, Select, message } from 'antd';\nimport { PlusOutlined, MinusOutlined } from \"@ant-design/icons\"\n\n// imported components\nimport Loading from \"../../../../ShareComponents/atoms/Loading\";\n\n// Main Component ===============================================\nimport DataStorage from \"../../../../DataStorage\";\nconst NYAM_TYPES = DataStorage(\"NYAM_TYPES\");\nconst NYAM_TYPES_KEY = DataStorage(\"NYAM_TYPES_KEY\");\n\nconst SUMMARY_INIT_VALUE = { name: null, description: null, open: null, close: null, type: null, lat: null, lng: null, comment: null };\nconst MENUITEM_INIT_VALUE = [{ name: '', price: '' }];\n\nexport default function NyamEditor({ labAccessInfo, taskType, pickCoord, defaultNyamValue, refreshMaps, nyamEditorModalVisible, setNyamEditorModalVisible, setIsPickmode, setMapsModalVisible }) {\n    const [isLoading, setIsLoading] = useState(false);\n    const [resetLock, setResetLock] = useState(false); // 냠에디터를 닫았다 열었을 때, selectedNyam의 내용으로 초기화시킬지. ( false : 초기화함, true : 초기화 안함, null : 폼 업데이트됨 )\n\n    const [summary, setSummary] = useState(SUMMARY_INIT_VALUE);\n    const [menuItems, setMenuItems] = useState(MENUITEM_INIT_VALUE);\n\n    const { accessManagerUrl, labId } = labAccessInfo;\n    const title = (taskType === \"create\" ? \"새로운 냠 만들기\" : \"냠 수정하기\");\n\n    const initFormData = useCallback(() => {\n        if (taskType === \"edit\" && defaultNyamValue != null) {\n            // apply default value to \"summary\"\n            const tempSummary = { ...defaultNyamValue };\n            delete tempSummary.menu;\n            setSummary(tempSummary);\n\n            // apply default value to \"menuItems\"\n            let tempMenuItems = [];\n            tempMenuItems = (JSON.parse(defaultNyamValue.menu)).menu;\n            setMenuItems(tempMenuItems);\n\n        } else if (taskType === \"create\") {\n            setSummary({ ...SUMMARY_INIT_VALUE, lat: pickCoord.y, lng: pickCoord.x, comment: JSON.stringify({ \"comment\": [] }) });\n            setMenuItems(MENUITEM_INIT_VALUE)\n        }\n\n        setResetLock(null);\n    }, [defaultNyamValue, taskType, pickCoord]);\n\n    // 폼 초기값 지정.\n    useEffect(() => {\n        if (resetLock === false && nyamEditorModalVisible === true) {\n            initFormData();\n            setResetLock(null);\n        }\n    }, [resetLock, nyamEditorModalVisible, initFormData]);\n\n    // 좌표 수정 업데이트.\n    useEffect(() => {\n        if (nyamEditorModalVisible === true && resetLock === true) {\n            setSummary({ ...summary, lat: pickCoord.y, lng: pickCoord.x });\n            setResetLock(null);\n        }\n\n    }, [pickCoord, nyamEditorModalVisible, resetLock, summary])\n\n\n\n    // about onChange\n    function onChangeSummary(target, value) {\n        setSummary({ ...summary, [target]: value });\n    }\n    function onChangeMenuItems(index, type, value) {\n        setMenuItems([...menuItems.slice(0, index), { ...menuItems[index], [type]: value }, ...menuItems.slice(index + 1)]);\n    }\n\n    // add/remove menu item\n    function addNewMenuItem(index) { setMenuItems([...menuItems.slice(0, index), { name: '', price: '' }, ...menuItems.slice(index)]) }\n    function removeMenuItem(index) { setMenuItems([...menuItems.slice(0, index), ...menuItems.slice(index + 1)]); }\n\n    // about footer buttons.\n    function clearAll(e) {\n        const summaryReplace = {...SUMMARY_INIT_VALUE, id:summary.id, lat:summary.lat, lng:summary.lng, comment:summary.comment};\n\n        setSummary(summaryReplace);\n        setMenuItems(MENUITEM_INIT_VALUE);\n    }\n\n    async function onSubmit(e) {\n        setIsLoading(true);\n\n        const nyam = {};\n        Object.assign(nyam, summary);\n        \n        // 검증\n        for (let property of Object.keys(nyam)) {\n            if (nyam[property] === null || nyam[property] === \"\") {\n                message.warning(\"비어있는 정보를 채워넣어주세요!\");\n                setIsLoading(false);\n                return;\n            }\n        }\n\n        for (let item of menuItems) {\n            if (item.name === '' || item.price === '') {\n                message.warning(\"비어있는 정보를 채워넣어주세요!\");\n                setIsLoading(false);\n                return;\n            }\n        }\n\n        // 요청 데이터 준비\n        Object.assign(nyam, { \"menu\": JSON.stringify({ \"menu\": menuItems }) });\n        \n        try {\n            // 요청\n            const rawData = {\n                nyam : nyam,\n                labId : labId,\n            };\n            const data = JSON.stringify(rawData);\n            const url = `${accessManagerUrl}?taskTarget=nyam&taskType=${taskType}`;\n            await axios.post(url, data);\n\n            // 리프레시\n            await refreshMaps();\n            setNyamEditorModalVisible(false);\n            setResetLock(false);\n            setIsLoading(false);\n\n            // 완료메시지\n            if (taskType === \"create\") { message.success(\"새로운 냠을 만들었습니다!\"); }\n            else if (taskType === \"edit\") { message.success(\"냠이 수정되었습니다!\"); }\n        } catch (err) {\n            setIsLoading(false);\n            console.error(err);\n            message.error(\"앗, 뭔가 잘못됐습니다. 다시 시도해주세요\", 2.0);\n        }\n    }\n\n    function onClose(e) {\n        setNyamEditorModalVisible(false);\n        setResetLock(false);\n        if (taskType === \"edit\") {\n            setMapsModalVisible(true);\n        }\n    }\n\n    function onCoordEdit(e) {\n        message.info(\"냠의 새로운 위치를 정해주세요\", 5);\n        setResetLock(true);\n        setNyamEditorModalVisible(false);\n        setIsPickmode(true);\n    }\n\n    return (\n        <NyamEditorWrap className=\"NyamEditor\">\n            <Modal\n                title={title}\n                visible={nyamEditorModalVisible}\n                onCancel={onClose}\n                footer={null}\n            >\n                <SummaryWrap>\n                    <Divider>개요</Divider>\n\n                    <Coord>\n                        <span style={{ marginRight: \"8px\", textAlign: \"center\" }}>{`위도 ${summary.lat}`}</span>\n                        <span style={{ marginRight: \"8px\", textAlign: \"center\" }}>{`경도 ${summary.lng}`}</span>\n                        <Button onClick={onCoordEdit} >위치 수정</Button>\n                    </Coord>\n\n                    <StyledInput name=\"name\" placeholder=\"가게 이름\" value={summary.name} onChange={(e) => { onChangeSummary(e.target.name, e.target.value) }} />\n                    <StyledInput name=\"description\" placeholder=\"설명\" value={summary.description} onChange={(e) => { onChangeSummary(e.target.name, e.target.value) }} />\n\n                    <TimePickersWrap>\n                        <TimePicker\n                            name=\"openTime\" format=\"HH:mm\" placeholder=\"문 여는 시간\" value={summary.open ? moment(summary.open, \"HH:mm\") : null}\n                            onChange={(time, timeString) => { onChangeSummary(\"open\", timeString); }} style={{ flexGrow: \"1\", marginRight: SPACE }}\n                            minuteStep={5}\n                        />\n                        <TimePicker\n                            name=\"closeTime\" format=\"HH:mm\" placeholder=\"문 닫는 시간\" value={summary.close ? moment(summary.close, \"HH:mm\") : null}\n                            onChange={(time, timeString) => { onChangeSummary(\"close\", timeString); }} style={{ flexGrow: \"1\" }}\n                            minuteStep={5}\n                        />\n                    </TimePickersWrap>\n\n                    <Select placeholder=\"유형을 골라주세요\" value={summary.type} onChange={(value) => { onChangeSummary(\"type\", value); }}>\n                        {NYAM_TYPES_KEY.map((key, index) => (<Select.Option value={key} key={index}>{NYAM_TYPES[key]}</Select.Option>))}\n                    </Select>\n                </SummaryWrap>\n\n                <MenusWrap>\n                    <Divider>메뉴</Divider>\n\n                    {menuItems.map((item, index) => MenuItem(index, item.name, item.price, addNewMenuItem, removeMenuItem, onChangeMenuItems))}\n                    <StyledButton shape=\"circle\" icon={<PlusOutlined />} style={{}} onClick={(e) => { addNewMenuItem(menuItems.length) }} />\n\n                    <Divider />\n                </MenusWrap>\n\n                <ButtonsWrap>\n                    <Button type=\"link\" onClick={clearAll}>모두 지우기</Button>\n                    <Button onClick={onSubmit} style={{ marginLeft: \"auto\" }}>저장</Button>\n                </ButtonsWrap>\n\n                <Loading isLoading={isLoading} />\n            </Modal>\n        </NyamEditorWrap>\n    );\n}\n\n// style ========================================================\nconst SPACE = \"4px\";\n\n// -- antd redefined style\nconst StyledInput = styled(Input)`\n    margin-bottom : ${SPACE};\n    `;\n\nconst StyledButton = styled(Button)`\n    margin-right : ${SPACE};\n    `;\n\n// -- user defined style\nconst NyamEditorWrap = styled.div``;\n\nconst SummaryWrap = styled.div`\n    display : flex;\n    flex-direction : column;\n    align-items : stretch;\n    `;\n\nconst Coord = styled.div`\n    display : flex;\n    justify-content : flex-end;\n    align-items : center;\n\n    margin-bottom : ${SPACE}\n    `;\n\nconst TimePickersWrap = styled.div`\n    display : flex;\n    margin-bottom : ${SPACE}\n    `;\n\nconst MenusWrap = styled.div``;\n\nconst MenuItemWrap = styled.div`\n    display : flex;\n    `;\n\nconst ButtonsWrap = styled.div`\n    display : flex;\n    `;\n\n// function =====================================================\n// *\n\n// 유사 컴포넌트 ================================================\nfunction MenuItem(index, name, price, addNewMenuItem, removeMenuItem, onChangeMenuItems) {\n    return (\n        <MenuItemWrap key={index}>\n            <StyledButton shape=\"circle\" icon={<PlusOutlined />} style={{}} onClick={(e) => { addNewMenuItem(index); }} />\n            <StyledButton shape=\"circle\" icon={<MinusOutlined />} onClick={(e) => { removeMenuItem(index) }} />\n\n            <StyledInput placeholder=\"메뉴 이름\" value={name} style={{ marginRight: SPACE }} onChange={(e) => { onChangeMenuItems(index, \"name\", e.target.value); }} />\n            <StyledInput placeholder=\"메뉴 가격\" value={price} onChange={(e) => { onChangeMenuItems(index, \"price\", e.target.value); }} />\n        </MenuItemWrap>\n    )\n}\n","export default function naverMapsinit(setting) {\n    const { lat, lng, zoom } = setting;\n    \n    const mapOptions = {\n        center: new window.naver.maps.LatLng(lat, lng),\n        zoom: zoom,\n    };\n    const map = new window.naver.maps.Map(\"map\", mapOptions);\n\n    return map;\n}","import axios from \"axios\";\nimport { message } from \"antd\";\n\nexport default async function readContents(labAccessInfo) {\n    try {\n        const {accessManagerUrl, labId} = labAccessInfo;\n\n        const { data : {data, status} } = await axios.get(`${accessManagerUrl}?labId=${labId}`);\n\n        if(status!=='error'){\n            return { \n                rawNyamList : data.nyamList,\n                setting : data.setting[0],\n            };\n        } else {\n            throw new Error(`응답 status가 ${status}입니다.`);\n        }\n        \n    } catch (err) {\n        message.error({\n            content : '문제가 생겨 데이터를 받아오지 못했습니다.',\n            duration : 0,\n            key : 'readContents_01',\n            onClick : (e)=>{message.destroy('readContents_01');},\n        });\n        console.error(err);\n        return null;\n    }\n}","import { message } from \"antd\";\n\nexport default function createNyamMarkers (map, nyamTypes, nyamList, setMarkers, setNyams, setMapsModalVisible, setSelectedNyam) {\n    // initialize temp variable for states\n    const tempNyams = initWithNyamtype(nyamTypes);\n    const tempMarkers = initWithNyamtype(nyamTypes);\n    \n    // create markers\n    try {\n        nyamList.forEach( item => { \n            const marker = new window.naver.maps.Marker({\n                position : new window.naver.maps.LatLng(item.lat, item.lng),\n                map : map,\n                icon : {\n                    content: [\n                        '<div>',\n                            '<div style=\"background-color:rgba(255,255,255,0.8); padding:5px; border-radius:16px; border:1px solid #d9d9d9;\">',\n                                `<span style=\"white-space:nowrap;\">${item.name}</span>`,\n                            '</div>',\n                            `<img src=\"img/icons/svg/${item.type}.svg\">`,\n                        '</div>'\n                    ].join(''),\n    \n                    anchor: new window.naver.maps.Point(16, 48),\n                }\n            });\n    \n            marker.addListener(\"click\", (e) => {\n                const targetid = e.overlay[\"_nmarker_id\"];\n                const types = nyamTypes;\n    \n                for( let i = 0; i<types.length; i++){\n                    const type = types[i];\n                    let chk = false;\n                    for( let j=0; j<tempMarkers[type].length; j++ ){\n                        if ( targetid === tempMarkers[type][j][\"_nmarker_id\"] ){\n                            setSelectedNyam(tempNyams[type][j]);\n                            setMapsModalVisible(true);\n                            chk = true;\n                            break;\n                        }\n                    }\n                    if (chk) { break; }\n                }\n            });\n    \n            tempNyams[item.type].push(item);\n            tempMarkers[item.type].push(marker);\n        });\n\n        setNyams(tempNyams);\n        setMarkers(tempMarkers);\n    } catch(err) {\n        console.error(err);\n        console.error(nyamList);\n        message.error({\n            content : '데이터를 표시하는 과정에 문제가 생겼습니다. 새로고침을 시도해주세요',\n            duration : 0,\n            key : 'createNyamMakers_01',\n            onClick : (e)=>{message.destroy('createNyamMakers_01');},\n        });\n    }\n}\n\n\nfunction initWithNyamtype (types) {\n    let obj = {};\n    types.forEach( category => {\n        obj[category] = [];\n    });\n\n    return obj;\n}","export default function createCenterMarker(map, setting) {\n    const { lat, lng } = setting;\n\n    //const marker = \n    new window.naver.maps.Marker({\n        position: new window.naver.maps.LatLng(lat, lng),\n        map: map,\n        icon: {\n          url : `img/icons/svg/center.svg`,\n          size: new window.naver.maps.Size(48, 48),\n          origin: new window.naver.maps.Point(0, 0),\n        }\n    });\n\n    return 0;\n}","// imported Modules =============================================\nimport { React, useState, useEffect } from \"react\";\nimport ScriptTag from \"react-script-tag\";\nimport styled from \"styled-components\";\n\n// imported components ==========================================\nimport MapsModal from \"./leaders/MapsModal\";\nimport NyamEditor from \"./followers/NyamEditor\";\nimport Loading from \"../../../ShareComponents/atoms/Loading\";\n\n// imported supporters ==========================================\nimport DataStorage from \"../../../DataStorage\";\nimport initNaverMaps from \"../supporters/initNaverMaps\";\nimport readContents from \"../supporters/readContents\";\nimport createNyamMarkers from \"../supporters/createNyamMarkers\";\nimport createCenterMarker from \"../supporters/createCenterMarker\";\nimport { message } from \"antd\";\n\n// Main Component ===============================================\nlet map = null; // naver maps object\n\nconst MAP_SOURCE = DataStorage(\"MAP_SOURCE\");\nconst NYAM_TYPES = DataStorage(\"NYAM_TYPES_KEY\");\n\nexport default function Maps({ filters, isPickmode, nyamEditorTaskType, setIsPickmode, setNyamEditorTaskType, labAccessInfo }) {\n    const [nyams, setNyams] = useState(null);\n    const [markers, setMarkers] = useState(null);\n\n    const [isLoading, setIsLoading] = useState(false);\n    const [selectedNyam, setSelectedNyam] = useState(null);\n    const [pickCoord, setPickCoord] = useState({ x: 0, y: 0 }); // 새로 추가할 냠의 좌표값. { x : 123, y : 123 }\n\n    const [mapsModalVisible, setMapsModalVisible] = useState(false);\n    const [nyamEditorModalVisible, setNyamEditorModalVisible] = useState(false);\n\n    // 마커 visible 속성 변경\n    useEffect(() => {\n        if (markers !== null) {\n            setMarkersVisible(filters, setIsLoading, markers);\n        }\n    }, [filters, markers]);\n\n    // 마커위치 선택\n    useEffect(() => {\n        if (map != null) {\n            if (isPickmode === true) {\n                map.setCursor(\"Crosshair\");\n                const listener = window.naver.maps.Event.addListener(map, 'click', function (e) { // 클릭이 들어왔으면\n                    if (isPickmode === true) {\n                        const { x, y } = e.coord;\n                        setPickCoord({ x, y }); // 좌표값 저장하고\n                        setIsPickmode(false); // 선택모드 끄고\n                        setNyamEditorModalVisible(true); // 냠에디터 켜\n                        window.naver.maps.Event.removeListener(listener);\n                    }\n                });\n            } else if (isPickmode === false) {\n                map.setCursor(\"Move\");\n            }\n        }\n    }, [isPickmode, setIsPickmode]);\n\n    // 지도 refreshMaps() 된다음, selectedNyam내용 업데이트\n    useEffect(() => {\n        if (selectedNyam != null) {\n            const { type, id } = selectedNyam;\n            const index = nyams[type].findIndex(nyam => nyam.id === id)\n            setSelectedNyam(nyams[type][index]);\n        }\n    }, [nyams, selectedNyam]);\n\n    async function refreshMaps() {\n        // 기존의 마커 모두 삭제하기\n        for (let arr of Object.values(markers)) {\n            arr.forEach(marker => {\n                marker.setMap(null);\n            });\n        }\n\n        // 다시 만들기\n        const { rawNyamList, setting } = await readContents(labAccessInfo);\n        createNyamMarkers(map, NYAM_TYPES, rawNyamList, setMarkers, setNyams, setMapsModalVisible, setSelectedNyam);\n        createCenterMarker(map, setting);\n        // 이후 바로 위 useEffect에서 selectedNyam 내용 갱신.\n    }\n\n    return (\n        <MapsWrap className=\"Maps\">\n            <ScriptTag\n                type=\"text/javascript\" src={MAP_SOURCE}\n                onLoad={async () => {\n                    setIsLoading(true);\n                    const contents = await readContents(labAccessInfo);\n                    if (!contents) {\n                        setIsLoading(false);\n                        return;\n                    }\n                    const { rawNyamList, setting } = contents;\n                    \n                    map = initNaverMaps(setting);\n                    createNyamMarkers(map, NYAM_TYPES, rawNyamList, setMarkers, setNyams, setMapsModalVisible, setSelectedNyam);\n                    createCenterMarker(map, setting);\n                    \n                    message.destroy();\n                    message.success('연구소의 모든 내용을 잘 불러왔어요!')\n                    setIsLoading(false);\n                }}\n            />\n            <Map id=\"map\"></Map>\n\n            <MapsModal\n                labAccessInfo={labAccessInfo} selectedNyam={selectedNyam}\n                refreshMaps={refreshMaps}\n                mapsModalVisible={mapsModalVisible} setMapsModalVisible={setMapsModalVisible}\n                setNyamEditorModalVisible={setNyamEditorModalVisible} setNyamEditorTaskType={setNyamEditorTaskType}\n            />\n\n            <NyamEditor\n                labAccessInfo={labAccessInfo} taskType={nyamEditorTaskType} pickCoord={pickCoord} defaultNyamValue={selectedNyam}\n                refreshMaps={refreshMaps}\n                nyamEditorModalVisible={nyamEditorModalVisible} setNyamEditorModalVisible={setNyamEditorModalVisible}\n                setIsPickmode={setIsPickmode} setMapsModalVisible={setMapsModalVisible}\n            />\n\n            <Loading isLoading={isLoading} />\n        </MapsWrap>\n    );\n}\n\n// style ========================================================\nconst MapsWrap = styled.div`\n    display : flex;\n    flex : 1;\n    `;\n\nconst Map = styled.div`\n    width: 100%;\n    height : 100%;\n    `;\n\n// function =====================================================\nfunction setMarkersVisible(filters, setIsLoading, markers) {\n    setIsLoading(true);\n\n    const types = NYAM_TYPES; // 정의되어있는 type배열 불러오기\n\n    types.forEach(type => {\n        const target = markers[type]; // markers의 한 type을 대상으로 정함\n        if (target.length === 0) { return; } // 대상이 비어있으면 바로 함수종료\n\n        const dest = filters[type]; // 업데이트 하려고 하는 값\n        if (target[0].getVisible() !== dest) { // target안의 첫번째 마커의 visible속성과, 업데이트 하려고 하는 값이 다르면 (어차피 첫번째 마커 visible값이랑, 전체 마커 visible값이랑 똑같을거기 때문)\n            target.forEach(marker => { marker.setVisible(dest); }); // 업데이트!\n            return;\n        }\n    });\n\n    setIsLoading(false);\n}","// imported Modules =============================================\nimport React, { useState } from 'react';\nimport styled from \"styled-components\";\n      //import {notification} from \"antd\";\n\n// imported components ==========================================\nimport Header from \"./components/Header/Header\";\nimport Maps from \"./components/Maps/Maps\";\nimport Footer from \"../ShareComponents/atoms/Footer\";\n\n// Main Component ===============================================\nexport default function App({location, history}) {\n  const [filters, setFilters] = useState({});\n  const [isPickmode, setIsPickmode] = useState(false); // 현재 '새로운 냠'버튼을 눌러 새로운 위치를 찍는 상태인지\n  const [nyamEditorTaskType, setNyamEditorTaskType] = useState(null); // 냠에디터 taskType : create / edit\n\n  const labAccessInfo = location.state;\n  \n  return (\n    <AppWrap className=\"App\" style={{ cursor : (isPickmode ? 'Crosshair' : 'auto') }}>\n      <Header setFilters={setFilters} setIsPickmode={setIsPickmode} setNyamEditorTaskType={setNyamEditorTaskType} />\n      <Maps \n        filters={filters} \n        isPickmode={isPickmode} setIsPickmode={setIsPickmode}\n        nyamEditorTaskType={nyamEditorTaskType} setNyamEditorTaskType={setNyamEditorTaskType} \n        labAccessInfo={labAccessInfo}  \n      />\n      <Footer />\n    </AppWrap>\n  );\n}\n\n// style ========================================================\nconst AppWrap = styled.div`\n  display : flex;\n  flex-direction : column;\n  height : 100%;\n`;\n\n\n","// imported Modules =============================================\nimport React from 'react';\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport styled from 'styled-components';\n\n// imported components ==========================================\nimport Home from \"./Home/Home\";\nimport App from \"./App/App\";\n\n// Main Component ===============================================\nexport default function NyamNyamLab() {\n    return (\n        <NyamNyamLabWrap className=\"NyamNyamLab\">\n            <BrowserRouter>\n                <Route path=\"/\" exact={true} component={Home}/>\n                <Route path=\"/app\" component={App} />\n            </BrowserRouter>\n        </NyamNyamLabWrap>\n    );\n}\n\n// style ========================================================\nconst NyamNyamLabWrap = styled.div`\n    width : 100%;\n    height : 100%;\n    `;\n\n// function =====================================================\n// *","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport NyamNyamLab from './NyamNyamLab';\n\nReactDOM.render(\n    // <React.StrictMode>\n    //   <App />\n    // </React.StrictMode>,\n    \n    <NyamNyamLab />,\n    document.getElementById('root')\n);"],"sourceRoot":""}