{"version":3,"sources":["Home/components/LabCreator/drawerContents/SelectType.js","ShareComponents/atoms/Loading.js","ShareComponents/atoms/Confirm.js","DataStorage.js","Home/components/LabCreator/drawerContents/CenterPicker.js","Home/components/LabCreator/drawerContents/Movein.js","Home/components/LabCreator/drawerContents/Construct.js","Home/components/LabCreator/LabCreator.js","Home/LabFinder.js","ShareComponents/atoms/Footer.js","logo.svg","Home/Home.js","App/components/Header/followers/UpdateNoteRaw.md","App/components/Header/followers/UpdateNote.js","App/components/Header/followers/Tools.js","App/components/Header/Header.js","App/components/atoms/ContentsTable.js","App/components/atoms/DeleteBtn.js","App/components/Maps/followers/MapsModalInfo.js","App/components/Maps/followers/Comment.js","App/components/Maps/followers/MapsModalComment.js","App/components/Maps/leaders/MapsModal.js","App/components/Maps/followers/NyamEditor.js","App/components/supporters/initNaverMaps.js","App/components/supporters/readContents.js","App/components/supporters/createNyamMarkers.js","App/components/supporters/createCenterMarker.js","App/components/Maps/Maps.js","App/App.js","NyamNyamLab.js","index.js"],"names":["SelectType","setCurrentContent","contentsIndex","setLabCreatorVisible","SelectTypeWrap","className","onClick","e","shape","icon","LeftOutlined","ContentWrap","movein","size","style","marginRight","disabled","construct","marginTop","styled","div","Loading","isLoading","LoadingWrap","Backdrop","spinning","indicator","LoadingOutlined","fontSize","spin","Confirm","pickedCenter","activatePickmode","closeCenterPicker","ConfirmWrap","ConfirmWindow","lat","lng","zoom","type","marginLeft","DataStorage","key","NYAM_TYPES","korea","china","japan","asian","schoolfood","fastfood","cafe","bakery","pub","cvs","NYAM_TYPES_KEY","CREATE_NEWLAB_MOVEIN","CREATE_NEWLAB_CONSTRUCT","ACCESS_MANAGER","ROUTE_MANAGER","MAP_SOURCE","SEND_CHECK_MAIL","map","centerMarker","CENTER_INIT_VALUE","CENTER_DEFAULT_VALUE","CenterPicker","centerPickerVisible","setCenterPickerVisible","currentCenter","setCurrentCenter","useState","setPickedCenter","isPickmode","setIsPickmode","isLoadedPickedCenter","setIsLoadedPickedCenter","isLoadedMaps","setIsLoadedMaps","setMap","setOptions","setCursor","pickListener","window","naver","maps","Event","addListener","center","coord","y","x","getZoom","Marker","position","LatLng","url","Size","origin","Point","anchor","panTo","removeListener","deactivatePickmode","message","destroy","info","isConfirmed","useEffect","obj","keys","Object","isContains","containsNull","mapOptions","Map","CenterPickerWrap","src","onLoad","id","FORMDATA_INIT_VALUE","labName","customIcon","defaultPermission","routePw","captainEmail","captainPw","IS_VALIDATED_INIT_VALUE","all","Movein","formData","setFormData","isValidated","setIsValidated","btnLoading","setBtnLoading","setIsLoading","onChangeForm","target","value","validate","a","name","parentNode","returnValue","warn","axios","post","JSON","stringify","data","status","error","console","isAvailableLabName","success","selectType","MoveinWrap","MultiInput","StyledInput","placeholder","onChange","loading","StyledPwInput","Option","Input","Password","isAvailable","containsOnlySpace","get","log","str","res","i","length","Construct","ConstructWrap","LabCreator","labCreatorVisible","currentContent","contentsProps","LabCreatorWrap","title","placement","closable","width","innerWidth","onClose","visible","FIND_OPTION","PLACE_HOLDER","first","second","LabFinder","isReady","setIsReady","labAccessInfo","setLabAccessInfo","findOption","setFindOption","firstInput","setFirstInput","secondInput","setSecondInput","TEMP_DATALAB_AUTOACCESS","SET_TEMP_DATALAB_AUTOACCESS","onSubmit","postData","taskType","labId","accessManagerUrl","content","duration","to","pathname","state","LabFinderWrap","SelectMenu","parseInt","selectedKeys","mode","SelectItem","FinderForm","FinderInput","onPressEnter","FinderInputPw","FinderButton","SearchOutlined","Menu","Item","Button","Footer","FooterWrap","Group","p","Home","HomeWrap","MainSection","Header","borderRadius","href","GithubOutlined","Contents","Logo","LogoImage","alt","LogoText","DetailSection","margin","textAlign","h1","UpdateNote","updateNoteModalVisible","setUpdateNoteModalVisible","markdown","setMarkdown","fetch","mdSource","then","text","init","UpdateNoteWrap","onCancel","footer","minWidth","children","Tools","setFilters","setNyamEditorTaskType","arr","forEach","el","initChecked","checked","setChecked","ToolsWrap","filterContent","nyamType","trigger","MenuButton","FilterOutlined","createNyamContent","PlusOutlined","display","BookOutlined","SettingOutlined","styld","flexDirection","index","HeaderWrap","LogoImg","LOGO_IMG","img","ContentsTable","desc","dataOrder","ContentsTableWrap","Table","Row","borderWidth","Th","rowItem","colItem","Td","CELL_PADDING","BORDER_COLOR","table","tr","th","td","DeleteBtn","setDeleteConfirm","setVisible","formContent","justifyContent","DeleteBtnWrap","onVisibleChange","DeleteOutlined","MapsModalInfo","selectedNyam","refreshMaps","setMapsModalVisible","setNyamEditorModalVisible","deleteConfirm","open","close","description","menu","parsedMenu","parse","onDelete","useCallback","nyam","MapsModalInfoWrap","removeSpace","rel","QuestionCircleOutlined","SPACE","FormOutlined","Summary","Title","string","split","join","Comment","CommentWrap","Content","MapsModalComment","newComment","setNewComment","commentsData","comment","onCreate","slice","MapsModalCommentWrap","Form","suffix","onEmojiClick","emoji","SmileOutlined","EditOutlined","Comments","item","MapsModal","mapsModalVisible","MapsModalWrap","StyledModal","ModalContentsWrap","Modal","SUMMARY_INIT_VALUE","MENUITEM_INIT_VALUE","price","NyamEditor","pickCoord","defaultNyamValue","nyamEditorModalVisible","resetLock","setResetLock","summary","setSummary","menuItems","setMenuItems","initFormData","tempSummary","tempMenuItems","onChangeSummary","onChangeMenuItems","addNewMenuItem","removeMenuItem","assign","property","warning","rawData","NyamEditorWrap","SummaryWrap","Coord","TimePickersWrap","format","moment","time","timeString","flexGrow","minuteStep","MenusWrap","MenuItemWrap","StyledButton","MinusOutlined","MenuItem","ButtonsWrap","summaryReplace","naverMapsinit","setting","readContents","rawNyamList","nyamList","Error","createNyamMarkers","nyamTypes","setMarkers","setNyams","setSelectedNyam","tempNyams","initWithNyamtype","tempMarkers","marker","targetid","overlay","types","chk","j","push","err","category","createCenterMarker","Maps","filters","nyamEditorTaskType","nyams","markers","setPickCoord","values","dest","getVisible","setMarkersVisible","listener","findIndex","MapsWrap","contents","initNaverMaps","App","location","history","AppWrap","cursor","NyamNyamLab","NyamNyamLabWrap","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a781ea41.chunk.js","sourcesContent":["// imported Modules =============================================\r\nimport { React, useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Button } from 'antd';\r\nimport {LeftOutlined} from '@ant-design/icons';\r\n// imported components ==========================================\r\n// *\r\n\r\n// Main Component ===============================================\r\nexport default function SelectType({ setCurrentContent, contentsIndex, setLabCreatorVisible }) {\r\n    return (\r\n        <SelectTypeWrap className=\"SelectType\">\r\n            <Button onClick={e => setLabCreatorVisible(false)} shape=\"circle\" icon={<LeftOutlined />}></Button>\r\n            <ContentWrap>\r\n                <h2>냠냠랩에 연구소를 만들고 싶으신가요?</h2>\r\n                <p>🤔 어떤 유형을 선택하시겠어요?</p>\r\n\r\n                <div>\r\n                    <Button onClick={e => setCurrentContent(contentsIndex.movein)} size=\"large\" style={{marginRight:\"16px\"}} >🏢 입주</Button>\r\n                    <Button disabled onClick={e => setCurrentContent(contentsIndex.construct)} size=\"large\" >🏗 건설</Button>\r\n                </div>\r\n\r\n                <div style={{ marginTop: \"16px\" }}>\r\n                    <p>\r\n                        <strong>✍️ 공통 준비물 </strong>\r\n                        새로운 연구소를 만들기 위해서는 <strong>구글 계정</strong>이 꼭 필요합니다. \r\n                        냠냠랩이 구글서비스 기반으로 동작하기 때문에, 사용가능한 구글계정을 하나 준비해주셔야 합니다.\r\n                        만약 없더라도 연구소를 가질 수는 있지만, 추후 연구소 관리가 정말정말로 어려울 수 있어요.\r\n                    </p>\r\n                    <p>\r\n                        <strong>🏢 입주 </strong>\r\n                        간편하게 이용할 수 있어 가장 추천드리는 방법이에요. 냠냠랩이 이미 마련해둔 공간에 대장님의 연구소를 자동으로 준비해드려요. \r\n                        냠냠랩에서 대장님의 연구내용을 관리하는 만큼, 비교적 빠른 시설보수와 연구지원을 받을 수 있어요.\r\n                    </p>\r\n                    <p>\r\n                        <strong>🏗 건설 </strong>\r\n                        냠냠랩이 관리하지 않는 대장님만의 독립적인 연구소를 만들어드려요. 연구소 접근에 접근하는 과정이나 프로그램 업데이트를 따라오시는 일이 많이 까다로울 수 있어요.\r\n                        하지만 원하신다면 저희가 성의껏 준비한 가이드를 따라 건설에 도전해보세요. 연구내용을 대장님, 그리고 함께하는 개척자 분들만 알 수 있는 특징이 있어요. \r\n                        냠냠랩이 알면 안되는 내용이 들어가있거나, 본인이 연구소를 직접 관리하고 싶다면 선택해주세요.\r\n                    </p>\r\n                    \r\n                </div>\r\n            </ContentWrap>\r\n        </SelectTypeWrap>\r\n    );\r\n}\r\n\r\n// style ========================================================\r\nconst SelectTypeWrap = styled.div`\r\n\r\n    `;\r\n    \r\nconst ContentWrap = styled.div`\r\n    display : flex;\r\n    flex-direction : column;\r\n    justify-content : center;\r\n    align-items : center;\r\n\r\n    height : 100%;\r\n    `;\r\n// function =====================================================\r\n// *","// imported Modules =============================================\r\nimport { React } from \"react\";\r\n\r\nimport styled from \"styled-components\";\r\nimport { Spin } from 'antd';\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\nimport 'antd/dist/antd.css';\r\n\r\n// Main Component ===============================================\r\nexport default function Loading ({ isLoading }) {\r\n    \r\n    if ( isLoading ){\r\n        return (\r\n            <LoadingWrap className=\"Loading\">\r\n                <Backdrop></Backdrop>\r\n                <Spin spinning={isLoading} size=\"large\" indicator={<LoadingOutlined style={{ fontSize: 64 }} spin />} />\r\n            </LoadingWrap>\r\n        );\r\n    } else {\r\n        return <div className=\"Loading\"></div>;\r\n    }\r\n   \r\n}\r\n\r\n// style ========================================================\r\nconst LoadingWrap = styled.div`\r\n    position : fixed;\r\n    top : 0; \r\n    left : 0;\r\n\r\n    display : flex;\r\n    justify-content : center;\r\n    align-items : center;\r\n\r\n    width : 100%; \r\n    height : 100%;\r\n    `;\r\n\r\nconst Backdrop = styled.div`\r\n    position : fixed;\r\n    top : 0; \r\n    left : 0;\r\n\r\n    width : 100%;\r\n    height : 100%;\r\n\r\n    background-color : rgba(0,0,0, 0.75);\r\n    `;","// imported Modules =============================================\r\nimport { React } from \"react\";\r\n\r\nimport styled from \"styled-components\";\r\nimport { Button } from 'antd';\r\n\r\n// Main Component ===============================================\r\nexport default function Confirm({ pickedCenter, activatePickmode, closeCenterPicker }) {\r\n    return (\r\n        <ConfirmWrap className=\"Confirm\">\r\n            <ConfirmWindow>\r\n                <p>연구소 위치와 배율을 결정할까요?</p>\r\n                <p><strong>위도 </strong>{pickedCenter.lat}</p>\r\n                <p><strong>경도 </strong>{pickedCenter.lng}</p>\r\n                <p><strong>지도 기본배율 </strong>{pickedCenter.zoom}</p>\r\n\r\n                <Button onClick={e => closeCenterPicker(true)} type=\"primary\">좋아요!</Button>\r\n                <Button onClick={activatePickmode} style={{ marginLeft: \"8px\" }}>다시!</Button>\r\n            </ConfirmWindow>\r\n        </ConfirmWrap>\r\n    );\r\n}\r\n\r\n// style ========================================================\r\nconst ConfirmWrap = styled.div`\r\n    \r\n    `;\r\n\r\nconst ConfirmWindow = styled.div`\r\n    position : fixed;\r\n    top : calc(50% + 48px);\r\n    left : 50%;\r\n    transform: translateX( -50% );\r\n    padding : 24px 48px;\r\n\r\n    background-color : white;\r\n    box-shadow : 0px 5px 15px 0px #BCBCBC;\r\n\r\n    @media(max-width:768px){\r\n        width : 80%;\r\n    }\r\n    `;\r\n\r\n// const TransparentBackdrop = styled.div`\r\n//     position : fixed;\r\n//     top : 0; \r\n//     left : 0;\r\n\r\n//     width : 100%;\r\n//     height : 100%;\r\n\r\n//     background-color : rgba(0,0,0,0);\r\n//     `;","// [경고] 임시적인 사용자설정 보관소 - 나중에 다른 방법으로 대체필요\r\n// prettier-ignore\r\nexport default function DataStorage (key) {\r\n    const data = {\r\n        NYAM_TYPES : {\r\n            korea : \"한식\",\r\n            china : \"중식\",\r\n            japan : \"일식\",\r\n            asian : \"아시안\",\r\n            schoolfood : \"분식\",\r\n            fastfood : \"패스트푸드\",\r\n            cafe : \"카페\",\r\n            bakery : \"베이커리\",\r\n            pub : \"술집\",\r\n            cvs : \"편의점\",\r\n        }, \r\n        NYAM_TYPES_KEY : [\"korea\", \"china\", \"japan\", \"fastfood\", \"cvs\", \"cafe\", \"asian\", \"schoolfood\", \"bakery\", \"pub\"],\r\n        CREATE_NEWLAB_MOVEIN : \"https://script.google.com/macros/s/AKfycbxOcOe80qpz4OEBtZQAUvglvTHhidWRtvWJocxnRnCQf7L-qhKJe4iGrU3gFsUIO-zhAQ/exec\",\r\n        CREATE_NEWLAB_CONSTRUCT : \"\",\r\n        ACCESS_MANAGER : \"https://script.google.com/macros/s/AKfycbw6AGu6_jOF9XXuI5F4z-Qh4JH3xgtopAioBhlHuyKKHCJ4balXR1UqRWd6fRtyicc44w/exec\",\r\n        ROUTE_MANAGER : \"https://script.google.com/macros/s/AKfycbyOHtCkG4cwHLFZ6YdwyVBgsc0ZU10qBQGw1KST0aFUFUbQDFdRBEljknpH_qq4j0f00A/exec\",\r\n        MAP_SOURCE: \"https://openapi.map.naver.com/openapi/v3/maps.js?ncpClientId=ont9t74d67\",\r\n        \r\n        SEND_CHECK_MAIL : \"https://script.google.com/macros/s/AKfycby3U6PeqsWBGPGaamO8FfgR2mpqr0CjYVocCaU1T6eDWmnUF0QgY_rYRl3hU2CMk5YIRQ/exec\",\r\n    }\r\n    \r\n    return data[key];\r\n}\r\n","// imported Modules =============================================\r\nimport { React, useState, useEffect } from 'react';\r\n\r\nimport styled from 'styled-components';\r\nimport { Input, Button, Modal, message } from 'antd';\r\n\r\nimport ScriptTag from 'react-script-tag';\r\n\r\n// imported components ==========================================\r\nimport Confirm from '../../../../ShareComponents/atoms/Confirm';\r\n\r\n// Main Component ===============================================\r\nimport DataStorage from '../../../../DataStorage.js';\r\nconst MAP_SOURCE = DataStorage('MAP_SOURCE');\r\n\r\nlet map = null;\r\nlet centerMarker = null;\r\n\r\nconst CENTER_INIT_VALUE = {\r\n    lat: null,\r\n    lng: null,\r\n    zoom: null,\r\n};\r\n\r\nconst CENTER_DEFAULT_VALUE = {\r\n    lat: 37.5250000,\r\n    lng: 127.0016985,\r\n    zoom: 13,\r\n};\r\n\r\nexport default function CenterPicker({ centerPickerVisible, setCenterPickerVisible, currentCenter, setCurrentCenter }) {\r\n    const [pickedCenter, setPickedCenter] = useState(CENTER_INIT_VALUE);\r\n    const [isPickmode, setIsPickmode] = useState(true);\r\n\r\n    const [isLoadedPickedCenter, setIsLoadedPickedCenter] = useState(false);\r\n    const [isLoadedMaps, setIsLoadedMaps] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (centerPickerVisible) {\r\n            if (containsNull(currentCenter)) {\r\n                setPickedCenter(CENTER_DEFAULT_VALUE);\r\n            } else {\r\n                setPickedCenter(currentCenter);\r\n            }\r\n            setIsLoadedPickedCenter(true);\r\n        }\r\n    }, [centerPickerVisible])\r\n\r\n    useEffect(() => {\r\n        if (isLoadedPickedCenter && isLoadedMaps) {\r\n            const mapOptions = {\r\n                center: new window.naver.maps.LatLng(pickedCenter.lat, pickedCenter.lng),\r\n                zoom: pickedCenter.zoom,\r\n            };\r\n            map = new window.naver.maps.Map('map', mapOptions);\r\n\r\n            /*const zoomListener =*/ window.naver.maps.Event.addListener(map, 'zoom_changed', function (e) {\r\n                setPickedCenter({ ...pickedCenter, zoom: map.getZoom(), });\r\n            });\r\n\r\n            activatePickmode();\r\n        }\r\n    }, [isLoadedMaps, isLoadedPickedCenter])\r\n\r\n    function activatePickmode() {\r\n        setIsPickmode(true);\r\n\r\n        if (centerMarker) { centerMarker.setMap(null); }\r\n        map.setOptions('draggable', true);\r\n        map.setOptions('zoomOrigin', null);\r\n        \r\n        map.setCursor('Crosshair');\r\n        const pickListener = window.naver.maps.Event.addListener(map, 'click', function (e) {\r\n            const center = {\r\n                lat: e.coord.y,\r\n                lng: e.coord.x,\r\n                zoom: map.getZoom(),\r\n            };\r\n            setPickedCenter(center);\r\n\r\n            centerMarker = new window.naver.maps.Marker({\r\n                position: new window.naver.maps.LatLng(center.lat, center.lng),\r\n                map: map,\r\n                icon: {\r\n                    url: `img/icons/svg/center.svg`,\r\n                    size: new window.naver.maps.Size(48, 48),\r\n                    origin: new window.naver.maps.Point(0, 0),\r\n                    anchor: new window.naver.maps.Point(24, 24),\r\n                }\r\n            });\r\n\r\n            const position = new window.naver.maps.LatLng(center.lat, center.lng);\r\n            map.panTo(position);\r\n            deactivatePickmode(pickListener, position);\r\n        });\r\n        message.destroy();\r\n        message.info('연구소의 위치를 선택해주세요');\r\n    }\r\n\r\n    function deactivatePickmode(pickListener, position) {\r\n        setIsPickmode(false);\r\n\r\n        map.setOptions('draggable', false);\r\n        map.setOptions('zoomOrigin', position);\r\n        map.setCursor('Move');\r\n        window.naver.maps.Event.removeListener(pickListener);\r\n    }\r\n\r\n    function closeCenterPicker(isConfirmed) {\r\n        if (isConfirmed) {\r\n            setCurrentCenter(pickedCenter);\r\n        }\r\n        map.destroy();\r\n        setCenterPickerVisible(false);\r\n    }\r\n\r\n    return (\r\n        <CenterPickerWrap className=\"CenterPicker\">\r\n            <Backdrop onClick={e => closeCenterPicker(false)} />\r\n\r\n            <ScriptTag type=\"text/javascript\" src={MAP_SOURCE} onLoad={() => { setIsLoadedMaps(true); }} />\r\n            <Map id=\"map\"></Map>\r\n            {\r\n                !isPickmode\r\n                    ? <Confirm pickedCenter={pickedCenter} activatePickmode={activatePickmode} closeCenterPicker={closeCenterPicker} />\r\n                    : null\r\n            }\r\n        </CenterPickerWrap>\r\n    );\r\n}\r\n\r\n// style ========================================================\r\nconst CenterPickerWrap = styled.div`\r\n    position : absolute;\r\n    top : 0; \r\n    left : 0;\r\n    width : 100vw;\r\n    height : 100vh;  \r\n    \r\n    display : flex;\r\n    justify-content : center;\r\n    align-items : center;\r\n    `;\r\n\r\nconst Map = styled.div`\r\n    position : fixed !important;\r\n    top : 10%; \r\n    left : 5%;\r\n    width : 90%;\r\n    height : 80%;\r\n    `;\r\n\r\nconst Backdrop = styled.div`\r\n    position : fixed;\r\n    top : 0; \r\n    left : 0;\r\n\r\n    width : 100%;\r\n    height : 100%;\r\n\r\n    background-color : rgba(0,0,0, 0.75);\r\n    `;\r\n\r\n// function =====================================================\r\nfunction containsNull(obj) {\r\n    const keys = Object.keys(obj);\r\n    let isContains = false;\r\n\r\n    for (let key of keys) {\r\n        if (!obj[key]) {\r\n            isContains = true;\r\n            break;\r\n        }\r\n    }\r\n\r\n    return isContains;\r\n}","// imported Modules =============================================\r\nimport { React, useState, useEffect } from 'react';\r\n\r\nimport axios from 'axios';\r\n\r\nimport styled from 'styled-components';\r\nimport { Input, Button, Divider, Select, message } from 'antd';\r\nimport { LeftOutlined } from '@ant-design/icons';\r\n\r\n// imported components ==========================================\r\nimport Loading from '../../../../ShareComponents/atoms/Loading';\r\n\r\nimport CenterPicker from './CenterPicker';\r\n\r\n// Main Component ===============================================\r\nimport DataStorage from '../../../../DataStorage';\r\nconst SEND_CHECK_MAIL = DataStorage('SEND_CHECK_MAIL');\r\nconst ROUTE_MANAGER = DataStorage('ROUTE_MANAGER');\r\nconst CREATE_NEWLAB_MOVEIN = DataStorage('CREATE_NEWLAB_MOVEIN');\r\n\r\nconst FORMDATA_INIT_VALUE = {\r\n    labName: null,\r\n    lat: null,\r\n    lng: null,\r\n    zoom: null,\r\n    customIcon: false,\r\n    defaultPermission: null,\r\n    routePw: null,\r\n    captainEmail: null,\r\n    captainPw: null\r\n}\r\n\r\nconst IS_VALIDATED_INIT_VALUE = {\r\n    all: false,\r\n    labName: false,\r\n    captainEmail: false,\r\n}\r\n\r\nexport default function Movein({ setCurrentContent, contentsIndex, setLabCreatorVisible }) {\r\n    const [formData, setFormData] = useState(FORMDATA_INIT_VALUE);\r\n    const [isValidated, setIsValidated] = useState(IS_VALIDATED_INIT_VALUE);\r\n    const [btnLoading, setBtnLoading] = useState(IS_VALIDATED_INIT_VALUE);\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    const [centerPickerVisible, setCenterPickerVisible] = useState(false);\r\n    const [currentCenter, setCurrentCenter] = useState(null);\r\n\r\n    useEffect(() => {\r\n        if (currentCenter) {\r\n            setFormData({\r\n                ...formData,\r\n                lat: currentCenter.lat,\r\n                lng: currentCenter.lng,\r\n                zoom: currentCenter.zoom,\r\n            });\r\n        }\r\n\r\n    }, [currentCenter]);\r\n\r\n    function onChangeForm(target, value) {\r\n        setFormData({ ...formData, [target]: value });\r\n    }\r\n\r\n    async function validate(e) {\r\n        // target 정하기\r\n        let target;\r\n        if (e.target.name) {\r\n            target = e.target.name\r\n        } else { // 버튼 내부의 글씨가 선택된 경우, 부모의 name받아오기\r\n            target = e.target.parentNode.name\r\n        }\r\n\r\n        // target별 검증하기 : all, captainEmail, labName\r\n        if (target === 'all') {\r\n            let returnValue = true;\r\n\r\n            for (let key of Object.keys(formData)) {\r\n                if (formData[key] === null || formData[key] === '') {\r\n                    message.warn('비어있는 곳을 채워주세요');\r\n                    setIsValidated({ ...isValidated, all: true });\r\n                    break;\r\n                }\r\n            }\r\n\r\n            for (let key of Object.keys(isValidated)) {\r\n                if (isValidated[key] === false) {\r\n                    message.warn('대장이메일 또는 연구소이름을 확인해주세요');\r\n                    setIsValidated({ ...isValidated, all: true });\r\n                    break;\r\n                }\r\n            }\r\n            \r\n            return returnValue;\r\n        } else if (target === 'captainEmail') {\r\n            setBtnLoading({ ...btnLoading, captainEmail: true });\r\n            const { data } = await axios.post(SEND_CHECK_MAIL, JSON.stringify({ captainEmail: formData.captainEmail }));\r\n            if (data.status === 'success') {\r\n                setIsValidated({ ...isValidated, captainEmail: true });\r\n                message.info('확인메일을 보내드렸어요. 메일함을 꼭 확인해주세요!');\r\n            } else {\r\n                message.error('문제가 생겨 메일을 보내지 못했습니다.');\r\n                console.error(data);\r\n            }\r\n            setBtnLoading({ ...btnLoading, captainEmail: false });\r\n        } else if (target === 'labName') {\r\n            setBtnLoading({ ...btnLoading, labName: true });\r\n\r\n            if (await isAvailableLabName(formData.labName)) {\r\n                setIsValidated({ ...isValidated, labName: true });\r\n                message.success('사용 가능한 연구소 이름입니다');\r\n            } else {\r\n                message.error('사용할 수 없는 연구소 이름입니다');\r\n            }\r\n            setBtnLoading({ ...btnLoading, labName: false });\r\n        } else {\r\n            console.error('예상하지 못한 검증요청');\r\n        }\r\n    }\r\n\r\n    function pickCenter() {\r\n        setCurrentCenter({\r\n            lat: formData.lat,\r\n            lng: formData.lng,\r\n            zoom: formData.zoom,\r\n        });\r\n        setCenterPickerVisible(true);\r\n    }\r\n\r\n    async function onSubmit() {\r\n        setIsLoading(true);\r\n\r\n        const target = { target: { name: 'all' }};\r\n        await validate(target);\r\n\r\n        if (isValidated.all) {\r\n            message.success('새 연구소를 열심히 준비하고있어요!', 0);\r\n\r\n            const { data: { data, status } } = await axios.post(CREATE_NEWLAB_MOVEIN, JSON.stringify(formData));\r\n            message.destroy();\r\n            setIsLoading(false);\r\n\r\n            if (status === 'success') {\r\n                setCurrentContent(contentsIndex.selectType);\r\n                setLabCreatorVisible(false);\r\n                message.success('새로운 연구소가 성공적으로 생성되었습니다');\r\n            } else {\r\n                message.error('무언가 잘못되었습니다');\r\n                console.error(data);\r\n            }\r\n        } else {\r\n            setIsLoading(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <MoveinWrap className=\"Movein\">\r\n            <Button onClick={e => setCurrentContent(contentsIndex.selectType)} shape=\"circle\" icon={<LeftOutlined />}></Button>\r\n            <ContentWrap>\r\n                <h2>🏢 입주</h2>\r\n                <p>몇 가지 사전정보를 알려주시면 바로 입주하실 수 있도록 도와드릴게요 👋</p>\r\n\r\n                <Divider>대장 정보</Divider>\r\n                <MultiInput>\r\n                    <StyledInput placeholder=\"대장님의 구글계정 Email\" name=\"captainEmail\" value={formData.captainEmail} onChange={e => onChangeForm(e.target.name, e.target.value)} \r\n                        disabled={btnLoading.captainEmail || isValidated.captainEmail}\r\n                    />\r\n\r\n                    {\r\n                        isValidated.captainEmail\r\n                            ? <Button name=\"captainEmail\" onClick={e => setIsValidated({ ...isValidated, captainEmail: false })}>수정</Button>\r\n                            : <Button name=\"captainEmail\" loading={btnLoading.captainEmail} onClick={validate}>확인</Button>\r\n                    }\r\n                </MultiInput>\r\n\r\n                <StyledPwInput placeholder=\"연구소 관리 비밀번호\" name=\"captainPw\" value={formData.captainPw} onChange={e => onChangeForm(e.target.name, e.target.value)} />\r\n\r\n                <Divider>연구소 정보</Divider>\r\n                <MultiInput>\r\n                    <StyledInput placeholder=\"연구소 이름\" name=\"labName\" value={formData.labName} onChange={e => onChangeForm(e.target.name, e.target.value)} \r\n                        disabled={btnLoading.labName || isValidated.labName} \r\n                    />\r\n                    {\r\n                        isValidated.labName\r\n                            ? <Button name=\"labName\" onClick={e => setIsValidated({ ...isValidated, labName: false })}>수정</Button>\r\n                            : <Button name=\"labName\" loading={btnLoading.labName} onClick={validate}>확인</Button>\r\n                    }\r\n                </MultiInput>\r\n\r\n                <StyledPwInput placeholder=\"연구소 출입 비밀번호\" name=\"routePw\" value={formData.routePw} onChange={e => onChangeForm(e.target.name, e.target.value)} />\r\n                <MultiInput>\r\n                    <StyledInput disabled placeholder=\"연구소 위도\" name=\"lat\" value={formData.lat} />\r\n                    <StyledInput disabled placeholder=\"연구소 경도\" name=\"lng\" value={formData.lng} />\r\n                    <StyledInput disabled placeholder=\"지도 기본배율\" name=\"zoom\" value={formData.zoom} />\r\n                    <Button onClick={pickCenter}>수정</Button>\r\n                </MultiInput>\r\n\r\n\r\n                <Select placeholder=\"연구소 기본 권한\" name=\"defaultPermission\" value={formData.defaultPermission} onChange={value => onChangeForm('defaultPermission', value)}>\r\n                    <Select.Option value={'viewer'} key={0}>열람 가능</Select.Option>\r\n                    <Select.Option value={'editor'} key={1}>편집 가능</Select.Option>\r\n                </Select>\r\n\r\n                <Divider />\r\n                <Button onClick={onSubmit}>입주하기</Button>\r\n            </ContentWrap>\r\n\r\n            {\r\n                centerPickerVisible\r\n                    ? <CenterPicker\r\n                        centerPickerVisible={centerPickerVisible} setCenterPickerVisible={setCenterPickerVisible}\r\n                        currentCenter={currentCenter} setCurrentCenter={setCurrentCenter}\r\n                    />\r\n                    : null\r\n            }\r\n\r\n            <Loading isLoading={isLoading} />\r\n\r\n        </MoveinWrap>\r\n    );\r\n}\r\n\r\n// style ========================================================\r\nconst MoveinWrap = styled.div`\r\n\r\n    `;\r\n\r\nconst ContentWrap = styled.div`\r\n    display : flex;\r\n    flex-direction : column;\r\n    justify-content : center;\r\n    align-items : stretch;\r\n    height : 100%;\r\n    `;\r\n\r\nconst MultiInput = styled.div`\r\n    display : flex;\r\n\r\n    & > input {\r\n        margin-right : 4px;\r\n    }\r\n    & > .no-margin {\r\n        margin-right : 0;\r\n    }\r\n    `;\r\n\r\nconst StyledInput = styled(Input)`\r\n    margin-bottom : 4px;\r\n    `;\r\nconst StyledPwInput = styled(Input.Password)`\r\n    margin-bottom : 4px;\r\n    `;\r\n\r\n// function =====================================================\r\nasync function isAvailableLabName(labName) {\r\n    let isAvailable = true;\r\n\r\n\r\n\r\n    if (labName === '' || labName === null) {\r\n        isAvailable = false;\r\n    } else if (containsOnlySpace(labName)) {\r\n        isAvailable = false;\r\n    } else {\r\n        const { data } = await axios.get(`${ROUTE_MANAGER}?labName=${labName}`); // 연구소 이름이 중복되는지 여부\r\n        console.log(data);\r\n        const isUnique = data.data;\r\n        if (!isUnique) { isAvailable = false; }\r\n    }\r\n\r\n    return isAvailable;\r\n}\r\n\r\nfunction containsOnlySpace(str) {\r\n    let res = true;\r\n\r\n    for (let i = 0; i < str.length; i++) {\r\n        if (str != ' ') {\r\n            res = false;\r\n            break;\r\n        }\r\n    }\r\n\r\n    return res;\r\n}","// imported Modules =============================================\r\nimport { React, useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Input, Button } from 'antd';\r\nimport {LeftOutlined} from '@ant-design/icons';\r\n// imported components ==========================================\r\n// *\r\n\r\n// Main Component ===============================================\r\nexport default function Construct({ setCurrentContent, contentsIndex }) {\r\n    return (\r\n        <ConstructWrap className=\"Construct\">\r\n            <Button onClick={e => setCurrentContent(contentsIndex.selectType)} shape=\"circle\" icon={<LeftOutlined />}></Button>\r\n            <ContentWrap>\r\n                <h2>건설</h2>\r\n            </ContentWrap>\r\n        </ConstructWrap>\r\n    );\r\n}\r\n\r\n// style ========================================================\r\nconst ConstructWrap = styled.div`\r\n\r\n    `;\r\n    \r\nconst ContentWrap = styled.div`\r\n    display : flex;\r\n    flex-direction : column;\r\n    justify-content : center;\r\n    align-items : center;\r\n\r\n    height : 100%;\r\n    `;\r\n// function =====================================================\r\n// *","// imported Modules =============================================\r\nimport { React, useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport { Drawer } from 'antd';\r\n\r\n// imported components ==========================================\r\nimport SelectType from './drawerContents/SelectType';\r\nimport Movein from './drawerContents/Movein';\r\nimport Construct from './drawerContents/Construct';\r\n\r\n// Main Component ===============================================\r\nconst contentsIndex = {\r\n    selectType: 'selectType',\r\n    movein: 'movein',\r\n    construct: 'construct'\r\n};\r\n\r\nexport default function LabCreator({ labCreatorVisible, setLabCreatorVisible }) {\r\n    const [currentContent, setCurrentContent] = useState(contentsIndex.selectType);\r\n\r\n    const contentsProps = {\r\n        setCurrentContent : setCurrentContent, \r\n        contentsIndex : contentsIndex, \r\n        setLabCreatorVisible : setLabCreatorVisible,\r\n    };\r\n\r\n    return (\r\n        <LabCreatorWrap className=\"LabCreator\">\r\n            <Drawer\r\n                title={null}\r\n                placement=\"right\"\r\n                closable={false}\r\n                width={window.innerWidth > 768 ? '50%' : '90%'}\r\n                onClose={e => setLabCreatorVisible(false)}\r\n                visible={labCreatorVisible}\r\n            >\r\n                {\r\n                    (() => {\r\n                        switch(currentContent){\r\n                            case contentsIndex.selectType:\r\n                                return <SelectType {...contentsProps} />;\r\n                            case contentsIndex.movein:\r\n                                return <Movein {...contentsProps} />;\r\n                            case contentsIndex.construct:\r\n                                return <Construct {...contentsProps} />\r\n                            default :\r\n                                return <h1>무언가 잘못되었습니다</h1>\r\n                        }\r\n                    })()   \r\n                }\r\n            </Drawer>\r\n        </LabCreatorWrap>\r\n    );\r\n}\r\n\r\n// style ========================================================\r\nconst LabCreatorWrap = styled.div`\r\n    width : 100%;\r\n    `;\r\n\r\n\r\nconst ContentWrap = styled.div`\r\n    display : flex;\r\n    flex-direction : column;\r\n    justify-content : center;\r\n    align-items : center;\r\n\r\n    height : 100%;\r\n    `;\r\n\r\n// function =====================================================\r\n// *\r\n","// imported Modules =============================================\r\nimport { React, useState, useEffect } from \"react\";\r\nimport { routes, Navigate } from \"react-router-dom\";\r\n\r\nimport styled from \"styled-components\";\r\nimport { Input, Button, Menu, message } from \"antd\";\r\nimport { SearchOutlined } from \"@ant-design/icons\";\r\n\r\nimport axios from \"axios\";\r\n\r\n// imported components ==========================================\r\n\r\n// Main Component ===============================================\r\nimport DataStorage from \"../DataStorage\";\r\nconst ACCESS_MANAGER = DataStorage(\"ACCESS_MANAGER\");\r\nconst ROUTE_MANAGER = DataStorage(\"ROUTE_MANAGER\");\r\n\r\nconst FIND_OPTION = { route: 0, manual: 1 };\r\nconst PLACE_HOLDER = [\r\n  { first: \"연구소 이름을 알려주세요\", second: \"출입 비밀번호를 알려주세요\" },\r\n  { first: \"연구소 ID를 알려주세요\", second: \"연구소 접근제어장치 주소를 알려주세요\" },\r\n];\r\n\r\nexport default function LabFinder({ setIsLoading }) {\r\n  const [isReady, setIsReady] = useState(false); // app으로 라우팅할 준비가 되었는지\r\n  const [labAccessInfo, setLabAccessInfo] = useState(null); // labId, accessManagerUrl\r\n\r\n  const [findOption, setFindOption] = useState(FIND_OPTION.route); // route, manual.\r\n\r\n  const [firstInput, setFirstInput] = useState(\"\");\r\n  const [secondInput, setSecondInput] = useState(\"\");\r\n\r\n  // ▼ 데이터 연구소 접속을 위한 임시 기능 !! 데이터 연구소 접속을 위한 임시 기능 !! 데이터 연구소 접속을 위한 임시 기능 !!\r\n  const [TEMP_DATALAB_AUTOACCESS, SET_TEMP_DATALAB_AUTOACCESS] = useState(false);\r\n  // ▲ 데이터 연구소 접속을 위한 임시 기능 !! 데이터 연구소 접속을 위한 임시 기능 !! 데이터 연구소 접속을 위한 임시 기능 !! ▲\r\n\r\n  useEffect(() => {\r\n    if (labAccessInfo) {\r\n      setIsReady(true);\r\n    }\r\n  }, [labAccessInfo]);\r\n\r\n  // ▼ 데이터 연구소 접속을 위한 임시 기능 !! 데이터 연구소 접속을 위한 임시 기능 !! 데이터 연구소 접속을 위한 임시 기능 !! ▼\r\n  useEffect(() => {\r\n    if (TEMP_DATALAB_AUTOACCESS === true && firstInput === \"데이터연구소\") {\r\n      onSubmit();\r\n    }\r\n  }, [firstInput]);\r\n  // ▲ 데이터 연구소 접속을 위한 임시 기능 !! 데이터 연구소 접속을 위한 임시 기능 !! 데이터 연구소 접속을 위한 임시 기능 !! ▲\r\n\r\n  async function onSubmit(e) {\r\n    switch (findOption) {\r\n      case FIND_OPTION.route:\r\n        setIsLoading(true);\r\n        const postData = {\r\n          taskType: \"doRoute\",\r\n          data: {\r\n            labName: firstInput,\r\n            routePw: secondInput,\r\n          },\r\n        };\r\n        const {\r\n          data: { status, data },\r\n        } = await axios.post(ROUTE_MANAGER, JSON.stringify(postData));\r\n\r\n        if (status === \"success\") {\r\n          setLabAccessInfo({\r\n            labId: data,\r\n            accessManagerUrl: ACCESS_MANAGER,\r\n          });\r\n          message.destroy();\r\n          message.success(\"연구소로 달려가고있어요!\");\r\n        } else {\r\n          console.log(\"에러!!에러!!!에러!!!\");\r\n          message.error({\r\n            content: \"앗.. 연구소를 찾지 못했어요...\",\r\n            duration: 0,\r\n            key: \"LabFinder_01\",\r\n            onClick: (e) => {\r\n              message.destroy(\"LabFinder_01\");\r\n            },\r\n          });\r\n        }\r\n\r\n        setIsLoading(false);\r\n        break;\r\n\r\n      case FIND_OPTION.manual:\r\n        break;\r\n      default:\r\n        console.error(\"예상하지 못한 FIND_OPTION입니다\");\r\n    }\r\n  }\r\n\r\n  return isReady ? (\r\n    <routes>\r\n      <Navigate\r\n        to={{\r\n          pathname: \"/app\",\r\n          state: labAccessInfo,\r\n        }}\r\n      />\r\n    </routes>\r\n  ) : (\r\n    <LabFinderWrap className=\"LabFinder\">\r\n      <SelectMenu\r\n        onClick={(e) => {\r\n          setFindOption(parseInt(e.key));\r\n        }}\r\n        selectedKeys={`${findOption}`}\r\n        mode=\"horizontal\"\r\n      >\r\n        <SelectItem key={`${FIND_OPTION.route}`}>이름으로 찾기</SelectItem>\r\n        <SelectItem disabled key={`${FIND_OPTION.manual}`}>\r\n          직접 찾기\r\n        </SelectItem>\r\n      </SelectMenu>\r\n      <FinderForm>\r\n        <FinderInput\r\n          placeholder={PLACE_HOLDER[findOption].first}\r\n          size=\"large\"\r\n          value={firstInput}\r\n          onChange={(e) => {\r\n            setFirstInput(e.target.value);\r\n          }}\r\n          onPressEnter={onSubmit}\r\n        />\r\n        <FinderInputPw\r\n          placeholder={PLACE_HOLDER[findOption].second}\r\n          size=\"large\"\r\n          type=\"password\"\r\n          value={secondInput}\r\n          onChange={(e) => {\r\n            setSecondInput(e.target.value);\r\n          }}\r\n          onPressEnter={onSubmit}\r\n        />\r\n        <FinderButton icon={<SearchOutlined />} size=\"large\" onClick={onSubmit}>\r\n          연구소 찾기\r\n        </FinderButton>\r\n\r\n        {/* ▼ 데이터 연구소 접속을 위한 임시 기능 !! 데이터 연구소 접속을 위한 임시 기능 !! 데이터 연구소 접속을 위한 임시 기능 !! ▼  */}\r\n        <FinderButton\r\n          type=\"primary\"\r\n          size=\"large\"\r\n          style={{ marginTop: \"16px\" }}\r\n          onClick={(e) => {\r\n            setFirstInput(\"데이터연구소\");\r\n            SET_TEMP_DATALAB_AUTOACCESS(true);\r\n          }}\r\n        >\r\n          데이터연구소 지도 보기(임시)\r\n        </FinderButton>\r\n        {/* ▲ 데이터 연구소 접속을 위한 임시 기능 !! 데이터 연구소 접속을 위한 임시 기능 !! 데이터 연구소 접속을 위한 임시 기능 !! ▲  */}\r\n      </FinderForm>\r\n    </LabFinderWrap>\r\n  );\r\n}\r\n\r\n// style ========================================================\r\nconst LabFinderWrap = styled.div`\r\n  display: flex;\r\n\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  margin-bottom: 32px;\r\n  width: 80%;\r\n`;\r\n\r\nconst SelectMenu = styled(Menu)`\r\n  border: none;\r\n  padding: 0px 8px;\r\n  margin-bottom: 16px;\r\n  background-color: #333333;\r\n`;\r\n\r\nconst SelectItem = styled(Menu.Item)`\r\n  color: white;\r\n`;\r\n\r\nconst FinderForm = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: flex-end;\r\n\r\n  width: 350px;\r\n\r\n  @media (max-width: 768px) {\r\n    width: 90%;\r\n  }\r\n`;\r\n\r\nconst FinderInput = styled(Input)`\r\n  width: 100%;\r\n  margin-bottom: 16px;\r\n\r\n  border-radius: 24px;\r\n\r\n  border-color: white;\r\n  &:hover {\r\n    border-color: white;\r\n  }\r\n  &:focus {\r\n    border-color: white;\r\n  }\r\n`;\r\n\r\nconst FinderInputPw = styled(Input.Password)`\r\n  width: 100%;\r\n  margin-bottom: 16px;\r\n\r\n  border-radius: 24px;\r\n\r\n  border-color: white;\r\n  &:hover {\r\n    border-color: white;\r\n  }\r\n  &:focus {\r\n    border-color: white;\r\n  }\r\n`;\r\n\r\nconst FinderButton = styled(Button)`\r\n  width: 100%;\r\n  border-radius: 24px;\r\n`;\r\n\r\n// const FindHistory = styled.div`\r\n//     display : flex;\r\n//     justify-content : flex-start;\r\n//     `;\r\n// const HistoryItem = styled.span`\r\n//     padding : 4px 8px;\r\n//     border-radius : 24px;\r\n//     background-color : #FFFFFF;\r\n//     color : #333333;\r\n//     `;\r\n\r\n// function =====================================================\r\n// *\r\n","// imported Modules =============================================\r\nimport { React } from 'react';\r\nimport styled from 'styled-components';\r\n\r\n// imported components ==========================================\r\n// *\r\n\r\n// Main Component ===============================================\r\nexport default function Footer () {\r\n    return (\r\n        <FooterWrap className=\"Footer\">\r\n            <Group>\r\n                <Item><strong>냠냠랩 </strong> 조직 내부의 냠냠거리 공유 서비스</Item>\r\n                <Item><strong>Contact </strong> goranimaster17@gmail.com</Item>\r\n            </Group>\r\n        </FooterWrap>\r\n    );\r\n}\r\n\r\n// style ========================================================\r\nconst FooterWrap = styled.div`\r\n    display : flex;\r\n    \r\n    justify-content : flex-end;\r\n\r\n    width : 100%;\r\n    padding : 10px 20px;\r\n\r\n    border-top : 1px solid #525252;\r\n    background-color : #333333;\r\n    color : #a1a1a1;\r\n    `; \r\n\r\nconst Group = styled.div`\r\n\r\n    `;\r\n\r\nconst Item = styled.p`\r\n    margin : 0;\r\n    `;\r\n\r\n// function =====================================================\r\n// *","export default __webpack_public_path__ + \"static/media/logo.30ac0175.svg\";","// imported Modules =============================================\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nimport { Button, notification } from 'antd';\r\nimport { GithubOutlined } from \"@ant-design/icons\"\r\nimport styled from 'styled-components';\r\n\r\n// imported components ==========================================\r\nimport LabCreator from \"./components/LabCreator/LabCreator\";\r\nimport LabFinder from \"./LabFinder\";\r\nimport Loading from \"../ShareComponents/atoms/Loading\";\r\nimport Footer from \"../ShareComponents/atoms/Footer\";\r\n\r\n// Main Component ===============================================\r\n\r\nimport LogoImage from \"../logo.svg\";\r\nexport default function Home() {\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [labCreatorVisible, setLabCreatorVisible] = useState(false);\r\n\r\n    return (\r\n        <HomeWrap className=\"Home\">\r\n            <MainSection>\r\n                <Header>\r\n                    <Button onClick={e => setLabCreatorVisible(true)} style={{ borderRadius: '16px', marginRight: '12px' }}>\r\n                        연구소 만들기\r\n                    </Button>\r\n                    <a href=\"https://github.com/wonjinYi/NyamNyamLab\" target=\"_blank\">\r\n                        <Button shape=\"circle\" icon={<GithubOutlined />} />\r\n                    </a>\r\n                </Header>\r\n                <Contents>\r\n                    <Logo>\r\n                        <img src={LogoImage} alt=\"nyamnyamlab logo\" />\r\n                        <LogoText>냠냠랩</LogoText>\r\n                    </Logo>\r\n                    <LabFinder setIsLoading={setIsLoading} />\r\n                </Contents>\r\n            </MainSection>\r\n            <LabCreator labCreatorVisible={labCreatorVisible} setLabCreatorVisible={setLabCreatorVisible} />\r\n            \r\n            <DetailSection>\r\n                <h1 style={{ margin: '200px 0', textAlign: 'center' }}>\r\n                    소개가 들어갈 공간\r\n                </h1>\r\n            </DetailSection>\r\n\r\n            <Footer />\r\n            <Loading isLoading={isLoading} />\r\n        </HomeWrap>\r\n    );\r\n}\r\n\r\n// style ========================================================\r\nconst HomeWrap = styled.div`\r\n    width : 100%;\r\n    `;\r\n\r\nconst MainSection = styled.div`\r\n    display : flex;\r\n    flex-direction : column;\r\n    height : 100vh;\r\n\r\n    background-color : #333333;\r\n    color : #FFFFFF;\r\n    `;\r\n\r\nconst Header = styled.div`\r\n    display : flex;\r\n    justify-content : flex-end;\r\n    margin : 12px;\r\n    `;\r\n\r\nconst Contents = styled.div`\r\n    display : flex;\r\n    flex : 1;\r\n    flex-direction : column;\r\n    justify-content : center;\r\n    align-items : center;\r\n    `;\r\n\r\nconst Logo = styled.div`\r\n    display : flex;\r\n    justify-content : center;\r\n    align-items : center;\r\n\r\n    color : #FFFFFF;\r\n    `;\r\n\r\nconst LogoText = styled.h1`\r\n    margin : 0;\r\n    margin-left : 8px;\r\n    \r\n    font-size : 48px;\r\n    color : #FFFFFF;\r\n    font-family: 'Poor Story', cursive;\r\n    `;\r\n\r\nconst DetailSection = styled.div`\r\n\r\n`;\r\n// function =====================================================\r\n// *","export default __webpack_public_path__ + \"static/media/UpdateNoteRaw.dee434cc.md\";","// imported Modules =============================================\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Modal } from \"antd\";\r\nimport styled from 'styled-components';\r\nimport ReactMarkdown from 'react-markdown';\r\n\r\n// imported components ==========================================\r\n// *\r\n\r\n// Main Component ===============================================\r\nimport mdSource from \"./UpdateNoteRaw.md\";\r\n\r\nexport default function UpdateNote({ updateNoteModalVisible, setUpdateNoteModalVisible}) {\r\n    const [markdown, setMarkdown] = useState('');\r\n\r\n    useEffect( () => {\r\n        async function init() {\r\n            const str = await fetch(mdSource)\r\n            .then( res => res.text() );\r\n\r\n            setMarkdown(str);\r\n        }\r\n        init();\r\n    }, [markdown]);\r\n\r\n    return (\r\n        <UpdateNoteWrap className=\"UpdateNote\">\r\n            <Modal\r\n                title={\"업데이트 노트\"}\r\n                visible={updateNoteModalVisible}\r\n                onCancel={() => { setUpdateNoteModalVisible(false) }}\r\n                footer={null}\r\n                style={{minWidth:\"50%\"}}\r\n            >\r\n                <ReactMarkdown children={markdown} />\r\n            </Modal>\r\n        </UpdateNoteWrap>\r\n    );\r\n}\r\n\r\n// style ========================================================\r\nconst UpdateNoteWrap = styled.div`\r\n\r\n    `;\r\n\r\n// function =====================================================\r\n// *","// imported Modules =============================================\r\nimport { React, useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { Checkbox, Popover, Button, Tooltip } from \"antd\";\r\nimport { FilterOutlined, PlusOutlined, BookOutlined, SettingOutlined } from \"@ant-design/icons\"\r\nimport 'antd/dist/antd.css';\r\n\r\n// imported Components ==========================================\r\nimport UpdateNote from \"./UpdateNote\";\r\n\r\n/* ******************************************* */\r\n// [경고] 임시적인 사용자설정 보관소 - 나중에 다른 방법으로 대체필요\r\nimport DataStorage from \"../../../../DataStorage\"; \r\nconst NYAM_TYPES = DataStorage(\"NYAM_TYPES\");\r\nconst NYAM_TYPES_KEY = DataStorage(\"NYAM_TYPES_KEY\");\r\n// [경고] 임시적인 사용자설정 보관소 - 나중에 다른 방법으로 대체필요\r\n/* ******************************************* */\r\n\r\n// Main Component ===============================================\r\nexport default function Tools ({ setFilters, setIsPickmode, setNyamEditorTaskType }) {\r\n    const [checked, setChecked] = useState( initChecked(NYAM_TYPES_KEY) );\r\n    const [updateNoteModalVisible, setUpdateNoteModalVisible] = useState(false);\r\n\r\n    useEffect ( () => { \r\n        setFilters(checked); \r\n    }, [checked, setFilters]);\r\n\r\n    function onChange(e) { setChecked({ ...checked, [e.target.nyamType] : e.target.checked }) }\r\n\r\n    return (\r\n        <ToolsWrap className=\"Tools\">\r\n            <div className=\"LeftDiv\">\r\n                {/* 냠 필터링 */}\r\n                <Popover placement=\"bottom\" title={\"냠 필터링\"} content={filterContent(onChange, checked)} trigger=\"click\">\r\n                    <Tooltip title=\"냠 필터링\" placement=\"left\">\r\n                        <MenuButton shape=\"circle\" icon={<FilterOutlined />} />\r\n                    </Tooltip>\r\n                </Popover>\r\n\r\n                {/* 새로운 냠 */}\r\n                <Popover placement=\"bottom\" title={\"새로운 냠 만들기\"} content={createNyamContent} trigger=\"click\">\r\n                    <Tooltip title=\"새로운 냠\" placement=\"right\">\r\n                        <MenuButton shape=\"circle\" icon={<PlusOutlined />} style={{marginLeft:\"8px\"}} \r\n                            onClick={ () => { \r\n                                setNyamEditorTaskType(\"create\"); \r\n                                setIsPickmode(true); \r\n                            }} \r\n                        />\r\n                    </Tooltip>\r\n                </Popover>\r\n            </div>\r\n\r\n            <div className=\"RightDiv\" style={{marginLeft:\"auto\", display : 'flex'}} >\r\n                <Tooltip title=\"업데이트 노트\" placement=\"right\">\r\n                    <MenuButton shape=\"circle\" icon={<BookOutlined />}  onClick={ () => { setUpdateNoteModalVisible(true); }} />\r\n                    <UpdateNote updateNoteModalVisible={updateNoteModalVisible} setUpdateNoteModalVisible={setUpdateNoteModalVisible} />\r\n                </Tooltip>\r\n                <MenuButton shape=\"circle\" icon={<SettingOutlined />}  style={{marginLeft:\"8px\"}} disabled/>\r\n            </div>\r\n        </ToolsWrap>\r\n    );\r\n}\r\n\r\nfunction filterContent(onChange, checked) {\r\n    return (\r\n        <div className=\"filterContent\" styld={{display:\"flex\", flexDirection:\"column\"}}>\r\n        {\r\n            NYAM_TYPES_KEY.map( (type, index) => (\r\n                <div key={index}><Checkbox onChange={onChange} checked={checked[type]} nyamType={type}>{NYAM_TYPES[type]}</Checkbox></div>\r\n            ))\r\n        }\r\n        </div>\r\n    )\r\n}\r\n\r\nconst createNyamContent = (\r\n    <div>\r\n        <p style={{margin:\"0\"}}><strong>지도에서 새로운 남의 위치를 찍어주세요</strong></p>\r\n        {/* <p style={{margin:\"0\"}}>버튼을 다시누르면 '새로운 냠 만들기'가 취소됩니다</p> */}\r\n    </div>\r\n);\r\n    \r\n// style ========================================================\r\nconst ToolsWrap = styled.div`\r\n    display : flex;\r\n    flex : 1;\r\n\r\n    justify-contents : center;\r\n    align-items : center;\r\n\r\n    padding : 10px 10px;\r\n\r\n    background-color : #333333;\r\n    color : #FFFFFF;\r\n    `;\r\n\r\nconst MenuButton = styled(Button)`\r\n    border : 0;\r\n    `;\r\n\r\n// function =====================================================\r\nfunction initChecked(arr) {\r\n    let obj = {};\r\n    arr.forEach( el => {\r\n        obj[el] = true;\r\n    });\r\n\r\n    return obj;\r\n}","// imported Modules =============================================\r\nimport { React } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\n// imported components ==========================================\r\nimport Tools from \"./followers/Tools\";\r\n\r\n// imported etc resource ========================================\r\nimport LOGO_IMG from \"../../../logo.svg\";\r\n\r\n// Main Component ===============================================\r\nexport default function Header ({ setFilters, setIsPickmode, setNyamEditorTaskType }) {\r\n    return (\r\n        <HeaderWrap className=\"Header\">\r\n            <Link to={{ pathname:\"/\" }}>\r\n                <Logo>\r\n                    <LogoImg src={LOGO_IMG} alt=\"logo Image\"></LogoImg>\r\n                    <LogoText>냠냠랩</LogoText>\r\n                </Logo>\r\n            </Link>\r\n            <Tools setFilters={setFilters} setIsPickmode={setIsPickmode} setNyamEditorTaskType={setNyamEditorTaskType} />\r\n        </HeaderWrap>\r\n    );\r\n}\r\n\r\n// style ========================================================\r\nconst HeaderWrap = styled.div`\r\n    display : flex;\r\n    align-items : center;\r\n\r\n    padding : 10px 0px;\r\n\r\n    background-color : #333333;\r\n    color : #FFFFFF;\r\n    `;\r\n\r\nconst Logo = styled.div`\r\n    display : flex;\r\n    align-items : center;\r\n    justify-contents : center;\r\n    padding : 0px 10px;\r\n    `;\r\n\r\nconst LogoImg = styled.img`\r\n    width : 48px;\r\n    height : 48px;\r\n    `;\r\nconst LogoText = styled.h1`\r\n    margin : 0;\r\n    margin-left : 8px;\r\n    color : #FFFFFF;\r\n    font-family: 'Poor Story', cursive;\r\n    `;\r\n\r\n// function =====================================================\r\n// *","// imported Modules =============================================\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\n\r\n// imported components ==========================================\r\n// *\r\n\r\n// Main Component ===============================================\r\nexport default function ContentsTable({ desc, dataOrder, data }) {\r\n    // desc (문자열 Array) : thead에 표시할 텍스트를 차례로 나열한 문자열 배열\r\n    // dataOrder (객체 Array) : tbody의 각 row에서 [data]객체의 요소를 표시할 순서를 나열한 문자열 배열 \r\n    // data (객체 Array) : 원본데이터\r\n\r\n    return (\r\n        <ContentsTableWrap className=\"ContentsTable\">\r\n            <Table>\r\n                <tbody>\r\n                    <Row style={{borderWidth:\"2px\"}}>\r\n                    {\r\n                        desc.map( (el, index) => (\r\n                            <Th key={index}>{ el }</Th>\r\n                        ))\r\n                    }\r\n                    </Row>\r\n                </tbody>\r\n                \r\n                <tbody>\r\n                {\r\n                    data.map( (rowItem,index) => (\r\n                        <Row key={index}>\r\n                        {\r\n                            dataOrder.map( (colItem, index) => (\r\n                                <Td key={index}>{ rowItem[colItem] }</Td>\r\n                            ))\r\n                        }\r\n                        </Row>\r\n                    ))\r\n                }\r\n                </tbody>\r\n            </Table>\r\n        </ContentsTableWrap>\r\n    );\r\n}\r\n\r\n// style ========================================================\r\n//const SPACE = \"4px\";\r\nconst CELL_PADDING = \"8px\";\r\nconst BORDER_COLOR = \"#dbdbdb\";\r\n\r\nconst ContentsTableWrap = styled.div`\r\n    width : 100%;\r\n    border : 1px solid ${BORDER_COLOR};\r\n    border-bottom : 12px solid ${BORDER_COLOR};\r\n    border-radius : 8px;\r\n    `;\r\n\r\nconst Table = styled.table`\r\n    width : 100%;\r\n    text-align : center;\r\n    `;\r\n\r\nconst Row = styled.tr`\r\n    padding : ${CELL_PADDING};\r\n    border-bottom : 1px solid ${BORDER_COLOR};\r\n    `;\r\n\r\nconst Th = styled.th`\r\n    padding : ${CELL_PADDING};\r\n    `;\r\n\r\nconst Td = styled.td`\r\n    padding : ${CELL_PADDING};\r\n    `;\r\n// function =====================================================\r\n// *\r\n\r\n                ","// imported Modules =============================================\r\nimport { React, useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport { Popover, Button } from \"antd\"\r\nimport { DeleteOutlined } from \"@ant-design/icons\"\r\n\r\n// imported components ==========================================\r\n// *\r\n\r\n// Main Component ===============================================\r\nconst POPOVER_TITLE = \"정말로 지울까요?\";\r\n\r\nexport default function DeleteBtn({ setDeleteConfirm }) {\r\n    const [visible, setVisible] = useState(false);\r\n\r\n    const formContent = (\r\n        <div className=\"confirmContent\" style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n            <Button onClick={onConfirm} type=\"primary\" style={{ marginRight: \"4px\" }}>네</Button>\r\n            <Button onClick={onCancle}>아니요</Button>\r\n        </div>\r\n    );\r\n\r\n    function onConfirm() {\r\n        setDeleteConfirm(true);\r\n        setVisible(false);\r\n    }\r\n\r\n    function onCancle() {\r\n        setVisible(false);\r\n    }\r\n\r\n    return (\r\n        <DeleteBtnWrap className=\"DeleteBtn\">\r\n            <Popover\r\n                trigger=\"click\" visible={visible} onVisibleChange={(visible)=>{setVisible(visible)}}\r\n                placement=\"right\" title={POPOVER_TITLE} content={formContent} onClick={(e) => { setVisible(true); }}\r\n            >\r\n                <Button shape=\"circle\" icon={<DeleteOutlined />} />\r\n            </Popover>\r\n        </DeleteBtnWrap>\r\n    );\r\n}\r\n\r\n// style ========================================================\r\nconst DeleteBtnWrap = styled.div`\r\n\r\n    `;\r\n\r\n// function =====================================================\r\n// *","// imported Modules =============================================\r\nimport React, { useState, useEffect, useCallback } from 'react';\r\nimport axios from \"axios\";\r\n\r\nimport styled from 'styled-components';\r\nimport { Button, message, Tooltip } from \"antd\";\r\nimport { FormOutlined, QuestionCircleOutlined } from \"@ant-design/icons\"\r\n\r\n// imported components ==========================================\r\nimport ContentsTable from \"../../atoms/ContentsTable\";\r\nimport DeleteBtn from \"../../atoms/DeleteBtn\";\r\n\r\n// Main Component ===============================================\r\nexport default function MapsModalInfo({ labAccessInfo, selectedNyam, refreshMaps, setIsLoading, setMapsModalVisible, setNyamEditorModalVisible, setNyamEditorTaskType }) {\r\n    const [deleteConfirm, setDeleteConfirm] = useState(false);\r\n\r\n    const { accessManagerUrl, labId } = labAccessInfo;\r\n\r\n    const { open, close, description, menu } = selectedNyam;\r\n    const parsedMenu = JSON.parse(menu).menu;\r\n\r\n    const onDelete = useCallback(async () => {\r\n        setIsLoading(true);\r\n\r\n\r\n        const url = `${accessManagerUrl}?taskTarget=nyam&taskType=delete`;\r\n        const data = JSON.stringify({\r\n            nyam: selectedNyam,\r\n            labId: labId,\r\n        });\r\n\r\n        await axios.post(url, data);\r\n\r\n        await refreshMaps();\r\n        setMapsModalVisible(false);\r\n        setIsLoading(false);\r\n\r\n        message.success(\"냠이 역사의 뒤안길로 사라졌습니다\");\r\n    }, [setIsLoading, accessManagerUrl, labId, refreshMaps, selectedNyam, setMapsModalVisible]);\r\n\r\n    useEffect(() => {\r\n        if (deleteConfirm === true) {\r\n            onDelete();\r\n            setDeleteConfirm(false);\r\n        }\r\n    }, [deleteConfirm, onDelete]);\r\n\r\n\r\n\r\n    function openNyamEditor(e) {\r\n        setNyamEditorTaskType(\"edit\");\r\n        setMapsModalVisible(false);\r\n        setNyamEditorModalVisible(true);\r\n    }\r\n\r\n    return (\r\n        <MapsModalInfoWrap className=\"MapsModalInfo\">\r\n            {/* 우측 상단 도구 */}\r\n            <Tools>\r\n                <a href={`https://map.naver.com/v5/search/${removeSpace(selectedNyam.name)}`} target=\"_blank\" rel=\"noreferrer\">\r\n                    <Tooltip title=\"네이버지도\" placement=\"top\">\r\n                        <Button shape=\"circle\" icon={<QuestionCircleOutlined />} size=\"normal\" style={{ marginRight: SPACE }} />\r\n                    </Tooltip>\r\n                </a>\r\n                <Tooltip title=\"수정\" placement=\"top\">\r\n                    <Button shape=\"circle\" icon={<FormOutlined />} size=\"normal\" style={{ marginRight: SPACE }} onClick={openNyamEditor} />\r\n\r\n                </Tooltip>\r\n\r\n                <Tooltip title=\"삭제\" placement=\"top\">\r\n                    <DeleteBtn setDeleteConfirm={setDeleteConfirm} />\r\n                    {/* <Button shape=\"circle\" icon={<DeleteOutlined />} size=\"normal\" onClick={(e) => { onDelete(); }} /> */}\r\n                </Tooltip>\r\n            </Tools>\r\n\r\n            {/* 개요 */}\r\n            <Summary>\r\n                <div>\r\n                    <Title>영업시간</Title>\r\n                    <p>{open}~{close}</p>\r\n                </div>\r\n                <p style={{ marginLeft: \"8px\" }}>{description}</p>\r\n            </Summary>\r\n\r\n            {/* 메뉴목록 */}\r\n            <ContentsTable desc={[\"메뉴\", \"가격\"]} dataOrder={[\"name\", \"price\"]} data={parsedMenu} />\r\n        </MapsModalInfoWrap>\r\n    );\r\n}\r\n\r\n// style ========================================================\r\nconst SPACE = \"4px\";\r\n\r\nconst MapsModalInfoWrap = styled.div`\r\n    display : flex;\r\n    flex-direction : column;\r\n\r\n    flex : 1;\r\n    margin-right : ${\"8px\"}; \r\n\r\n    @media(max-width : 768px){\r\n        margin-right : 0;\r\n        margin-bottom : 8px;\r\n    }\r\n    `;\r\nconst Tools = styled.div`\r\n    display : flex;\r\n    justify-content : flex-end;\r\n    margin-bottom : ${SPACE};\r\n    `;\r\n\r\nconst Summary = styled.div`\r\n    display : flex;\r\n    `;\r\n\r\nconst Title = styled.p`\r\n    margin : 0;\r\n    font-weight : bold;\r\n    `;\r\n\r\n// function =====================================================\r\nfunction removeSpace(string) {\r\n    const str = string.split(' ').join('');\r\n    return str;\r\n}","// imported Modules =============================================\r\nimport React, {useState, useEffect} from 'react';\r\nimport styled from 'styled-components';\r\n\r\n// imported Components \r\nimport DeleteBtn from \"../../atoms/DeleteBtn\";\r\n\r\n// Main Component ===============================================\r\nexport default function Comment ({ index, content, onDelete }) {\r\n    const [deleteConfirm, setDeleteConfirm] = useState(false);\r\n    useEffect( () => {\r\n        if(deleteConfirm === true){\r\n            onDelete(index);\r\n            setDeleteConfirm(false);\r\n        }\r\n    }, [deleteConfirm, onDelete, index]);\r\n\r\n    return (\r\n        <CommentWrap className=\"Comment\">\r\n            <Content>{content}</Content>\r\n            <DeleteBtn setDeleteConfirm={setDeleteConfirm} />\r\n        </CommentWrap>\r\n    );\r\n}\r\n\r\n// style ========================================================\r\nconst SPACE = \"4px\";\r\n\r\nconst CommentWrap = styled.div`\r\n    display : flex;\r\n    justify-content : flex-end;\r\n\r\n    margin-top : ${SPACE};\r\n    `;\r\n\r\nconst Content = styled.p`\r\n    padding : ${SPACE};\r\n    border : 1px solid #DCDCDC;\r\n    border-radius : 8px;\r\n    margin : 0;\r\n    max-width : 100%;\r\n    margin-right : ${SPACE};\r\n    \r\n    word-break: break-all;\r\n    overflow-wrap: break-word;\r\n    `;\r\n\r\n// function =====================================================\r\n// *","// imported Modules =============================================\r\nimport React, { useCallback, useState } from 'react';\r\nimport axios from \"axios\";\r\n\r\nimport styled from 'styled-components';\r\n\r\nimport { Button, Tooltip, Input, Popover, message } from \"antd\";\r\nimport { EditOutlined, SmileOutlined } from \"@ant-design/icons\"\r\n\r\nimport Picker from 'emoji-picker-react';\r\n\r\n// imported components ==========================================\r\nimport Comment from \"./Comment\";\r\n\r\n// Main Component ===============================================\r\nexport default function MapsModalComment({ labAccessInfo, selectedNyam, refreshMaps, setIsLoading }) {\r\n    const [newComment, setNewComment] = useState('');\r\n    const commentsData = JSON.parse(selectedNyam.comment).comment;\r\n    const { accessManagerUrl, labId } = labAccessInfo;\r\n\r\n    async function onCreate(e) {\r\n        setIsLoading(true);\r\n\r\n        // 검증\r\n        if (newComment == null || newComment === '') {\r\n            setIsLoading(false);\r\n            return;\r\n        }\r\n\r\n        // 요청 데이터 준비`\r\n        const url = `${accessManagerUrl}?taskTarget=comment&taskType=edit`;\r\n        const data = JSON.stringify({\r\n            nyam: {\r\n                id: selectedNyam.id,\r\n                comment: JSON.stringify({ comment: [newComment, ...commentsData] }),\r\n            },\r\n            labId: labId,\r\n        });\r\n\r\n        // 요청\r\n        await axios.post(url, data);\r\n\r\n        // 리프레시\r\n        await refreshMaps();\r\n        setNewComment('');\r\n        message.success(\"의견이 작성되었습니다\")\r\n        setIsLoading(false);\r\n    }\r\n\r\n    const onDelete = useCallback(async (index) => {\r\n        setIsLoading(true);\r\n\r\n        // 요청 데이터 준비\r\n        const url = `${accessManagerUrl}?taskTarget=comment&taskType=edit`;\r\n        const data = JSON.stringify({\r\n            nyam: {\r\n                id: selectedNyam.id,\r\n                comment: JSON.stringify({ comment: [...commentsData.slice(0, index), ...commentsData.slice(index + 1)] }),\r\n            },\r\n            labId: labId,\r\n        });\r\n\r\n        // 요청\r\n        await axios.post(url, data);\r\n\r\n        // 리프레시\r\n        await refreshMaps();\r\n        message.success(\"의견이 삭제되었습니다\")\r\n        setIsLoading(false);\r\n    }, [accessManagerUrl, labId, selectedNyam, commentsData, setIsLoading, refreshMaps]);\r\n\r\n    return (\r\n        <MapsModalCommentWrap className=\"MapsModalComment\">\r\n            <Form>\r\n                <Input\r\n                    placeholder=\"새로운 의견을 적어주세요\"\r\n                    value={newComment} \r\n                    onChange={(e) => { setNewComment(e.target.value); }}\r\n                    onPressEnter={onCreate}\r\n\r\n                    style={{ borderRadius: \"8px\", marginRight: \"4px\" }}\r\n                    suffix={\r\n                        <Popover placement=\"bottom\" title={null} content={<Picker onEmojiClick={(e, obj) => { setNewComment(newComment + obj.emoji) }} />} trigger=\"click\">\r\n                            <Tooltip title=\"이모지\" placement=\"top\">\r\n                                <SmileOutlined />\r\n                            </Tooltip>\r\n                        </Popover>\r\n                    }\r\n                />\r\n\r\n                <Tooltip className=\"deleteComment\" title=\"쓰기\" placement=\"right\">\r\n                    <Button type=\"primary\" shape=\"circle\" icon={<EditOutlined />} size=\"normal\" onClick={onCreate} />\r\n                </Tooltip>\r\n            </Form>\r\n\r\n            <Comments>\r\n                {\r\n                    commentsData.map((item, index) => (\r\n                        <Comment key={index} index={index} content={item} onDelete={onDelete} />\r\n                    ))\r\n                }\r\n            </Comments>\r\n        </MapsModalCommentWrap>\r\n    );\r\n}\r\n\r\n// style ========================================================\r\nconst BORDER_COLOR = \"#dbdbdb\";\r\n\r\nconst MapsModalCommentWrap = styled.div`\r\n    display : flex;\r\n    flex-direction : column;\r\n\r\n    width : 40%;\r\n\r\n    margin-left : auto;\r\n    padding : 16px;\r\n\r\n    border : 1px solid ${BORDER_COLOR};\r\n    border-bottom : 12px solid ${BORDER_COLOR};\r\n    border-radius : 8px;\r\n\r\n    @media(max-width : 768px){\r\n        width : 100%;\r\n    }\r\n    `;\r\n\r\nconst Form = styled.div`\r\n    display :flex;\r\n    align-items : center;\r\n    `;\r\n\r\nconst Comments = styled.div`\r\n    display : flex;\r\n    flex-direction : column;\r\n    align-content : flex-end;\r\n    justify-content : flex-start;\r\n\r\n    height : 100%;\r\n\r\n    overflow-y: auto;\r\n    `;\r\n\r\n// function =====================================================\r\n// *","// imported Modules =============================================\r\nimport React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport { Modal } from 'antd';\r\n\r\n// imported components ==========================================\r\nimport MapsModalInfo from \"../followers/MapsModalInfo\";\r\nimport MapsModalComment from \"../followers/MapsModalComment\";\r\nimport Loading from \"../../../../ShareComponents/atoms/Loading\";\r\n\r\n// Main Component ===============================================\r\nexport default function MapsModal ({labAccessInfo, selectedNyam, refreshMaps, mapsModalVisible, setMapsModalVisible, setNyamEditorModalVisible, setNyamEditorTaskType}) {\r\n    const [ isLoading, setIsLoading ] = useState(false);\r\n\r\n    return (\r\n        selectedNyam != null\r\n            ?\r\n                <MapsModalWrap className=\"MapsModal\">\r\n                    <StyledModal\r\n                        title={selectedNyam.name}\r\n                        visible={mapsModalVisible}\r\n                        onCancel={() => { setMapsModalVisible(false) }}\r\n                        footer={null}\r\n                    >\r\n                        <ModalContentsWrap>\r\n                            <MapsModalInfo \r\n                                labAccessInfo={labAccessInfo} selectedNyam={selectedNyam} refreshMaps={refreshMaps} \r\n                                setIsLoading={setIsLoading} setMapsModalVisible={setMapsModalVisible} setNyamEditorModalVisible={setNyamEditorModalVisible} setNyamEditorTaskType={setNyamEditorTaskType}\r\n                            />\r\n                            <MapsModalComment labAccessInfo={labAccessInfo} selectedNyam={selectedNyam} refreshMaps={refreshMaps} setIsLoading={setIsLoading} />\r\n                        </ModalContentsWrap>\r\n\r\n                        <Loading isLoading={isLoading} />\r\n                    </StyledModal>\r\n                </MapsModalWrap>\r\n    \r\n            :   \r\n                <div></div>\r\n    );\r\n}\r\n\r\n// style ========================================================\r\nconst MapsModalWrap = styled.div`\r\n\r\n    `;\r\n\r\nconst ModalContentsWrap = styled.div`\r\n    display : flex;\r\n\r\n    @media(max-width : 768px){\r\n        flex-direction : column;\r\n    }\r\n`;\r\nconst StyledModal = styled(Modal)`\r\n    min-width : 50%;\r\n`;\r\n// function =====================================================\r\n// *","// imported Modules =============================================\r\nimport React, { useState, useEffect, useCallback } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\n\r\nimport { Modal, Input, TimePicker, Button, Divider, Select, message } from 'antd';\r\nimport { PlusOutlined, MinusOutlined } from \"@ant-design/icons\"\r\n\r\n// imported components\r\nimport Loading from \"../../../../ShareComponents/atoms/Loading\";\r\n\r\n// Main Component ===============================================\r\nimport DataStorage from \"../../../../DataStorage\";\r\nconst NYAM_TYPES = DataStorage(\"NYAM_TYPES\");\r\nconst NYAM_TYPES_KEY = DataStorage(\"NYAM_TYPES_KEY\");\r\n\r\nconst SUMMARY_INIT_VALUE = { name: null, description: null, open: null, close: null, type: null, lat: null, lng: null, comment: null };\r\nconst MENUITEM_INIT_VALUE = [{ name: '', price: '' }];\r\n\r\nexport default function NyamEditor({ labAccessInfo, taskType, pickCoord, defaultNyamValue, refreshMaps, nyamEditorModalVisible, setNyamEditorModalVisible, setIsPickmode, setMapsModalVisible }) {\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [resetLock, setResetLock] = useState(false); // 냠에디터를 닫았다 열었을 때, selectedNyam의 내용으로 초기화시킬지. ( false : 초기화함, true : 초기화 안함, null : 폼 업데이트됨 )\r\n\r\n    const [summary, setSummary] = useState(SUMMARY_INIT_VALUE);\r\n    const [menuItems, setMenuItems] = useState(MENUITEM_INIT_VALUE);\r\n\r\n    const { accessManagerUrl, labId } = labAccessInfo;\r\n    const title = (taskType === \"create\" ? \"새로운 냠 만들기\" : \"냠 수정하기\");\r\n\r\n    const initFormData = useCallback(() => {\r\n        if (taskType === \"edit\" && defaultNyamValue != null) {\r\n            // apply default value to \"summary\"\r\n            const tempSummary = { ...defaultNyamValue };\r\n            delete tempSummary.menu;\r\n            setSummary(tempSummary);\r\n\r\n            // apply default value to \"menuItems\"\r\n            let tempMenuItems = [];\r\n            tempMenuItems = (JSON.parse(defaultNyamValue.menu)).menu;\r\n            setMenuItems(tempMenuItems);\r\n\r\n        } else if (taskType === \"create\") {\r\n            setSummary({ ...SUMMARY_INIT_VALUE, lat: pickCoord.y, lng: pickCoord.x, comment: JSON.stringify({ \"comment\": [] }) });\r\n            setMenuItems(MENUITEM_INIT_VALUE)\r\n        }\r\n\r\n        setResetLock(null);\r\n    }, [defaultNyamValue, taskType, pickCoord]);\r\n\r\n    // 폼 초기값 지정.\r\n    useEffect(() => {\r\n        if (resetLock === false && nyamEditorModalVisible === true) {\r\n            initFormData();\r\n            setResetLock(null);\r\n        }\r\n    }, [resetLock, nyamEditorModalVisible, initFormData]);\r\n\r\n    // 좌표 수정 업데이트.\r\n    useEffect(() => {\r\n        if (nyamEditorModalVisible === true && resetLock === true) {\r\n            setSummary({ ...summary, lat: pickCoord.y, lng: pickCoord.x });\r\n            setResetLock(null);\r\n        }\r\n\r\n    }, [pickCoord, nyamEditorModalVisible, resetLock, summary])\r\n\r\n\r\n\r\n    // about onChange\r\n    function onChangeSummary(target, value) {\r\n        setSummary({ ...summary, [target]: value });\r\n    }\r\n    function onChangeMenuItems(index, type, value) {\r\n        setMenuItems([...menuItems.slice(0, index), { ...menuItems[index], [type]: value }, ...menuItems.slice(index + 1)]);\r\n    }\r\n\r\n    // add/remove menu item\r\n    function addNewMenuItem(index) { setMenuItems([...menuItems.slice(0, index), { name: '', price: '' }, ...menuItems.slice(index)]) }\r\n    function removeMenuItem(index) { setMenuItems([...menuItems.slice(0, index), ...menuItems.slice(index + 1)]); }\r\n\r\n    // about footer buttons.\r\n    function clearAll(e) {\r\n        const summaryReplace = {...SUMMARY_INIT_VALUE, id:summary.id, lat:summary.lat, lng:summary.lng, comment:summary.comment};\r\n\r\n        setSummary(summaryReplace);\r\n        setMenuItems(MENUITEM_INIT_VALUE);\r\n    }\r\n\r\n    async function onSubmit(e) {\r\n        setIsLoading(true);\r\n\r\n        const nyam = {};\r\n        Object.assign(nyam, summary);\r\n        \r\n        // 검증\r\n        for (let property of Object.keys(nyam)) {\r\n            if (nyam[property] === null || nyam[property] === \"\") {\r\n                message.warning(\"비어있는 정보를 채워넣어주세요!\");\r\n                setIsLoading(false);\r\n                return;\r\n            }\r\n        }\r\n\r\n        for (let item of menuItems) {\r\n            if (item.name === '' || item.price === '') {\r\n                message.warning(\"비어있는 정보를 채워넣어주세요!\");\r\n                setIsLoading(false);\r\n                return;\r\n            }\r\n        }\r\n\r\n        // 요청 데이터 준비\r\n        Object.assign(nyam, { \"menu\": JSON.stringify({ \"menu\": menuItems }) });\r\n        \r\n        try {\r\n            // 요청\r\n            const rawData = {\r\n                nyam : nyam,\r\n                labId : labId,\r\n            };\r\n            const data = JSON.stringify(rawData);\r\n            const url = `${accessManagerUrl}?taskTarget=nyam&taskType=${taskType}`;\r\n            await axios.post(url, data);\r\n\r\n            // 리프레시\r\n            await refreshMaps();\r\n            setNyamEditorModalVisible(false);\r\n            setResetLock(false);\r\n            setIsLoading(false);\r\n\r\n            // 완료메시지\r\n            if (taskType === \"create\") { message.success(\"새로운 냠을 만들었습니다!\"); }\r\n            else if (taskType === \"edit\") { message.success(\"냠이 수정되었습니다!\"); }\r\n        } catch (err) {\r\n            setIsLoading(false);\r\n            console.error(err);\r\n            message.error(\"앗, 뭔가 잘못됐습니다. 다시 시도해주세요\", 2.0);\r\n        }\r\n    }\r\n\r\n    function onClose(e) {\r\n        setNyamEditorModalVisible(false);\r\n        setResetLock(false);\r\n        if (taskType === \"edit\") {\r\n            setMapsModalVisible(true);\r\n        }\r\n    }\r\n\r\n    function onCoordEdit(e) {\r\n        message.info(\"냠의 새로운 위치를 정해주세요\", 5);\r\n        setResetLock(true);\r\n        setNyamEditorModalVisible(false);\r\n        setIsPickmode(true);\r\n    }\r\n\r\n    return (\r\n        <NyamEditorWrap className=\"NyamEditor\">\r\n            <Modal\r\n                title={title}\r\n                visible={nyamEditorModalVisible}\r\n                onCancel={onClose}\r\n                footer={null}\r\n            >\r\n                <SummaryWrap>\r\n                    <Divider>개요</Divider>\r\n\r\n                    <Coord>\r\n                        <span style={{ marginRight: \"8px\", textAlign: \"center\" }}>{`위도 ${summary.lat}`}</span>\r\n                        <span style={{ marginRight: \"8px\", textAlign: \"center\" }}>{`경도 ${summary.lng}`}</span>\r\n                        <Button onClick={onCoordEdit} >위치 수정</Button>\r\n                    </Coord>\r\n\r\n                    <StyledInput name=\"name\" placeholder=\"가게 이름\" value={summary.name} onChange={(e) => { onChangeSummary(e.target.name, e.target.value) }} />\r\n                    <StyledInput name=\"description\" placeholder=\"설명\" value={summary.description} onChange={(e) => { onChangeSummary(e.target.name, e.target.value) }} />\r\n\r\n                    <TimePickersWrap>\r\n                        <TimePicker\r\n                            name=\"openTime\" format=\"HH:mm\" placeholder=\"문 여는 시간\" value={summary.open ? moment(summary.open, \"HH:mm\") : null}\r\n                            onChange={(time, timeString) => { onChangeSummary(\"open\", timeString); }} style={{ flexGrow: \"1\", marginRight: SPACE }}\r\n                            minuteStep={5}\r\n                        />\r\n                        <TimePicker\r\n                            name=\"closeTime\" format=\"HH:mm\" placeholder=\"문 닫는 시간\" value={summary.close ? moment(summary.close, \"HH:mm\") : null}\r\n                            onChange={(time, timeString) => { onChangeSummary(\"close\", timeString); }} style={{ flexGrow: \"1\" }}\r\n                            minuteStep={5}\r\n                        />\r\n                    </TimePickersWrap>\r\n\r\n                    <Select placeholder=\"유형을 골라주세요\" value={summary.type} onChange={(value) => { onChangeSummary(\"type\", value); }}>\r\n                        {NYAM_TYPES_KEY.map((key, index) => (<Select.Option value={key} key={index}>{NYAM_TYPES[key]}</Select.Option>))}\r\n                    </Select>\r\n                </SummaryWrap>\r\n\r\n                <MenusWrap>\r\n                    <Divider>메뉴</Divider>\r\n\r\n                    {menuItems.map((item, index) => MenuItem(index, item.name, item.price, addNewMenuItem, removeMenuItem, onChangeMenuItems))}\r\n                    <StyledButton shape=\"circle\" icon={<PlusOutlined />} style={{}} onClick={(e) => { addNewMenuItem(menuItems.length) }} />\r\n\r\n                    <Divider />\r\n                </MenusWrap>\r\n\r\n                <ButtonsWrap>\r\n                    <Button type=\"link\" onClick={clearAll}>모두 지우기</Button>\r\n                    <Button onClick={onSubmit} style={{ marginLeft: \"auto\" }}>저장</Button>\r\n                </ButtonsWrap>\r\n\r\n                <Loading isLoading={isLoading} />\r\n            </Modal>\r\n        </NyamEditorWrap>\r\n    );\r\n}\r\n\r\n// style ========================================================\r\nconst SPACE = \"4px\";\r\n\r\n// -- antd redefined style\r\nconst StyledInput = styled(Input)`\r\n    margin-bottom : ${SPACE};\r\n    `;\r\n\r\nconst StyledButton = styled(Button)`\r\n    margin-right : ${SPACE};\r\n    `;\r\n\r\n// -- user defined style\r\nconst NyamEditorWrap = styled.div``;\r\n\r\nconst SummaryWrap = styled.div`\r\n    display : flex;\r\n    flex-direction : column;\r\n    align-items : stretch;\r\n    `;\r\n\r\nconst Coord = styled.div`\r\n    display : flex;\r\n    justify-content : flex-end;\r\n    align-items : center;\r\n\r\n    margin-bottom : ${SPACE}\r\n    `;\r\n\r\nconst TimePickersWrap = styled.div`\r\n    display : flex;\r\n    margin-bottom : ${SPACE}\r\n    `;\r\n\r\nconst MenusWrap = styled.div``;\r\n\r\nconst MenuItemWrap = styled.div`\r\n    display : flex;\r\n    `;\r\n\r\nconst ButtonsWrap = styled.div`\r\n    display : flex;\r\n    `;\r\n\r\n// function =====================================================\r\n// *\r\n\r\n// 유사 컴포넌트 ================================================\r\nfunction MenuItem(index, name, price, addNewMenuItem, removeMenuItem, onChangeMenuItems) {\r\n    return (\r\n        <MenuItemWrap key={index}>\r\n            <StyledButton shape=\"circle\" icon={<PlusOutlined />} style={{}} onClick={(e) => { addNewMenuItem(index); }} />\r\n            <StyledButton shape=\"circle\" icon={<MinusOutlined />} onClick={(e) => { removeMenuItem(index) }} />\r\n\r\n            <StyledInput placeholder=\"메뉴 이름\" value={name} style={{ marginRight: SPACE }} onChange={(e) => { onChangeMenuItems(index, \"name\", e.target.value); }} />\r\n            <StyledInput placeholder=\"메뉴 가격\" value={price} onChange={(e) => { onChangeMenuItems(index, \"price\", e.target.value); }} />\r\n        </MenuItemWrap>\r\n    )\r\n}\r\n","export default function naverMapsinit(setting) {\r\n    const { lat, lng, zoom } = setting;\r\n    \r\n    const mapOptions = {\r\n        center: new window.naver.maps.LatLng(lat, lng),\r\n        zoom: zoom,\r\n    };\r\n    const map = new window.naver.maps.Map(\"map\", mapOptions);\r\n\r\n    return map;\r\n}","import axios from \"axios\";\r\nimport { message } from \"antd\";\r\n\r\nexport default async function readContents(labAccessInfo) {\r\n    try {\r\n        const {accessManagerUrl, labId} = labAccessInfo;\r\n\r\n        const { data : {data, status} } = await axios.get(`${accessManagerUrl}?labId=${labId}`);\r\n\r\n        if(status!=='error'){\r\n            return { \r\n                rawNyamList : data.nyamList,\r\n                setting : data.setting[0],\r\n            };\r\n        } else {\r\n            throw new Error(`응답 status가 ${status}입니다.`);\r\n        }\r\n        \r\n    } catch (err) {\r\n        message.error({\r\n            content : '문제가 생겨 데이터를 받아오지 못했습니다.',\r\n            duration : 0,\r\n            key : 'readContents_01',\r\n            onClick : (e)=>{message.destroy('readContents_01');},\r\n        });\r\n        console.error(err);\r\n        return null;\r\n    }\r\n}","import { message } from \"antd\";\r\n\r\nexport default function createNyamMarkers (map, nyamTypes, nyamList, setMarkers, setNyams, setMapsModalVisible, setSelectedNyam) {\r\n    // initialize temp variable for states\r\n    const tempNyams = initWithNyamtype(nyamTypes);\r\n    const tempMarkers = initWithNyamtype(nyamTypes);\r\n    \r\n    // create markers\r\n    try {\r\n        nyamList.forEach( item => { \r\n            const marker = new window.naver.maps.Marker({\r\n                position : new window.naver.maps.LatLng(item.lat, item.lng),\r\n                map : map,\r\n                icon : {\r\n                    content: [\r\n                        '<div>',\r\n                            '<div style=\"background-color:rgba(255,255,255,0.8); padding:5px; border-radius:16px; border:1px solid #d9d9d9;\">',\r\n                                `<span style=\"white-space:nowrap;\">${item.name}</span>`,\r\n                            '</div>',\r\n                            `<img src=\"img/icons/svg/${item.type}.svg\">`,\r\n                        '</div>'\r\n                    ].join(''),\r\n    \r\n                    anchor: new window.naver.maps.Point(16, 48),\r\n                }\r\n            });\r\n    \r\n            marker.addListener(\"click\", (e) => {\r\n                const targetid = e.overlay[\"_nmarker_id\"];\r\n                const types = nyamTypes;\r\n    \r\n                for( let i = 0; i<types.length; i++){\r\n                    const type = types[i];\r\n                    let chk = false;\r\n                    for( let j=0; j<tempMarkers[type].length; j++ ){\r\n                        if ( targetid === tempMarkers[type][j][\"_nmarker_id\"] ){\r\n                            setSelectedNyam(tempNyams[type][j]);\r\n                            setMapsModalVisible(true);\r\n                            chk = true;\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (chk) { break; }\r\n                }\r\n            });\r\n    \r\n            tempNyams[item.type].push(item);\r\n            tempMarkers[item.type].push(marker);\r\n        });\r\n\r\n        setNyams(tempNyams);\r\n        setMarkers(tempMarkers);\r\n    } catch(err) {\r\n        console.error(err);\r\n        console.error(nyamList);\r\n        message.error({\r\n            content : '데이터를 표시하는 과정에 문제가 생겼습니다. 새로고침을 시도해주세요',\r\n            duration : 0,\r\n            key : 'createNyamMakers_01',\r\n            onClick : (e)=>{message.destroy('createNyamMakers_01');},\r\n        });\r\n    }\r\n}\r\n\r\n\r\nfunction initWithNyamtype (types) {\r\n    let obj = {};\r\n    types.forEach( category => {\r\n        obj[category] = [];\r\n    });\r\n\r\n    return obj;\r\n}","export default function createCenterMarker(map, setting) {\r\n    const { lat, lng } = setting;\r\n\r\n    //const marker = \r\n    new window.naver.maps.Marker({\r\n        position: new window.naver.maps.LatLng(lat, lng),\r\n        map: map,\r\n        icon: {\r\n          url : `img/icons/svg/center.svg`,\r\n          size: new window.naver.maps.Size(48, 48),\r\n          origin: new window.naver.maps.Point(0, 0),\r\n        }\r\n    });\r\n\r\n    return 0;\r\n}","// imported Modules =============================================\r\nimport { React, useState, useEffect } from \"react\";\r\nimport ScriptTag from \"react-script-tag\";\r\nimport styled from \"styled-components\";\r\n\r\n// imported components ==========================================\r\nimport MapsModal from \"./leaders/MapsModal\";\r\nimport NyamEditor from \"./followers/NyamEditor\";\r\nimport Loading from \"../../../ShareComponents/atoms/Loading\";\r\n\r\n// imported supporters ==========================================\r\nimport DataStorage from \"../../../DataStorage\";\r\nimport initNaverMaps from \"../supporters/initNaverMaps\";\r\nimport readContents from \"../supporters/readContents\";\r\nimport createNyamMarkers from \"../supporters/createNyamMarkers\";\r\nimport createCenterMarker from \"../supporters/createCenterMarker\";\r\nimport { message } from \"antd\";\r\n\r\n// Main Component ===============================================\r\nlet map = null; // naver maps object\r\n\r\nconst MAP_SOURCE = DataStorage(\"MAP_SOURCE\");\r\nconst NYAM_TYPES = DataStorage(\"NYAM_TYPES_KEY\");\r\n\r\nexport default function Maps({ filters, isPickmode, nyamEditorTaskType, setIsPickmode, setNyamEditorTaskType, labAccessInfo }) {\r\n    const [nyams, setNyams] = useState(null);\r\n    const [markers, setMarkers] = useState(null);\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [selectedNyam, setSelectedNyam] = useState(null);\r\n    const [pickCoord, setPickCoord] = useState({ x: 0, y: 0 }); // 새로 추가할 냠의 좌표값. { x : 123, y : 123 }\r\n\r\n    const [mapsModalVisible, setMapsModalVisible] = useState(false);\r\n    const [nyamEditorModalVisible, setNyamEditorModalVisible] = useState(false);\r\n\r\n    // 마커 visible 속성 변경\r\n    useEffect(() => {\r\n        if (markers !== null) {\r\n            setMarkersVisible(filters, setIsLoading, markers);\r\n        }\r\n    }, [filters, markers]);\r\n\r\n    // 마커위치 선택\r\n    useEffect(() => {\r\n        if (map != null) {\r\n            if (isPickmode === true) {\r\n                map.setCursor(\"Crosshair\");\r\n                const listener = window.naver.maps.Event.addListener(map, 'click', function (e) { // 클릭이 들어왔으면\r\n                    if (isPickmode === true) {\r\n                        const { x, y } = e.coord;\r\n                        setPickCoord({ x, y }); // 좌표값 저장하고\r\n                        setIsPickmode(false); // 선택모드 끄고\r\n                        setNyamEditorModalVisible(true); // 냠에디터 켜\r\n                        window.naver.maps.Event.removeListener(listener);\r\n                    }\r\n                });\r\n            } else if (isPickmode === false) {\r\n                map.setCursor(\"Move\");\r\n            }\r\n        }\r\n    }, [isPickmode, setIsPickmode]);\r\n\r\n    // 지도 refreshMaps() 된다음, selectedNyam내용 업데이트\r\n    useEffect(() => {\r\n        if (selectedNyam != null) {\r\n            const { type, id } = selectedNyam;\r\n            const index = nyams[type].findIndex(nyam => nyam.id === id)\r\n            setSelectedNyam(nyams[type][index]);\r\n        }\r\n    }, [nyams, selectedNyam]);\r\n\r\n    async function refreshMaps() {\r\n        // 기존의 마커 모두 삭제하기\r\n        for (let arr of Object.values(markers)) {\r\n            arr.forEach(marker => {\r\n                marker.setMap(null);\r\n            });\r\n        }\r\n\r\n        // 다시 만들기\r\n        const { rawNyamList, setting } = await readContents(labAccessInfo);\r\n        createNyamMarkers(map, NYAM_TYPES, rawNyamList, setMarkers, setNyams, setMapsModalVisible, setSelectedNyam);\r\n        createCenterMarker(map, setting);\r\n        // 이후 바로 위 useEffect에서 selectedNyam 내용 갱신.\r\n    }\r\n\r\n    return (\r\n        <MapsWrap className=\"Maps\">\r\n            <ScriptTag\r\n                type=\"text/javascript\" src={MAP_SOURCE}\r\n                onLoad={async () => {\r\n                    setIsLoading(true);\r\n                    const contents = await readContents(labAccessInfo);\r\n                    if (!contents) {\r\n                        setIsLoading(false);\r\n                        return;\r\n                    }\r\n                    const { rawNyamList, setting } = contents;\r\n                    \r\n                    map = initNaverMaps(setting);\r\n                    createNyamMarkers(map, NYAM_TYPES, rawNyamList, setMarkers, setNyams, setMapsModalVisible, setSelectedNyam);\r\n                    createCenterMarker(map, setting);\r\n                    \r\n                    message.destroy();\r\n                    message.success('연구소의 모든 내용을 잘 불러왔어요!')\r\n                    setIsLoading(false);\r\n                }}\r\n            />\r\n            <Map id=\"map\"></Map>\r\n\r\n            <MapsModal\r\n                labAccessInfo={labAccessInfo} selectedNyam={selectedNyam}\r\n                refreshMaps={refreshMaps}\r\n                mapsModalVisible={mapsModalVisible} setMapsModalVisible={setMapsModalVisible}\r\n                setNyamEditorModalVisible={setNyamEditorModalVisible} setNyamEditorTaskType={setNyamEditorTaskType}\r\n            />\r\n\r\n            <NyamEditor\r\n                labAccessInfo={labAccessInfo} taskType={nyamEditorTaskType} pickCoord={pickCoord} defaultNyamValue={selectedNyam}\r\n                refreshMaps={refreshMaps}\r\n                nyamEditorModalVisible={nyamEditorModalVisible} setNyamEditorModalVisible={setNyamEditorModalVisible}\r\n                setIsPickmode={setIsPickmode} setMapsModalVisible={setMapsModalVisible}\r\n            />\r\n\r\n            <Loading isLoading={isLoading} />\r\n        </MapsWrap>\r\n    );\r\n}\r\n\r\n// style ========================================================\r\nconst MapsWrap = styled.div`\r\n    display : flex;\r\n    flex : 1;\r\n    `;\r\n\r\nconst Map = styled.div`\r\n    width: 100%;\r\n    height : 100%;\r\n    `;\r\n\r\n// function =====================================================\r\nfunction setMarkersVisible(filters, setIsLoading, markers) {\r\n    setIsLoading(true);\r\n\r\n    const types = NYAM_TYPES; // 정의되어있는 type배열 불러오기\r\n\r\n    types.forEach(type => {\r\n        const target = markers[type]; // markers의 한 type을 대상으로 정함\r\n        if (target.length === 0) { return; } // 대상이 비어있으면 바로 함수종료\r\n\r\n        const dest = filters[type]; // 업데이트 하려고 하는 값\r\n        if (target[0].getVisible() !== dest) { // target안의 첫번째 마커의 visible속성과, 업데이트 하려고 하는 값이 다르면 (어차피 첫번째 마커 visible값이랑, 전체 마커 visible값이랑 똑같을거기 때문)\r\n            target.forEach(marker => { marker.setVisible(dest); }); // 업데이트!\r\n            return;\r\n        }\r\n    });\r\n\r\n    setIsLoading(false);\r\n}","// imported Modules =============================================\r\nimport React, { useState } from 'react';\r\nimport styled from \"styled-components\";\r\n      //import {notification} from \"antd\";\r\n\r\n// imported components ==========================================\r\nimport Header from \"./components/Header/Header\";\r\nimport Maps from \"./components/Maps/Maps\";\r\nimport Footer from \"../ShareComponents/atoms/Footer\";\r\n\r\n// Main Component ===============================================\r\nexport default function App({location, history}) {\r\n  const [filters, setFilters] = useState({});\r\n  const [isPickmode, setIsPickmode] = useState(false); // 현재 '새로운 냠'버튼을 눌러 새로운 위치를 찍는 상태인지\r\n  const [nyamEditorTaskType, setNyamEditorTaskType] = useState(null); // 냠에디터 taskType : create / edit\r\n\r\n  const labAccessInfo = location.state;\r\n  \r\n  return (\r\n    <AppWrap className=\"App\" style={{ cursor : (isPickmode ? 'Crosshair' : 'auto') }}>\r\n      <Header setFilters={setFilters} setIsPickmode={setIsPickmode} setNyamEditorTaskType={setNyamEditorTaskType} />\r\n      <Maps \r\n        filters={filters} \r\n        isPickmode={isPickmode} setIsPickmode={setIsPickmode}\r\n        nyamEditorTaskType={nyamEditorTaskType} setNyamEditorTaskType={setNyamEditorTaskType} \r\n        labAccessInfo={labAccessInfo}  \r\n      />\r\n      <Footer />\r\n    </AppWrap>\r\n  );\r\n}\r\n\r\n// style ========================================================\r\nconst AppWrap = styled.div`\r\n  display : flex;\r\n  flex-direction : column;\r\n  height : 100%;\r\n`;\r\n\r\n\r\n","// imported Modules =============================================\r\nimport React from 'react';\r\nimport { BrowserRouter, Route } from \"react-router-dom\";\r\nimport styled from 'styled-components';\r\n\r\n// imported components ==========================================\r\nimport Home from \"./Home/Home\";\r\nimport App from \"./App/App\";\r\n\r\n// Main Component ===============================================\r\nexport default function NyamNyamLab() {\r\n    return (\r\n        <NyamNyamLabWrap className=\"NyamNyamLab\">\r\n            <BrowserRouter>\r\n                <Route path=\"/\" exact={true} component={Home}/>\r\n                <Route path=\"/app\" component={App} />\r\n            </BrowserRouter>\r\n        </NyamNyamLabWrap>\r\n    );\r\n}\r\n\r\n// style ========================================================\r\nconst NyamNyamLabWrap = styled.div`\r\n    width : 100%;\r\n    height : 100%;\r\n    `;\r\n\r\n// function =====================================================\r\n// *","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './index.css';\r\nimport NyamNyamLab from './NyamNyamLab';\r\n\r\nReactDOM.render(\r\n    // <React.StrictMode>\r\n    //   <App />\r\n    // </React.StrictMode>,\r\n    \r\n    <NyamNyamLab />,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}